name: Python Publish to PYPI
on:
  # Automatic release based on either creating a published release or
  # publishing a draft release (creating a draft release will not trigger the
  # "release" event type according to the docs).
  # The workflow file version used is that from the tag corresponding to the
  # release. This is why the "workflow_dispatch" trigger is configured as well:
  # in case we need to manually re-publish a tag using a modified workflow
  release:
    types: [created, published]

  workflow_dispatch:
    inputs:
      tag:
        description: 'tag to release'
        required: true

defaults:
  run:
    shell: bash
    working-directory: python/

jobs:
  setref:
    if: >
      (startsWith(github.event.release.tag_name, 'looker_sdk') &&
      !github.event.release.draft &&
      !github.event.release.prerelease) ||
      (github.event.inputs)
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.workflow.tag || steps.release.tag }}
    steps:
      - id: workflow
        if: github.event.inputs
        run: echo "::set-output name=tag::${{ github.event.inputs.tag }}"
      - id: release
        if: startsWith(github.event.release.tag_name, 'looker_sdk')
        run: echo "::set-output name=tag::${{ github.event.release.tag_name }}"

  publish:
    needs: setref
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ needs.setref.outputs.tag }}

      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Package release artifacts
        run: |
          pip install wheel
          python setup.py sdist bdist_wheel

      - uses: pypa/gh-action-pypi-publish@v1.4.1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: python/dist/
