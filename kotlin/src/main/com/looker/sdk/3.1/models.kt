/**

 MIT License

 Copyright (c) 2019 Looker Data Sciences, Inc.

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in all
 copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 SOFTWARE.

 */

/**
 * 252 API models: 184 Spec, 0 Request, 51 Write, 17 Enum
 */


// NOTE: Do not edit this file generated by Looker SDK Codegen for Looker 7.10 API 3.1

package com.looker.sdk.api31

import com.looker.rtl.*
import java.io.Serializable
import java.util.*

data class AccessToken (
  /**
   * Access Token used for API calls (read-only)
   */
  var access_token: String? = null,
  /**
   * Type of Token (read-only)
   */
  var token_type: String? = null,
  /**
   * Number of seconds before the token expires (read-only)
   */
  var expires_in: Long? = null
) : Serializable

/**
 * The appropriate horizontal text alignment the values of this field shoud be displayed in. Valid values are: "left", "right".
 */
enum class Align : Serializable {
  left,
  right
}

data class ApiSession (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * The id of active workspace for this session
   */
  var workspace_id: String? = null,
  /**
   * The id of the actual user in the case when this session represents one user sudo'ing as another (read-only)
   */
  var sudo_user_id: Long? = null
) : Serializable

data class ApiVersion (
  /**
   * Current Looker release version number (read-only)
   */
  var looker_release_version: String? = null,
  var current_version: ApiVersionElement? = null,
  /**
   * Array of versions supported by this Looker instance (read-only)
   */
  var supported_versions: Array<ApiVersionElement>? = null
) : Serializable

data class ApiVersionElement (
  /**
   * Version number as it appears in '/api/xxx/' urls (read-only)
   */
  var version: String? = null,
  /**
   * Full version number including minor version (read-only)
   */
  var full_version: String? = null,
  /**
   * Status of this version (read-only)
   */
  var status: String? = null,
  /**
   * Url for swagger.json for this version (read-only)
   */
  var swagger_url: UriString? = null
) : Serializable

data class BackupConfiguration (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Type of backup: looker-s3 or custom-s3
   */
  var type: String? = null,
  /**
   * Name of bucket for custom-s3 backups
   */
  var custom_s3_bucket: String? = null,
  /**
   * Name of region where the bucket is located
   */
  var custom_s3_bucket_region: String? = null,
  /**
   * (Write-Only) AWS S3 key used for custom-s3 backups
   */
  var custom_s3_key: String? = null,
  /**
   * (Write-Only) AWS S3 secret used for custom-s3 backups
   */
  var custom_s3_secret: String? = null,
  /**
   * Link to get this item (read-only)
   */
  var url: UriString? = null
) : Serializable

/**
 * Field category Valid values are: "parameter", "filter", "measure", "dimension".
 */
enum class Category : Serializable {
  parameter,
  filter,
  measure,
  dimension
}

data class ColorCollection (
  /**
   * Unique Id (read-only)
   */
  var id: String? = null,
  /**
   * Label of color collection
   */
  var label: String? = null,
  /**
   * Array of categorical palette definitions
   */
  var categoricalPalettes: Array<DiscretePalette>? = null,
  /**
   * Array of discrete palette definitions
   */
  var sequentialPalettes: Array<ContinuousPalette>? = null,
  /**
   * Array of diverging palette definitions
   */
  var divergingPalettes: Array<ContinuousPalette>? = null
) : Serializable

data class ColorStop (
  /**
   * CSS color string
   */
  var color: String? = null,
  /**
   * Offset in continuous palette (0 to 100)
   */
  var offset: Long? = null
) : Serializable

data class ContentFavorite (
  /**
   * Unique Id (read-only)
   */
  var id: Long? = null,
  /**
   * User Id which owns this ContentFavorite
   */
  var user_id: Long? = null,
  /**
   * Content Metadata Id associated with this ContentFavorite
   */
  var content_metadata_id: Long? = null,
  /**
   * Id of a look (read-only)
   */
  var look_id: Long? = null,
  /**
   * Id of a dashboard (read-only)
   */
  var dashboard_id: Long? = null,
  var look: LookBasic? = null,
  var dashboard: DashboardBase? = null
) : Serializable

data class ContentMeta (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Unique Id (read-only)
   */
  var id: Long? = null,
  /**
   * Name or title of underlying content (read-only)
   */
  var name: String? = null,
  /**
   * Id of Parent Content (read-only)
   */
  var parent_id: Long? = null,
  /**
   * Id of associated dashboard when content_type is "dashboard" (read-only)
   */
  var dashboard_id: String? = null,
  /**
   * Id of associated look when content_type is "look" (read-only)
   */
  var look_id: Long? = null,
  /**
   * Id of associated folder when content_type is "space" (read-only)
   */
  var folder_id: String? = null,
  /**
   * Content Type ("dashboard", "look", or "space") (read-only)
   */
  var content_type: String? = null,
  /**
   * Whether content inherits its access levels from parent
   */
  var inherits: Boolean? = null,
  /**
   * Id of Inherited Content (read-only)
   */
  var inheriting_id: Long? = null,
  /**
   * Content Slug (read-only)
   */
  var slug: String? = null,
  /**
   * Id of associated space when content_type is "space" (read-only)
   */
  var space_id: String? = null
) : Serializable

data class ContentMetaGroupUser (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Unique Id (read-only)
   */
  var id: String? = null,
  /**
   * Id of associated Content Metadata (read-only)
   */
  var content_metadata_id: String? = null,
  /**
   * Type of permission: "view" or "edit" Valid values are: "view", "edit". (read-only)
   */
  var permission_type: PermissionType? = null,
  /**
   * ID of associated group (read-only)
   */
  var group_id: Long? = null,
  /**
   * ID of associated user (read-only)
   */
  var user_id: Long? = null
) : Serializable

data class ContentValidation (
  /**
   * A list of content errors (read-only)
   */
  var content_with_errors: Array<ContentValidatorError>? = null,
  /**
   * Duration of content validation in seconds (read-only)
   */
  var computation_time: Float? = null,
  /**
   * The number of looks validated (read-only)
   */
  var total_looks_validated: Long? = null,
  /**
   * The number of dashboard elements validated (read-only)
   */
  var total_dashboard_elements_validated: Long? = null,
  /**
   * The number of dashboard filters validated (read-only)
   */
  var total_dashboard_filters_validated: Long? = null,
  /**
   * The number of scheduled plans validated (read-only)
   */
  var total_scheduled_plans_validated: Long? = null,
  /**
   * The number of explores used across all content validated (read-only)
   */
  var total_explores_validated: Long? = null
) : Serializable

data class ContentValidationDashboard (
  /**
   * Description
   */
  var description: String? = null,
  /**
   * Unique Id (read-only)
   */
  var id: String? = null,
  var folder: ContentValidationFolder? = null,
  /**
   * Dashboard Title
   */
  var title: String? = null,
  var space: ContentValidationSpace? = null
) : Serializable

data class ContentValidationDashboardElement (
  /**
   * Text tile body text
   */
  var body_text: String? = null,
  /**
   * Id of Dashboard
   */
  var dashboard_id: String? = null,
  /**
   * Unique Id (read-only)
   */
  var id: String? = null,
  /**
   * Id Of Look
   */
  var look_id: String? = null,
  /**
   * Note Display
   */
  var note_display: String? = null,
  /**
   * Note State
   */
  var note_state: String? = null,
  /**
   * Note Text
   */
  var note_text: String? = null,
  /**
   * Note Text as Html (read-only)
   */
  var note_text_as_html: String? = null,
  /**
   * Id Of Query
   */
  var query_id: Long? = null,
  /**
   * Text tile subtitle text
   */
  var subtitle_text: String? = null,
  /**
   * Title of dashboard element
   */
  var title: String? = null,
  /**
   * Whether title is hidden
   */
  var title_hidden: Boolean? = null,
  /**
   * Text tile title
   */
  var title_text: String? = null,
  /**
   * Type
   */
  var type: String? = null
) : Serializable

data class ContentValidationDashboardFilter (
  /**
   * Unique Id (read-only)
   */
  var id: String? = null,
  /**
   * Id of Dashboard (read-only)
   */
  var dashboard_id: String? = null,
  /**
   * Name of filter
   */
  var name: String? = null,
  /**
   * Title of filter
   */
  var title: String? = null,
  /**
   * Type of filter: one of date, number, string, or field
   */
  var type: String? = null,
  /**
   * Default value of filter
   */
  var default_value: String? = null,
  /**
   * Model of filter (required if type = field)
   */
  var model: String? = null,
  /**
   * Explore of filter (required if type = field)
   */
  var explore: String? = null,
  /**
   * Dimension of filter (required if type = field)
   */
  var dimension: String? = null
) : Serializable

data class ContentValidationError (
  /**
   * Error message (read-only)
   */
  var message: String? = null,
  /**
   * Name of the field involved in the error (read-only)
   */
  var field_name: String? = null,
  /**
   * Name of the model involved in the error (read-only)
   */
  var model_name: String? = null,
  /**
   * Name of the explore involved in the error (read-only)
   */
  var explore_name: String? = null,
  /**
   * Whether this validation error is removable (read-only)
   */
  var removable: Boolean? = null
) : Serializable

data class ContentValidationFolder (
  /**
   * Unique Name
   */
  var name: String,
  /**
   * Unique Id (read-only)
   */
  var id: String? = null
) : Serializable

data class ContentValidationLook (
  /**
   * Unique Id (read-only)
   */
  var id: Long? = null,
  /**
   * Look Title
   */
  var title: String? = null,
  var folder: ContentValidationFolder? = null,
  var space: ContentValidationSpace? = null
) : Serializable

data class ContentValidationScheduledPlan (
  /**
   * Name of this scheduled plan
   */
  var name: String? = null,
  /**
   * Id of a look
   */
  var look_id: Long? = null,
  /**
   * Unique Id (read-only)
   */
  var id: Long? = null
) : Serializable

data class ContentValidationSpace (
  /**
   * Unique Name
   */
  var name: String,
  /**
   * Unique Id (read-only)
   */
  var id: String? = null
) : Serializable

data class ContentValidatorError (
  var look: ContentValidationLook? = null,
  var dashboard: ContentValidationDashboard? = null,
  var dashboard_element: ContentValidationDashboardElement? = null,
  var dashboard_filter: ContentValidationDashboardFilter? = null,
  var scheduled_plan: ContentValidationScheduledPlan? = null,
  /**
   * A list of errors found for this piece of content (read-only)
   */
  var errors: Array<ContentValidationError>? = null,
  /**
   * An id unique to this piece of content for this validation run (read-only)
   */
  var id: String? = null
) : Serializable

data class ContentView (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Unique Id (read-only)
   */
  var id: Long? = null,
  /**
   * Id of viewed Look (read-only)
   */
  var look_id: Long? = null,
  /**
   * Id of the viewed Dashboard (read-only)
   */
  var dashboard_id: Long? = null,
  /**
   * Content metadata id of the Look or Dashboard (read-only)
   */
  var content_metadata_id: Long? = null,
  /**
   * Id of user content was viewed by (read-only)
   */
  var user_id: Long? = null,
  /**
   * Id of group content was viewed by (read-only)
   */
  var group_id: Long? = null,
  /**
   * Number of times piece of content was viewed (read-only)
   */
  var view_count: Long? = null,
  /**
   * Number of times piece of content was favorited (read-only)
   */
  var favorite_count: Long? = null,
  /**
   * Date the piece of content was last viewed (read-only)
   */
  var last_viewed_at: String? = null,
  /**
   * Week start date for the view and favorite count during that given week (read-only)
   */
  var start_of_week_date: String? = null
) : Serializable

data class ContinuousPalette (
  /**
   * Unique identity string (read-only)
   */
  var id: String? = null,
  /**
   * Label for palette
   */
  var label: String? = null,
  /**
   * Type of palette
   */
  var type: String? = null,
  /**
   * Array of ColorStops in the palette
   */
  var stops: Array<ColorStop>? = null
) : Serializable

data class CreateDashboardFilter (
  /**
   * Unique Id (read-only)
   */
  var id: String? = null,
  /**
   * Id of Dashboard
   */
  var dashboard_id: String,
  /**
   * Name of filter
   */
  var name: String,
  /**
   * Title of filter
   */
  var title: String,
  /**
   * Type of filter: one of date, number, string, or field
   */
  var type: String,
  /**
   * Default value of filter
   */
  var default_value: String? = null,
  /**
   * Model of filter (required if type = field)
   */
  var model: String? = null,
  /**
   * Explore of filter (required if type = field)
   */
  var explore: String? = null,
  /**
   * Dimension of filter (required if type = field)
   */
  var dimension: String? = null,
  /**
   * Field information (read-only)
   */
  var field: Map<String,Any>? = null,
  /**
   * Display order of this filter relative to other filters
   */
  var row: Long? = null,
  /**
   * Array of listeners for faceted filters
   */
  var listens_to_filters: Array<String>? = null,
  /**
   * Whether the filter allows multiple filter values
   */
  var allow_multiple_values: Boolean? = null,
  /**
   * Whether the filter requires a value to run the dashboard
   */
  var required: Boolean? = null,
  /**
   * The visual configuration for this filter. Used to set up how the UI for this filter should appear.
   */
  var ui_config: Map<String,Any>? = null
) : Serializable

data class CreateDashboardRenderTask (
  /**
   * Filter values to apply to the dashboard queries, in URL query format
   */
  var dashboard_filters: String? = null,
  /**
   * Dashboard layout style: single_column or tiled
   */
  var dashboard_style: String? = null
) : Serializable

data class CreateFolder (
  /**
   * Unique Name
   */
  var name: String,
  /**
   * Id of Parent. If the parent id is null, this is a root-level entry
   */
  var parent_id: String
) : Serializable

data class CreateQueryTask (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Id of query to run
   */
  var query_id: Long,
  /**
   * Desired async query result format. Valid values are: "inline_json", "json", "json_detail", "json_fe", "csv", "html", "md", "txt", "xlsx", "gsxml".
   */
  var result_format: ResultFormat,
  /**
   * Source of query task
   */
  var source: String? = null,
  /**
   * Create the task but defer execution
   */
  var deferred: Boolean? = null,
  /**
   * Id of look associated with query.
   */
  var look_id: Long? = null,
  /**
   * Id of dashboard associated with query.
   */
  var dashboard_id: String? = null
) : Serializable

data class CreateSpace (
  /**
   * Unique Name
   */
  var name: String,
  /**
   * Id of Parent. If the parent id is null, this is a root-level entry
   */
  var parent_id: String
) : Serializable

data class CredentialsApi3 (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Unique Id (read-only)
   */
  var id: Long? = null,
  /**
   * API key client_id (read-only)
   */
  var client_id: String? = null,
  /**
   * Timestamp for the creation of this credential (read-only)
   */
  var created_at: String? = null,
  /**
   * Has this credential been disabled? (read-only)
   */
  var is_disabled: Boolean? = null,
  /**
   * Short name for the type of this kind of credential (read-only)
   */
  var type: String? = null,
  /**
   * Link to get this item (read-only)
   */
  var url: UriString? = null
) : Serializable

data class CredentialsEmail (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Timestamp for the creation of this credential (read-only)
   */
  var created_at: String? = null,
  /**
   * EMail address used for user login
   */
  var email: String? = null,
  /**
   * Force the user to change their password upon their next login
   */
  var forced_password_reset_at_next_login: Boolean? = null,
  /**
   * Has this credential been disabled? (read-only)
   */
  var is_disabled: Boolean? = null,
  /**
   * Timestamp for most recent login using credential (read-only)
   */
  var logged_in_at: String? = null,
  /**
   * Url with one-time use secret token that the user can use to reset password (read-only)
   */
  var password_reset_url: String? = null,
  /**
   * Short name for the type of this kind of credential (read-only)
   */
  var type: String? = null,
  /**
   * Link to get this item (read-only)
   */
  var url: UriString? = null,
  /**
   * Link to get this user (read-only)
   */
  var user_url: UriString? = null
) : Serializable

data class CredentialsEmbed (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Timestamp for the creation of this credential (read-only)
   */
  var created_at: String? = null,
  /**
   * Embedder's id for a group to which this user was added during the most recent login (read-only)
   */
  var external_group_id: String? = null,
  /**
   * Embedder's unique id for the user (read-only)
   */
  var external_user_id: String? = null,
  /**
   * Unique Id (read-only)
   */
  var id: Long? = null,
  /**
   * Has this credential been disabled? (read-only)
   */
  var is_disabled: Boolean? = null,
  /**
   * Timestamp for most recent login using credential (read-only)
   */
  var logged_in_at: String? = null,
  /**
   * Short name for the type of this kind of credential (read-only)
   */
  var type: String? = null,
  /**
   * Link to get this item (read-only)
   */
  var url: UriString? = null
) : Serializable

data class CredentialsGoogle (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Timestamp for the creation of this credential (read-only)
   */
  var created_at: String? = null,
  /**
   * Google domain (read-only)
   */
  var domain: String? = null,
  /**
   * EMail address (read-only)
   */
  var email: String? = null,
  /**
   * Google's Unique ID for this user (read-only)
   */
  var google_user_id: String? = null,
  /**
   * Has this credential been disabled? (read-only)
   */
  var is_disabled: Boolean? = null,
  /**
   * Timestamp for most recent login using credential (read-only)
   */
  var logged_in_at: String? = null,
  /**
   * Short name for the type of this kind of credential (read-only)
   */
  var type: String? = null,
  /**
   * Link to get this item (read-only)
   */
  var url: UriString? = null
) : Serializable

data class CredentialsLDAP (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Timestamp for the creation of this credential (read-only)
   */
  var created_at: String? = null,
  /**
   * EMail address (read-only)
   */
  var email: String? = null,
  /**
   * Has this credential been disabled? (read-only)
   */
  var is_disabled: Boolean? = null,
  /**
   * LDAP Distinguished name for this user (as-of the last login) (read-only)
   */
  var ldap_dn: String? = null,
  /**
   * LDAP Unique ID for this user (read-only)
   */
  var ldap_id: String? = null,
  /**
   * Timestamp for most recent login using credential (read-only)
   */
  var logged_in_at: String? = null,
  /**
   * Short name for the type of this kind of credential (read-only)
   */
  var type: String? = null,
  /**
   * Link to get this item (read-only)
   */
  var url: UriString? = null
) : Serializable

data class CredentialsLookerOpenid (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Timestamp for the creation of this credential (read-only)
   */
  var created_at: String? = null,
  /**
   * EMail address used for user login (read-only)
   */
  var email: String? = null,
  /**
   * Has this credential been disabled? (read-only)
   */
  var is_disabled: Boolean? = null,
  /**
   * Timestamp for most recent login using credential (read-only)
   */
  var logged_in_at: String? = null,
  /**
   * IP address of client for most recent login using credential (read-only)
   */
  var logged_in_ip: String? = null,
  /**
   * Short name for the type of this kind of credential (read-only)
   */
  var type: String? = null,
  /**
   * Link to get this item (read-only)
   */
  var url: UriString? = null,
  /**
   * Link to get this user (read-only)
   */
  var user_url: UriString? = null
) : Serializable

data class CredentialsOIDC (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Timestamp for the creation of this credential (read-only)
   */
  var created_at: String? = null,
  /**
   * EMail address (read-only)
   */
  var email: String? = null,
  /**
   * Has this credential been disabled? (read-only)
   */
  var is_disabled: Boolean? = null,
  /**
   * Timestamp for most recent login using credential (read-only)
   */
  var logged_in_at: String? = null,
  /**
   * OIDC OP's Unique ID for this user (read-only)
   */
  var oidc_user_id: String? = null,
  /**
   * Short name for the type of this kind of credential (read-only)
   */
  var type: String? = null,
  /**
   * Link to get this item (read-only)
   */
  var url: UriString? = null
) : Serializable

data class CredentialsSaml (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Timestamp for the creation of this credential (read-only)
   */
  var created_at: String? = null,
  /**
   * EMail address (read-only)
   */
  var email: String? = null,
  /**
   * Has this credential been disabled? (read-only)
   */
  var is_disabled: Boolean? = null,
  /**
   * Timestamp for most recent login using credential (read-only)
   */
  var logged_in_at: String? = null,
  /**
   * Saml IdP's Unique ID for this user (read-only)
   */
  var saml_user_id: String? = null,
  /**
   * Short name for the type of this kind of credential (read-only)
   */
  var type: String? = null,
  /**
   * Link to get this item (read-only)
   */
  var url: UriString? = null
) : Serializable

data class CredentialsTotp (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Timestamp for the creation of this credential (read-only)
   */
  var created_at: String? = null,
  /**
   * Has this credential been disabled? (read-only)
   */
  var is_disabled: Boolean? = null,
  /**
   * Short name for the type of this kind of credential (read-only)
   */
  var type: String? = null,
  /**
   * User has verified (read-only)
   */
  var verified: Boolean? = null,
  /**
   * Link to get this item (read-only)
   */
  var url: UriString? = null
) : Serializable

data class CustomWelcomeEmail (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * If true, custom email content will replace the default body of welcome emails
   */
  var enabled: Boolean? = null,
  /**
   * The HTML to use as custom content for welcome emails. Script elements and other potentially dangerous markup will be removed.
   */
  var content: String? = null,
  /**
   * The text to appear in the email subject line.
   */
  var subject: String? = null,
  /**
   * The text to appear in the header line of the email body.
   */
  var header: String? = null
) : Serializable

data class Dashboard (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Content Favorite Id (read-only)
   */
  var content_favorite_id: Long? = null,
  /**
   * Id of content metadata (read-only)
   */
  var content_metadata_id: Long? = null,
  /**
   * Description
   */
  var description: String? = null,
  /**
   * Is Hidden
   */
  var hidden: Boolean? = null,
  /**
   * Unique Id (read-only)
   */
  var id: String? = null,
  var model: LookModel? = null,
  /**
   * Timezone in which the Dashboard will run by default.
   */
  var query_timezone: String? = null,
  /**
   * Is Read-only (read-only)
   */
  var readonly: Boolean? = null,
  /**
   * Refresh Interval, as a time duration phrase like "2 hours 30 minutes". A number with no time units will be interpreted as whole seconds.
   */
  var refresh_interval: String? = null,
  /**
   * Refresh Interval in milliseconds (read-only)
   */
  var refresh_interval_to_i: Long? = null,
  var folder: FolderBase? = null,
  /**
   * Dashboard Title
   */
  var title: String? = null,
  /**
   * Id of User (read-only)
   */
  var user_id: Long? = null,
  var space: SpaceBase? = null,
  /**
   * Background color
   */
  var background_color: String? = null,
  /**
   * Time that the Dashboard was created. (read-only)
   */
  var created_at: Date? = null,
  /**
   * Enables crossfiltering in dashboards - only available in dashboards-next (beta)
   */
  var crossfilter_enabled: Boolean? = null,
  /**
   * Elements (read-only)
   */
  var dashboard_elements: Array<DashboardElement>? = null,
  /**
   * Filters (read-only)
   */
  var dashboard_filters: Array<DashboardFilter>? = null,
  /**
   * Layouts (read-only)
   */
  var dashboard_layouts: Array<DashboardLayout>? = null,
  /**
   * Whether or not a dashboard is 'soft' deleted.
   */
  var deleted: Boolean? = null,
  /**
   * Time that the Dashboard was 'soft' deleted. (read-only)
   */
  var deleted_at: Date? = null,
  /**
   * Id of User that 'soft' deleted the dashboard. (read-only)
   */
  var deleter_id: Long? = null,
  /**
   * Relative path of URI of LookML file to edit the dashboard (LookML dashboard only). (read-only)
   */
  var edit_uri: UriString? = null,
  /**
   * Number of times favorited (read-only)
   */
  var favorite_count: Long? = null,
  /**
   * Time the dashboard was last accessed (read-only)
   */
  var last_accessed_at: Date? = null,
  /**
   * Time last viewed in the Looker web UI (read-only)
   */
  var last_viewed_at: Date? = null,
  /**
   * configuration option that governs how dashboard loading will happen.
   */
  var load_configuration: String? = null,
  /**
   * Links this dashboard to a particular LookML dashboard such that calling a **sync** operation on that LookML dashboard will update this dashboard to match.
   */
  var lookml_link_id: String? = null,
  /**
   * Show filters bar.  **Security Note:** This property only affects the *cosmetic* appearance of the dashboard, not a user's ability to access data. Hiding the filters bar does **NOT** prevent users from changing filters by other means. For information on how to set up secure data access control policies, see [Control User Access to Data](https://looker.com/docs/r/api/control-access)
   */
  var show_filters_bar: Boolean? = null,
  /**
   * Show title
   */
  var show_title: Boolean? = null,
  /**
   * Content Metadata Slug
   */
  var slug: String? = null,
  /**
   * Id of Space
   */
  var space_id: String? = null,
  /**
   * Id of folder
   */
  var folder_id: String? = null,
  /**
   * Color of text on text tiles
   */
  var text_tile_text_color: String? = null,
  /**
   * Tile background color
   */
  var tile_background_color: String? = null,
  /**
   * Tile text color
   */
  var tile_text_color: String? = null,
  /**
   * Title color
   */
  var title_color: String? = null,
  /**
   * Number of times viewed in the Looker web UI (read-only)
   */
  var view_count: Long? = null,
  var appearance: DashboardAppearance? = null,
  /**
   * The preferred route for viewing this dashboard (ie: dashboards or dashboards-next)
   */
  var preferred_viewer: String? = null
) : Serializable

data class DashboardAggregateTableLookml (
  /**
   * Dashboard Id (read-only)
   */
  var dashboard_id: String? = null,
  /**
   * Aggregate Table LookML (read-only)
   */
  var aggregate_table_lookml: String? = null
) : Serializable

data class DashboardAppearance (
  /**
   * Page margin (side) width
   */
  var page_side_margins: Long? = null,
  /**
   * Background color for the dashboard
   */
  var page_background_color: String? = null,
  /**
   * Title alignment on dashboard tiles
   */
  var tile_title_alignment: String? = null,
  /**
   * Space between tiles
   */
  var tile_space_between: Long? = null,
  /**
   * Background color for tiles
   */
  var tile_background_color: String? = null,
  /**
   * Tile shadow on/off
   */
  var tile_shadow: Boolean? = null,
  /**
   * Key color
   */
  var key_color: String? = null
) : Serializable

data class DashboardBase (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Content Favorite Id (read-only)
   */
  var content_favorite_id: Long? = null,
  /**
   * Id of content metadata (read-only)
   */
  var content_metadata_id: Long? = null,
  /**
   * Description (read-only)
   */
  var description: String? = null,
  /**
   * Is Hidden (read-only)
   */
  var hidden: Boolean? = null,
  /**
   * Unique Id (read-only)
   */
  var id: String? = null,
  var model: LookModel? = null,
  /**
   * Timezone in which the Dashboard will run by default. (read-only)
   */
  var query_timezone: String? = null,
  /**
   * Is Read-only (read-only)
   */
  var readonly: Boolean? = null,
  /**
   * Refresh Interval, as a time duration phrase like "2 hours 30 minutes". A number with no time units will be interpreted as whole seconds. (read-only)
   */
  var refresh_interval: String? = null,
  /**
   * Refresh Interval in milliseconds (read-only)
   */
  var refresh_interval_to_i: Long? = null,
  var folder: FolderBase? = null,
  /**
   * Dashboard Title (read-only)
   */
  var title: String? = null,
  /**
   * Id of User (read-only)
   */
  var user_id: Long? = null,
  var space: SpaceBase? = null
) : Serializable

data class DashboardElement (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Text tile body text
   */
  var body_text: String? = null,
  /**
   * Text tile body text as Html (read-only)
   */
  var body_text_as_html: String? = null,
  /**
   * Id of Dashboard
   */
  var dashboard_id: String? = null,
  /**
   * Relative path of URI of LookML file to edit the dashboard element (LookML dashboard only). (read-only)
   */
  var edit_uri: UriString? = null,
  /**
   * Unique Id (read-only)
   */
  var id: String? = null,
  var look: LookWithQuery? = null,
  /**
   * Id Of Look
   */
  var look_id: String? = null,
  /**
   * LookML link ID (read-only)
   */
  var lookml_link_id: String? = null,
  /**
   * ID of merge result
   */
  var merge_result_id: String? = null,
  /**
   * Note Display
   */
  var note_display: String? = null,
  /**
   * Note State
   */
  var note_state: String? = null,
  /**
   * Note Text
   */
  var note_text: String? = null,
  /**
   * Note Text as Html (read-only)
   */
  var note_text_as_html: String? = null,
  var query: Query? = null,
  /**
   * Id Of Query
   */
  var query_id: Long? = null,
  /**
   * Refresh Interval
   */
  var refresh_interval: String? = null,
  /**
   * Refresh Interval as integer (read-only)
   */
  var refresh_interval_to_i: Long? = null,
  var result_maker: ResultMakerWithIdVisConfigAndDynamicFields? = null,
  /**
   * ID of the ResultMakerLookup entry.
   */
  var result_maker_id: Long? = null,
  /**
   * Text tile subtitle text
   */
  var subtitle_text: String? = null,
  /**
   * Title of dashboard element
   */
  var title: String? = null,
  /**
   * Whether title is hidden
   */
  var title_hidden: Boolean? = null,
  /**
   * Text tile title
   */
  var title_text: String? = null,
  /**
   * Type
   */
  var type: String? = null,
  /**
   * Count of Alerts associated to a dashboard element (read-only)
   */
  var alert_count: Long? = null,
  /**
   * Text tile title text as Html (read-only)
   */
  var title_text_as_html: String? = null,
  /**
   * Text tile subtitle text as Html (read-only)
   */
  var subtitle_text_as_html: String? = null
) : Serializable

data class DashboardFilter (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Unique Id (read-only)
   */
  var id: String? = null,
  /**
   * Id of Dashboard (read-only)
   */
  var dashboard_id: String? = null,
  /**
   * Name of filter
   */
  var name: String? = null,
  /**
   * Title of filter
   */
  var title: String? = null,
  /**
   * Type of filter: one of date, number, string, or field
   */
  var type: String? = null,
  /**
   * Default value of filter
   */
  var default_value: String? = null,
  /**
   * Model of filter (required if type = field)
   */
  var model: String? = null,
  /**
   * Explore of filter (required if type = field)
   */
  var explore: String? = null,
  /**
   * Dimension of filter (required if type = field)
   */
  var dimension: String? = null,
  /**
   * Field information (read-only)
   */
  var field: Map<String,Any>? = null,
  /**
   * Display order of this filter relative to other filters
   */
  var row: Long? = null,
  /**
   * Array of listeners for faceted filters
   */
  var listens_to_filters: Array<String>? = null,
  /**
   * Whether the filter allows multiple filter values
   */
  var allow_multiple_values: Boolean? = null,
  /**
   * Whether the filter requires a value to run the dashboard
   */
  var required: Boolean? = null,
  /**
   * The visual configuration for this filter. Used to set up how the UI for this filter should appear.
   */
  var ui_config: Map<String,Any>? = null
) : Serializable

data class DashboardLayout (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Unique Id (read-only)
   */
  var id: String? = null,
  /**
   * Id of Dashboard
   */
  var dashboard_id: String? = null,
  /**
   * Type
   */
  var type: String? = null,
  /**
   * Is Active
   */
  var active: Boolean? = null,
  /**
   * Column Width
   */
  var column_width: Long? = null,
  /**
   * Width
   */
  var width: Long? = null,
  /**
   * Whether or not the dashboard layout is deleted. (read-only)
   */
  var deleted: Boolean? = null,
  /**
   * Title extracted from the dashboard this layout represents. (read-only)
   */
  var dashboard_title: String? = null,
  /**
   * Components (read-only)
   */
  var dashboard_layout_components: Array<DashboardLayoutComponent>? = null
) : Serializable

data class DashboardLayoutComponent (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Unique Id (read-only)
   */
  var id: String? = null,
  /**
   * Id of Dashboard Layout
   */
  var dashboard_layout_id: String? = null,
  /**
   * Id Of Dashboard Element
   */
  var dashboard_element_id: String? = null,
  /**
   * Row
   */
  var row: Long? = null,
  /**
   * Column
   */
  var column: Long? = null,
  /**
   * Width
   */
  var width: Long? = null,
  /**
   * Height
   */
  var height: Long? = null,
  /**
   * Whether or not the dashboard layout component is deleted (read-only)
   */
  var deleted: Boolean? = null,
  /**
   * Dashboard element title, extracted from the Dashboard Element. (read-only)
   */
  var element_title: String? = null,
  /**
   * Whether or not the dashboard element title is displayed. (read-only)
   */
  var element_title_hidden: Boolean? = null,
  /**
   * Visualization type, extracted from a query's vis_config (read-only)
   */
  var vis_type: String? = null
) : Serializable

data class DashboardLookml (
  /**
   * Id of Dashboard (read-only)
   */
  var dashboard_id: String? = null,
  /**
   * lookml of UDD (read-only)
   */
  var lookml: String? = null
) : Serializable

data class DataActionForm (
  var state: DataActionUserState? = null,
  /**
   * Array of form fields. (read-only)
   */
  var fields: Array<DataActionFormField>? = null
) : Serializable

data class DataActionFormField (
  /**
   * Name (read-only)
   */
  var name: String? = null,
  /**
   * Human-readable label (read-only)
   */
  var label: String? = null,
  /**
   * Description of field (read-only)
   */
  var description: String? = null,
  /**
   * Type of field. (read-only)
   */
  var type: String? = null,
  /**
   * Default value of the field. (read-only)
   */
  var default: String? = null,
  /**
   * The URL for an oauth link, if type is 'oauth_link'. (read-only)
   */
  var oauth_url: String? = null,
  /**
   * Whether or not a field supports interactive forms. (read-only)
   */
  var interactive: Boolean? = null,
  /**
   * Whether or not the field is required. This is a user-interface hint. A user interface displaying this form should not submit it without a value for this field. The action server must also perform this validation. (read-only)
   */
  var required: Boolean? = null,
  /**
   * If the form type is 'select', a list of options to be selected from. (read-only)
   */
  var options: Array<DataActionFormSelectOption>? = null
) : Serializable

data class DataActionFormSelectOption (
  /**
   * Name (read-only)
   */
  var name: String? = null,
  /**
   * Human-readable label (read-only)
   */
  var label: String? = null
) : Serializable

data class DataActionRequest (
  /**
   * The JSON describing the data action. This JSON should be considered opaque and should be passed through unmodified from the query result it came from.
   */
  var action: Map<String,Any>? = null,
  /**
   * User input for any form values the data action might use.
   */
  var form_values: Map<String,Any>? = null
) : Serializable

data class DataActionResponse (
  /**
   * ID of the webhook event that sent this data action. In some error conditions, this may be null. (read-only)
   */
  var webhook_id: String? = null,
  /**
   * Whether the data action was successful. (read-only)
   */
  var success: Boolean? = null,
  /**
   * When true, indicates that the client should refresh (rerun) the source query because the data may have been changed by the action. (read-only)
   */
  var refresh_query: Boolean? = null,
  var validation_errors: ValidationError? = null,
  /**
   * Optional message returned by the data action server describing the state of the action that took place. This can be used to implement custom failure messages. If a failure is related to a particular form field, the server should send back a validation error instead. The Looker web UI does not currently display any message if the action indicates 'success', but may do so in the future. (read-only)
   */
  var message: String? = null
) : Serializable

data class DataActionUserState (
  /**
   * User state data (read-only)
   */
  var data: String? = null,
  /**
   * Time in seconds until the state needs to be refreshed (read-only)
   */
  var refresh_time: Long? = null
) : Serializable

data class Datagroup (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * UNIX timestamp at which this entry was created. (read-only)
   */
  var created_at: Long? = null,
  /**
   * Unique ID of the datagroup (read-only)
   */
  var id: String? = null,
  /**
   * Name of the model containing the datagroup. Unique when combined with name. (read-only)
   */
  var model_name: String? = null,
  /**
   * Name of the datagroup. Unique when combined with model_name. (read-only)
   */
  var name: String? = null,
  /**
   * UNIX timestamp before which cache entries are considered stale. Cannot be in the future.
   */
  var stale_before: Long? = null,
  /**
   * UNIX timestamp at which this entry trigger was last checked. (read-only)
   */
  var trigger_check_at: Long? = null,
  /**
   * The message returned with the error of the last trigger check. (read-only)
   */
  var trigger_error: String? = null,
  /**
   * The value of the trigger when last checked. (read-only)
   */
  var trigger_value: String? = null,
  /**
   * UNIX timestamp at which this entry became triggered. Cannot be in the future.
   */
  var triggered_at: Long? = null
) : Serializable

data class DBConnection (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Name of the connection. Also used as the unique identifier
   */
  var name: String? = null,
  var dialect: Dialect? = null,
  /**
   * SQL Runner snippets for this connection (read-only)
   */
  var snippets: Array<Snippet>? = null,
  /**
   * Host name/address of server
   */
  var host: String? = null,
  /**
   * Port number on server
   */
  var port: String? = null,
  /**
   * Username for server authentication
   */
  var username: String? = null,
  /**
   * (Write-Only) Password for server authentication
   */
  var password: String? = null,
  /**
   * Whether the connection uses OAuth for authentication. (read-only)
   */
  var uses_oauth: Boolean? = null,
  /**
   * (Write-Only) Base64 encoded Certificate body for server authentication (when appropriate for dialect).
   */
  var certificate: String? = null,
  /**
   * (Write-Only) Certificate keyfile type - .json or .p12
   */
  var file_type: String? = null,
  /**
   * Database name
   */
  var database: String? = null,
  /**
   * Time zone of database
   */
  var db_timezone: String? = null,
  /**
   * Timezone to use in queries
   */
  var query_timezone: String? = null,
  /**
   * Scheme name
   */
  var schema: String? = null,
  /**
   * Maximum number of concurrent connection to use
   */
  var max_connections: Long? = null,
  /**
   * Maximum size of query in GBs (BigQuery only, can be a user_attribute name)
   */
  var max_billing_gigabytes: String? = null,
  /**
   * Use SSL/TLS when connecting to server
   */
  var ssl: Boolean? = null,
  /**
   * Verify the SSL
   */
  var verify_ssl: Boolean? = null,
  /**
   * Name of temporary database (if used)
   */
  var tmp_db_name: String? = null,
  /**
   * Additional params to add to JDBC connection string
   */
  var jdbc_additional_params: String? = null,
  /**
   * Connection Pool Timeout, in seconds
   */
  var pool_timeout: Long? = null,
  /**
   * (Read/Write) SQL Dialect name
   */
  var dialect_name: String? = null,
  /**
   * Creation date for this connection (read-only)
   */
  var created_at: String? = null,
  /**
   * Id of user who last modified this connection configuration (read-only)
   */
  var user_id: String? = null,
  /**
   * Is this an example connection? (read-only)
   */
  var example: Boolean? = null,
  /**
   * (Limited access feature) Are per user db credentials enabled. Enabling will remove previously set username and password
   */
  var user_db_credentials: Boolean? = null,
  /**
   * Fields whose values map to user attribute names
   */
  var user_attribute_fields: Array<String>? = null,
  /**
   * Cron string specifying when maintenance such as PDT trigger checks and drops should be performed
   */
  var maintenance_cron: String? = null,
  /**
   * Unix timestamp at start of last completed PDT trigger check process (read-only)
   */
  var last_regen_at: String? = null,
  /**
   * Unix timestamp at start of last completed PDT reap process (read-only)
   */
  var last_reap_at: String? = null,
  /**
   * Precache tables in the SQL Runner
   */
  var sql_runner_precache_tables: Boolean? = null,
  /**
   * SQL statements (semicolon separated) to issue after connecting to the database. Requires `custom_after_connect_statements` license feature
   */
  var after_connect_statements: String? = null,
  var pdt_context_override: DBConnectionOverride? = null,
  /**
   * Is this connection created and managed by Looker (read-only)
   */
  var managed: Boolean? = null
) : Serializable

data class DBConnectionBase (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Name of the connection. Also used as the unique identifier (read-only)
   */
  var name: String? = null,
  var dialect: Dialect? = null,
  /**
   * SQL Runner snippets for this connection (read-only)
   */
  var snippets: Array<Snippet>? = null
) : Serializable

data class DBConnectionOverride (
  /**
   * Context in which to override (`pdt` is the only allowed value)
   */
  var context: String? = null,
  /**
   * Host name/address of server
   */
  var host: String? = null,
  /**
   * Port number on server
   */
  var port: String? = null,
  /**
   * Username for server authentication
   */
  var username: String? = null,
  /**
   * (Write-Only) Password for server authentication
   */
  var password: String? = null,
  /**
   * Whether or not the password is overridden in this context (read-only)
   */
  var has_password: Boolean? = null,
  /**
   * (Write-Only) Base64 encoded Certificate body for server authentication (when appropriate for dialect).
   */
  var certificate: String? = null,
  /**
   * (Write-Only) Certificate keyfile type - .json or .p12
   */
  var file_type: String? = null,
  /**
   * Database name
   */
  var database: String? = null,
  /**
   * Scheme name
   */
  var schema: String? = null,
  /**
   * Additional params to add to JDBC connection string
   */
  var jdbc_additional_params: String? = null,
  /**
   * SQL statements (semicolon separated) to issue after connecting to the database. Requires `custom_after_connect_statements` license feature
   */
  var after_connect_statements: String? = null
) : Serializable

data class DBConnectionTestResult (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * JDBC connection string. (only populated in the 'connect' test) (read-only)
   */
  var connection_string: String? = null,
  /**
   * Result message of test (read-only)
   */
  var message: String? = null,
  /**
   * Name of test (read-only)
   */
  var name: String? = null,
  /**
   * Result code of test (read-only)
   */
  var status: String? = null
) : Serializable

data class DelegateOauthTest (
  /**
   * Delegate Oauth Connection Name (read-only)
   */
  var name: String? = null,
  /**
   * The ID of the installation target. For Slack, this would be workspace id. (read-only)
   */
  var installation_target_id: String? = null,
  /**
   * Installation ID (read-only)
   */
  var installation_id: Long? = null,
  /**
   * Whether or not the test was successful (read-only)
   */
  var success: Boolean? = null
) : Serializable

/**
 * Status of the dependencies in your project. Valid values are: "lock_optional", "lock_required", "lock_error", "install_none".
 */
enum class DependencyStatus : Serializable {
  lock_optional,
  lock_required,
  lock_error,
  install_none
}

data class Dialect (
  /**
   * The name of the dialect (read-only)
   */
  var name: String? = null,
  /**
   * The human-readable label of the connection (read-only)
   */
  var label: String? = null,
  /**
   * Whether the dialect supports query cost estimates (read-only)
   */
  var supports_cost_estimate: Boolean? = null,
  /**
   * PDT index columns (read-only)
   */
  var persistent_table_indexes: String? = null,
  /**
   * PDT sortkey columns (read-only)
   */
  var persistent_table_sortkeys: String? = null,
  /**
   * PDT distkey column (read-only)
   */
  var persistent_table_distkey: String? = null,
  /**
   * Suports streaming results (read-only)
   */
  var supports_streaming: Boolean? = null,
  /**
   * Should SQL Runner snippets automatically be run (read-only)
   */
  var automatically_run_sql_runner_snippets: Boolean? = null,
  /**
   * Array of names of the tests that can be run on a connection using this dialect (read-only)
   */
  var connection_tests: Array<String>? = null,
  /**
   * Is supported with the inducer (i.e. generate from sql) (read-only)
   */
  var supports_inducer: Boolean? = null,
  /**
   * Can multiple databases be accessed from a connection using this dialect (read-only)
   */
  var supports_multiple_databases: Boolean? = null,
  /**
   * Whether the dialect supports allowing Looker to build persistent derived tables (read-only)
   */
  var supports_persistent_derived_tables: Boolean? = null,
  /**
   * Does the database have client SSL support settable through the JDBC string explicitly? (read-only)
   */
  var has_ssl_support: Boolean? = null
) : Serializable

data class DialectInfo (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Default number max connections (read-only)
   */
  var default_max_connections: String? = null,
  /**
   * Default port number (read-only)
   */
  var default_port: String? = null,
  /**
   * Is the supporting driver installed (read-only)
   */
  var installed: Boolean? = null,
  /**
   * The human-readable label of the connection (read-only)
   */
  var label: String? = null,
  /**
   * What the dialect calls the equivalent of a normal SQL table (read-only)
   */
  var label_for_database_equivalent: String? = null,
  /**
   * The name of the dialect (read-only)
   */
  var name: String? = null,
  var supported_options: DialectInfoOptions? = null
) : Serializable

data class DialectInfoOptions (
  /**
   * Has additional params support (read-only)
   */
  var additional_params: Boolean? = null,
  /**
   * Has auth support (read-only)
   */
  var auth: Boolean? = null,
  /**
   * Has host support (read-only)
   */
  var host: Boolean? = null,
  /**
   * Has support for a service account (read-only)
   */
  var oauth_credentials: Boolean? = null,
  /**
   * Has project name support (read-only)
   */
  var project_name: Boolean? = null,
  /**
   * Has schema support (read-only)
   */
  var schema: Boolean? = null,
  /**
   * Has SSL support (read-only)
   */
  var ssl: Boolean? = null,
  /**
   * Has timezone support (read-only)
   */
  var timezone: Boolean? = null,
  /**
   * Has tmp table support (read-only)
   */
  var tmp_table: Boolean? = null,
  /**
   * Username is required (read-only)
   */
  var username_required: Boolean? = null,
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null
) : Serializable

data class DigestEmails (
  /**
   * Whether or not digest emails are enabled
   */
  var is_enabled: Boolean? = null
) : Serializable

data class DigestEmailSend (
  /**
   * True if content was successfully generated and delivered
   */
  var configuration_delivered: Boolean? = null
) : Serializable

data class DiscretePalette (
  /**
   * Unique identity string (read-only)
   */
  var id: String? = null,
  /**
   * Label for palette
   */
  var label: String? = null,
  /**
   * Type of palette
   */
  var type: String? = null,
  /**
   * Array of colors in the palette
   */
  var colors: Array<String>? = null
) : Serializable

data class EmbedSsoParams (
  /**
   * The complete URL of the Looker UI page to display in the embed context. For example, to display the dashboard with id 34, `target_url` would look like: `https://mycompany.looker.com:9999/dashboards/34`. `target_uri` MUST contain a scheme (HTTPS), domain name, and URL path. Port must be included if it is required to reach the Looker server from browser clients. If the Looker instance is behind a load balancer or other proxy, `target_uri` must be the public-facing domain name and port required to reach the Looker instance, not the actual internal network machine name of the Looker instance.
   */
  var target_url: UriString,
  /**
   * Number of seconds the SSO embed session will be valid after the embed session is started. Defaults to 300 seconds. Maximum session length accepted is 2592000 seconds (30 days).
   */
  var session_length: Long? = null,
  /**
   * When true, the embed session will purge any residual Looker login state (such as in browser cookies) before creating a new login state with the given embed user info. Defaults to true.
   */
  var force_logout_login: Boolean? = null,
  /**
   * A value from an external system that uniquely identifies the embed user. Since the user_ids of Looker embed users may change with every embed session, external_user_id provides a way to assign a known, stable user identifier across multiple embed sessions.
   */
  var external_user_id: String? = null,
  /**
   * First name of the embed user. Defaults to 'Embed' if not specified
   */
  var first_name: String? = null,
  /**
   * Last name of the embed user. Defaults to 'User' if not specified
   */
  var last_name: String? = null,
  /**
   * Sets the user timezone for the embed user session, if the User Specific Timezones setting is enabled in the Looker admin settings. A value of `null` forces the embed user to use the Looker Application Default Timezone. You MUST omit this property from the request if the User Specific Timezones setting is disabled. Timezone values are validated against the IANA Timezone standard and can be seen in the Application Time Zone dropdown list on the Looker General Settings admin page.
   */
  var user_timezone: String? = null,
  /**
   * List of Looker permission names to grant to the embed user. Requested permissions will be filtered to permissions allowed for embed sessions.
   */
  var permissions: Array<String>? = null,
  /**
   * List of model names that the embed user may access
   */
  var models: Array<String>? = null,
  /**
   * List of Looker group ids in which to enroll the embed user
   */
  var group_ids: Array<Long>? = null,
  /**
   * A unique value identifying an embed-exclusive group. Multiple embed users using the same `external_group_id` value will be able to share Looker content with each other. Content and embed users associated with the `external_group_id` will not be accessible to normal Looker users or embed users not associated with this `external_group_id`.
   */
  var external_group_id: Long? = null,
  /**
   * A dictionary of name-value pairs associating a Looker user attribute name with a value.
   */
  var user_attributes: Map<String,Any>? = null,
  /**
   * Id of the embed secret to use to sign this SSO url. If specified, the value must be an id of a valid (active) secret defined in the Looker instance. If not specified, the URL will be signed with the newest active embed secret defined in the Looker instance.
   */
  var secret_id: Long? = null
) : Serializable

data class EmbedUrlResponse (
  /**
   * The embed URL. Any modification to this string will make the URL unusable. (read-only)
   */
  var url: String? = null
) : Serializable

data class Error (
  /**
   * Error details (read-only)
   */
  var message: String,
  /**
   * Documentation link (read-only)
   */
  var documentation_url: UriString
) : Serializable

/**
 * The style of dimension fill that is possible for this field. Null if no dimension fill is possible. Valid values are: "enumeration", "range".
 */
enum class FillStyle : Serializable {
  enumeration,
  range
}

data class Folder (
  /**
   * Unique Name
   */
  var name: String,
  /**
   * Id of Parent. If the parent id is null, this is a root-level entry
   */
  var parent_id: String? = null,
  /**
   * Unique Id (read-only)
   */
  var id: String? = null,
  /**
   * Id of content metadata (read-only)
   */
  var content_metadata_id: Long? = null,
  /**
   * Time the space was created (read-only)
   */
  var created_at: Date? = null,
  /**
   * User Id of Creator (read-only)
   */
  var creator_id: Long? = null,
  /**
   * Children Count (read-only)
   */
  var child_count: Long? = null,
  /**
   * Embedder's Id if this folder was autogenerated as an embedding shared folder via 'external_group_id' in an SSO embed login (read-only)
   */
  var external_id: String? = null,
  /**
   * Folder is an embed folder (read-only)
   */
  var is_embed: Boolean? = null,
  /**
   * Folder is the root embed shared folder (read-only)
   */
  var is_embed_shared_root: Boolean? = null,
  /**
   * Folder is the root embed users folder (read-only)
   */
  var is_embed_users_root: Boolean? = null,
  /**
   * Folder is a user's personal folder (read-only)
   */
  var is_personal: Boolean? = null,
  /**
   * Folder is descendant of a user's personal folder (read-only)
   */
  var is_personal_descendant: Boolean? = null,
  /**
   * Folder is the root shared folder (read-only)
   */
  var is_shared_root: Boolean? = null,
  /**
   * Folder is the root user folder (read-only)
   */
  var is_users_root: Boolean? = null,
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Dashboards (read-only)
   */
  var dashboards: Array<DashboardBase>? = null,
  /**
   * Looks (read-only)
   */
  var looks: Array<LookWithDashboards>? = null
) : Serializable

data class FolderBase (
  /**
   * Unique Name
   */
  var name: String,
  /**
   * Id of Parent. If the parent id is null, this is a root-level entry
   */
  var parent_id: String? = null,
  /**
   * Unique Id (read-only)
   */
  var id: String? = null,
  /**
   * Id of content metadata (read-only)
   */
  var content_metadata_id: Long? = null,
  /**
   * Time the folder was created (read-only)
   */
  var created_at: Date? = null,
  /**
   * User Id of Creator (read-only)
   */
  var creator_id: Long? = null,
  /**
   * Children Count (read-only)
   */
  var child_count: Long? = null,
  /**
   * Embedder's Id if this folder was autogenerated as an embedding shared folder via 'external_group_id' in an SSO embed login (read-only)
   */
  var external_id: String? = null,
  /**
   * Folder is an embed folder (read-only)
   */
  var is_embed: Boolean? = null,
  /**
   * Folder is the root embed shared folder (read-only)
   */
  var is_embed_shared_root: Boolean? = null,
  /**
   * Folder is the root embed users folder (read-only)
   */
  var is_embed_users_root: Boolean? = null,
  /**
   * Folder is a user's personal folder (read-only)
   */
  var is_personal: Boolean? = null,
  /**
   * Folder is descendant of a user's personal folder (read-only)
   */
  var is_personal_descendant: Boolean? = null,
  /**
   * Folder is the root shared folder (read-only)
   */
  var is_shared_root: Boolean? = null,
  /**
   * Folder is the root user folder (read-only)
   */
  var is_users_root: Boolean? = null,
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null
) : Serializable

/**
 * Specifies the data format of the region information. Valid values are: "topojson", "vector_tile_region".
 */
enum class Format : Serializable {
  topojson,
  vector_tile_region
}

/**
 * Scheme that is running on application server (for PRs, file browsing, etc.) Valid values are: "http", "https".
 */
enum class GitApplicationServerHttpScheme : Serializable {
  http,
  https
}

data class GitBranch (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * The short name on the local. Updating `name` results in `git checkout <new_name>`
   */
  var name: String? = null,
  /**
   * The name of the remote (read-only)
   */
  var remote: String? = null,
  /**
   * The short name on the remote (read-only)
   */
  var remote_name: String? = null,
  /**
   * Name of error (read-only)
   */
  var error: String? = null,
  /**
   * Message describing an error if present (read-only)
   */
  var message: String? = null,
  /**
   * Name of the owner of a personal branch (read-only)
   */
  var owner_name: String? = null,
  /**
   * Whether or not this branch is readonly (read-only)
   */
  var readonly: Boolean? = null,
  /**
   * Whether or not this branch is a personal branch - readonly for all developers except the owner (read-only)
   */
  var personal: Boolean? = null,
  /**
   * Whether or not a local ref exists for the branch (read-only)
   */
  var is_local: Boolean? = null,
  /**
   * Whether or not a remote ref exists for the branch (read-only)
   */
  var is_remote: Boolean? = null,
  /**
   * Whether or not this is the production branch (read-only)
   */
  var is_production: Boolean? = null,
  /**
   * Number of commits the local branch is ahead of the remote (read-only)
   */
  var ahead_count: Long? = null,
  /**
   * Number of commits the local branch is behind the remote (read-only)
   */
  var behind_count: Long? = null,
  /**
   * UNIX timestamp at which this branch was last committed. (read-only)
   */
  var commit_at: Long? = null,
  /**
   * The resolved ref of this branch. Updating `ref` results in `git reset --hard <new_ref>``.
   */
  var ref: String? = null,
  /**
   * The resolved ref of this branch remote. (read-only)
   */
  var remote_ref: String? = null
) : Serializable

data class GitConnectionTest (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Human readable string describing the test (read-only)
   */
  var description: String? = null,
  /**
   * A short string, uniquely naming this test (read-only)
   */
  var id: String? = null
) : Serializable

data class GitConnectionTestResult (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * A short string, uniquely naming this test (read-only)
   */
  var id: String? = null,
  /**
   * Additional data from the test (read-only)
   */
  var message: String? = null,
  /**
   * Either 'pass' or 'fail' (read-only)
   */
  var status: String? = null
) : Serializable

data class GitStatus (
  /**
   * Git action: add, delete, etc (read-only)
   */
  var action: String? = null,
  /**
   * When true, changes to the local file conflict with the remote repository (read-only)
   */
  var conflict: Boolean? = null,
  /**
   * When true, the file can be reverted to an earlier state (read-only)
   */
  var revertable: Boolean? = null,
  /**
   * Git description of the action (read-only)
   */
  var text: String? = null,
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null
) : Serializable

data class Group (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Group can be used in content access controls
   */
  var can_add_to_content_metadata: Boolean? = null,
  /**
   * Currently logged in user is group member (read-only)
   */
  var contains_current_user: Boolean? = null,
  /**
   * External Id group if embed group (read-only)
   */
  var external_group_id: String? = null,
  /**
   * Group membership controlled outside of Looker (read-only)
   */
  var externally_managed: Boolean? = null,
  /**
   * Unique Id (read-only)
   */
  var id: Long? = null,
  /**
   * New users are added to this group by default (read-only)
   */
  var include_by_default: Boolean? = null,
  /**
   * Name of group
   */
  var name: String? = null,
  /**
   * Number of users included in this group (read-only)
   */
  var user_count: Long? = null
) : Serializable

data class GroupIdForGroupInclusion (
  /**
   * Id of group (read-only)
   */
  var group_id: Long? = null
) : Serializable

data class GroupIdForGroupUserInclusion (
  /**
   * Id of user (read-only)
   */
  var user_id: Long? = null
) : Serializable

data class GroupSearch (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Group can be used in content access controls
   */
  var can_add_to_content_metadata: Boolean? = null,
  /**
   * Currently logged in user is group member (read-only)
   */
  var contains_current_user: Boolean? = null,
  /**
   * External Id group if embed group (read-only)
   */
  var external_group_id: String? = null,
  /**
   * Group membership controlled outside of Looker (read-only)
   */
  var externally_managed: Boolean? = null,
  /**
   * Unique Id (read-only)
   */
  var id: Long? = null,
  /**
   * New users are added to this group by default (read-only)
   */
  var include_by_default: Boolean? = null,
  /**
   * Name of group
   */
  var name: String? = null,
  /**
   * Number of users included in this group (read-only)
   */
  var user_count: Long? = null
) : Serializable

data class Homepage (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Id of associated content_metadata record (read-only)
   */
  var content_metadata_id: Long? = null,
  /**
   * Date of homepage creation (read-only)
   */
  var created_at: Date? = null,
  /**
   * Date of homepage deletion
   */
  var deleted_at: Date? = null,
  /**
   * Description of the homepage
   */
  var description: String? = null,
  /**
   * Sections of the homepage (read-only)
   */
  var homepage_sections: Array<HomepageSection>? = null,
  /**
   * Unique Id (read-only)
   */
  var id: String? = null,
  /**
   * ids of the homepage sections in the order they should be displayed
   */
  var section_order: Array<Long>? = null,
  /**
   * Title of the homepage
   */
  var title: String? = null,
  /**
   * Date of last homepage update (read-only)
   */
  var updated_at: Date? = null,
  /**
   * User id of homepage creator (read-only)
   */
  var user_id: Long? = null,
  /**
   * Whether the homepage is the primary homepage or not (read-only)
   */
  var primary_homepage: Boolean? = null
) : Serializable

data class HomepageItem (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Name of user who created the content this item is based on (read-only)
   */
  var content_created_by: String? = null,
  /**
   * Content favorite id associated with the item this content is based on (read-only)
   */
  var content_favorite_id: Long? = null,
  /**
   * Content metadata id associated with the item this content is based on (read-only)
   */
  var content_metadata_id: Long? = null,
  /**
   * Last time the content that this item is based on was updated (read-only)
   */
  var content_updated_at: String? = null,
  /**
   * Custom description entered by the user, if present
   */
  var custom_description: String? = null,
  /**
   * (Write-Only) base64 encoded image data
   */
  var custom_image_data_base64: String? = null,
  /**
   * Custom image_url entered by the user, if present (read-only)
   */
  var custom_image_url: String? = null,
  /**
   * Custom title entered by the user, if present
   */
  var custom_title: String? = null,
  /**
   * Custom url entered by the user, if present
   */
  var custom_url: String? = null,
  /**
   * Dashboard to base this item on
   */
  var dashboard_id: Long? = null,
  /**
   * The actual description for display (read-only)
   */
  var description: String? = null,
  /**
   * Number of times content has been favorited, if present (read-only)
   */
  var favorite_count: Long? = null,
  /**
   * Associated Homepage Section
   */
  var homepage_section_id: String? = null,
  /**
   * Unique Id (read-only)
   */
  var id: String? = null,
  /**
   * The actual image_url for display (read-only)
   */
  var image_url: String? = null,
  /**
   * The container folder name of the content (read-only)
   */
  var location: String? = null,
  /**
   * Look to base this item on
   */
  var look_id: Long? = null,
  /**
   * LookML Dashboard to base this item on
   */
  var lookml_dashboard_id: String? = null,
  /**
   * An arbitrary integer representing the sort order within the section
   */
  var order: Long? = null,
  /**
   * Number of seconds it took to fetch the section this item is in (read-only)
   */
  var section_fetch_time: Float? = null,
  /**
   * The actual title for display (read-only)
   */
  var title: String? = null,
  /**
   * The actual url for display (read-only)
   */
  var url: String? = null,
  /**
   * Whether the custom description should be used instead of the content description, if the item is associated with content
   */
  var use_custom_description: Boolean? = null,
  /**
   * Whether the custom image should be used instead of the content image, if the item is associated with content
   */
  var use_custom_image: Boolean? = null,
  /**
   * Whether the custom title should be used instead of the content title, if the item is associated with content
   */
  var use_custom_title: Boolean? = null,
  /**
   * Whether the custom url should be used instead of the content url, if the item is associated with content
   */
  var use_custom_url: Boolean? = null,
  /**
   * Number of times content has been viewed, if present (read-only)
   */
  var view_count: Long? = null
) : Serializable

data class HomepageSection (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Time at which this section was created. (read-only)
   */
  var created_at: Date? = null,
  /**
   * Time at which this section was deleted.
   */
  var deleted_at: Date? = null,
  /**
   * A URL pointing to a page showing further information about the content in the section. (read-only)
   */
  var detail_url: String? = null,
  /**
   * Id reference to parent homepage
   */
  var homepage_id: Long? = null,
  /**
   * Items in the homepage section (read-only)
   */
  var homepage_items: Array<HomepageItem>? = null,
  /**
   * Unique Id (read-only)
   */
  var id: String? = null,
  /**
   * Is this a header section (has no items) (read-only)
   */
  var is_header: Boolean? = null,
  /**
   * ids of the homepage items in the order they should be displayed
   */
  var item_order: Array<Long>? = null,
  /**
   * Name of row
   */
  var title: String? = null,
  /**
   * Time at which this section was last updated. (read-only)
   */
  var updated_at: Date? = null,
  /**
   * Description of the content found in this section.
   */
  var description: String? = null
) : Serializable

data class ImportedProject (
  /**
   * Dependency name (read-only)
   */
  var name: String? = null,
  /**
   * Url for a remote dependency (read-only)
   */
  var url: String? = null,
  /**
   * Ref for a remote dependency (read-only)
   */
  var ref: String? = null,
  /**
   * Flag signifying if a dependency is remote or local (read-only)
   */
  var is_remote: Boolean? = null,
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null
) : Serializable

data class Integration (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * ID of the integration. (read-only)
   */
  var id: String? = null,
  /**
   * ID of the integration hub. (read-only)
   */
  var integration_hub_id: Long? = null,
  /**
   * Label for the integration. (read-only)
   */
  var label: String? = null,
  /**
   * Description of the integration. (read-only)
   */
  var description: String? = null,
  /**
   * Whether the integration is available to users.
   */
  var enabled: Boolean? = null,
  /**
   * Array of params for the integration.
   */
  var params: Array<IntegrationParam>? = null,
  /**
   * A list of data formats the integration supports. If unspecified, the default is all data formats. Valid values are: "txt", "csv", "inline_json", "json", "json_label", "json_detail", "json_detail_lite_stream", "xlsx", "html", "wysiwyg_pdf", "assembled_pdf", "wysiwyg_png", "csv_zip". (read-only)
   */
  var supported_formats: SupportedFormats? = null,
  /**
   * A list of action types the integration supports. Valid values are: "cell", "query", "dashboard". (read-only)
   */
  var supported_action_types: SupportedActionTypes? = null,
  /**
   * A list of formatting options the integration supports. If unspecified, defaults to all formats. Valid values are: "formatted", "unformatted". (read-only)
   */
  var supported_formattings: SupportedFormattings? = null,
  /**
   * A list of visualization formatting options the integration supports. If unspecified, defaults to all formats. Valid values are: "apply", "noapply". (read-only)
   */
  var supported_visualization_formattings: SupportedVisualizationFormattings? = null,
  /**
   * A list of all the download mechanisms the integration supports. The order of values is not significant: Looker will select the most appropriate supported download mechanism for a given query. The integration must ensure it can handle any of the mechanisms it claims to support. If unspecified, this defaults to all download setting values. Valid values are: "push", "url". (read-only)
   */
  var supported_download_settings: SupportedDownloadSettings? = null,
  /**
   * URL to an icon for the integration. (read-only)
   */
  var icon_url: String? = null,
  /**
   * Whether the integration uses oauth. (read-only)
   */
  var uses_oauth: Boolean? = null,
  /**
   * A list of descriptions of required fields that this integration is compatible with. If there are multiple entries in this list, the integration requires more than one field. If unspecified, no fields will be required. (read-only)
   */
  var required_fields: Array<IntegrationRequiredField>? = null,
  /**
   * Whether the integration uses delegate oauth, which allows federation between an integration installation scope specific entity (like org, group, and team, etc.) and Looker. (read-only)
   */
  var delegate_oauth: Boolean? = null,
  /**
   * Whether the integration is available to users.
   */
  var installed_delegate_oauth_targets: Array<Long>? = null
) : Serializable

data class IntegrationHub (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * ID of the hub. (read-only)
   */
  var id: Long? = null,
  /**
   * URL of the hub.
   */
  var url: String? = null,
  /**
   * Label of the hub. (read-only)
   */
  var label: String? = null,
  /**
   * Whether this hub is a first-party integration hub operated by Looker. (read-only)
   */
  var official: Boolean? = null,
  /**
   * An error message, present if the integration hub metadata could not be fetched. If this is present, the integration hub is unusable. (read-only)
   */
  var fetch_error_message: String? = null,
  /**
   * (Write-Only) An authorization key that will be sent to the integration hub on every request.
   */
  var authorization_token: String? = null,
  /**
   * Whether the authorization_token is set for the hub. (read-only)
   */
  var has_authorization_token: Boolean? = null,
  /**
   * Whether the legal agreement message has been signed by the user. This only matters if legal_agreement_required is true. (read-only)
   */
  var legal_agreement_signed: Boolean? = null,
  /**
   * Whether the legal terms for the integration hub are required before use. (read-only)
   */
  var legal_agreement_required: Boolean? = null,
  /**
   * The legal agreement text for this integration hub. (read-only)
   */
  var legal_agreement_text: String? = null
) : Serializable

data class IntegrationParam (
  /**
   * Name of the parameter.
   */
  var name: String? = null,
  /**
   * Label of the parameter. (read-only)
   */
  var label: String? = null,
  /**
   * Short description of the parameter. (read-only)
   */
  var description: String? = null,
  /**
   * Whether the parameter is required to be set to use the destination. If unspecified, this defaults to false. (read-only)
   */
  var required: Boolean? = null,
  /**
   * Whether the parameter has a value set. (read-only)
   */
  var has_value: Boolean? = null,
  /**
   * The current value of the parameter. Always null if the value is sensitive. When writing, null values will be ignored. Set the value to an empty string to clear it.
   */
  var value: String? = null,
  /**
   * When present, the param's value comes from this user attribute instead of the 'value' parameter. Set to null to use the 'value'.
   */
  var user_attribute_name: String? = null,
  /**
   * Whether the parameter contains sensitive data like API credentials. If unspecified, this defaults to true. (read-only)
   */
  var sensitive: Boolean? = null,
  /**
   * When true, this parameter must be assigned to a user attribute in the admin panel (instead of a constant value), and that value may be updated by the user as part of the integration flow. (read-only)
   */
  var per_user: Boolean? = null,
  /**
   * When present, the param represents the oauth url the user will be taken to. (read-only)
   */
  var delegate_oauth_url: String? = null
) : Serializable

data class IntegrationRequiredField (
  /**
   * Matches a field that has this tag. (read-only)
   */
  var tag: String? = null,
  /**
   * If present, supercedes 'tag' and matches a field that has any of the provided tags. (read-only)
   */
  var any_tag: Array<String>? = null,
  /**
   * If present, supercedes 'tag' and matches a field that has all of the provided tags. (read-only)
   */
  var all_tags: Array<String>? = null
) : Serializable

data class IntegrationTestResult (
  /**
   * Whether or not the test was successful (read-only)
   */
  var success: Boolean? = null,
  /**
   * A message representing the results of the test. (read-only)
   */
  var message: String? = null,
  /**
   * An array of connection test result for delegate oauth actions. (read-only)
   */
  var delegate_oauth_result: Array<DelegateOauthTest>? = null
) : Serializable

data class InternalHelpResources (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * If true and internal help resources content is not blank then the link for internal help resources will be shown in the help menu and the content displayed within Looker
   */
  var enabled: Boolean? = null
) : Serializable

data class InternalHelpResourcesContent (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Text to display in the help menu item which will display the internal help resources
   */
  var organization_name: String? = null,
  /**
   * Content to be displayed in the internal help resources page/modal
   */
  var markdown_content: String? = null
) : Serializable

data class LDAPConfig (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Allow alternate email-based login via '/login/email' for admins and for specified users with the 'login_special_email' permission. This option is useful as a fallback during ldap setup, if ldap config problems occur later, or if you need to support some users who are not in your ldap directory. Looker email/password logins are always disabled for regular users when ldap is enabled.
   */
  var alternate_email_login_allowed: Boolean? = null,
  /**
   * (Write-Only)  Password for the LDAP account used to access the LDAP server
   */
  var auth_password: String? = null,
  /**
   * Users will not be allowed to login at all unless a role for them is found in LDAP if set to true
   */
  var auth_requires_role: Boolean? = null,
  /**
   * Distinguished name of LDAP account used to access the LDAP server
   */
  var auth_username: String? = null,
  /**
   * LDAP server hostname
   */
  var connection_host: String? = null,
  /**
   * LDAP host port
   */
  var connection_port: String? = null,
  /**
   * Use Transport Layer Security
   */
  var connection_tls: Boolean? = null,
  /**
   * Do not verify peer when using TLS
   */
  var connection_tls_no_verify: Boolean? = null,
  /**
   * (Write-Only)  Array of ids of groups that will be applied to new users the first time they login via LDAP
   */
  var default_new_user_group_ids: Array<Long>? = null,
  /**
   * (Read-only) Groups that will be applied to new users the first time they login via LDAP (read-only)
   */
  var default_new_user_groups: Array<Group>? = null,
  /**
   * (Write-Only)  Array of ids of roles that will be applied to new users the first time they login via LDAP
   */
  var default_new_user_role_ids: Array<Long>? = null,
  /**
   * (Read-only) Roles that will be applied to new users the first time they login via LDAP (read-only)
   */
  var default_new_user_roles: Array<Role>? = null,
  /**
   * Enable/Disable LDAP authentication for the server
   */
  var enabled: Boolean? = null,
  /**
   * Don't attempt to do LDAP search result paging (RFC 2696) even if the LDAP server claims to support it.
   */
  var force_no_page: Boolean? = null,
  /**
   * (Read-only) Array of mappings between LDAP Groups and Looker Roles (read-only)
   */
  var groups: Array<LDAPGroupRead>? = null,
  /**
   * Base dn for finding groups in LDAP searches
   */
  var groups_base_dn: String? = null,
  /**
   * Identifier for a strategy for how Looker will search for groups in the LDAP server
   */
  var groups_finder_type: String? = null,
  /**
   * LDAP Group attribute that signifies the members of the groups. Most commonly 'member'
   */
  var groups_member_attribute: String? = null,
  /**
   * Optional comma-separated list of supported LDAP objectclass for groups when doing groups searches
   */
  var groups_objectclasses: String? = null,
  /**
   * LDAP Group attribute that signifies the user in a group. Most commonly 'dn'
   */
  var groups_user_attribute: String? = null,
  /**
   * (Read/Write) Array of mappings between LDAP Groups and arrays of Looker Role ids
   */
  var groups_with_role_ids: Array<LDAPGroupWrite>? = null,
  /**
   * (Read-only) Has the password been set for the LDAP account used to access the LDAP server (read-only)
   */
  var has_auth_password: Boolean? = null,
  /**
   * Merge first-time ldap login to existing user account by email addresses. When a user logs in for the first time via ldap this option will connect this user into their existing account by finding the account with a matching email address. Otherwise a new user account will be created for the user.
   */
  var merge_new_users_by_email: Boolean? = null,
  /**
   * When this config was last modified (read-only)
   */
  var modified_at: String? = null,
  /**
   * User id of user who last modified this config (read-only)
   */
  var modified_by: String? = null,
  /**
   * Set user roles in Looker based on groups from LDAP
   */
  var set_roles_from_groups: Boolean? = null,
  /**
   * (Write-Only)  Test LDAP user password. For ldap tests only.
   */
  var test_ldap_password: String? = null,
  /**
   * (Write-Only)  Test LDAP user login id. For ldap tests only.
   */
  var test_ldap_user: String? = null,
  /**
   * Name of user record attributes used to indicate email address field
   */
  var user_attribute_map_email: String? = null,
  /**
   * Name of user record attributes used to indicate first name
   */
  var user_attribute_map_first_name: String? = null,
  /**
   * Name of user record attributes used to indicate last name
   */
  var user_attribute_map_last_name: String? = null,
  /**
   * Name of user record attributes used to indicate unique record id
   */
  var user_attribute_map_ldap_id: String? = null,
  /**
   * (Read-only) Array of mappings between LDAP User Attributes and Looker User Attributes (read-only)
   */
  var user_attributes: Array<LDAPUserAttributeRead>? = null,
  /**
   * (Read/Write) Array of mappings between LDAP User Attributes and arrays of Looker User Attribute ids
   */
  var user_attributes_with_ids: Array<LDAPUserAttributeWrite>? = null,
  /**
   * Distinguished name of LDAP node used as the base for user searches
   */
  var user_bind_base_dn: String? = null,
  /**
   * (Optional) Custom RFC-2254 filter clause for use in finding user during login. Combined via 'and' with the other generated filter clauses.
   */
  var user_custom_filter: String? = null,
  /**
   * Name(s) of user record attributes used for matching user login id (comma separated list)
   */
  var user_id_attribute_names: String? = null,
  /**
   * (Optional) Name of user record objectclass used for finding user during login id
   */
  var user_objectclass: String? = null,
  /**
   * Allow LDAP auth'd users to be members of non-reflected Looker groups. If 'false', user will be removed from non-reflected groups on login.
   */
  var allow_normal_group_membership: Boolean? = null,
  /**
   * LDAP auth'd users will be able to inherit roles from non-reflected Looker groups.
   */
  var allow_roles_from_normal_groups: Boolean? = null,
  /**
   * Allows roles to be directly assigned to LDAP auth'd users.
   */
  var allow_direct_roles: Boolean? = null,
  /**
   * Link to get this item (read-only)
   */
  var url: UriString? = null
) : Serializable

data class LDAPConfigTestIssue (
  /**
   * Severity of the issue. Error or Warning (read-only)
   */
  var severity: String? = null,
  /**
   * Message describing the issue (read-only)
   */
  var message: String? = null,
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null
) : Serializable

data class LDAPConfigTestResult (
  /**
   * Additional details for error cases (read-only)
   */
  var details: String? = null,
  /**
   * Array of issues/considerations about the result (read-only)
   */
  var issues: Array<LDAPConfigTestIssue>? = null,
  /**
   * Short human readable test about the result (read-only)
   */
  var message: String? = null,
  /**
   * Test status code: always 'success' or 'error' (read-only)
   */
  var status: String? = null,
  /**
   * A more detailed trace of incremental results during auth tests (read-only)
   */
  var trace: String? = null,
  var user: LDAPUser? = null,
  /**
   * Link to ldap config (read-only)
   */
  var url: UriString? = null
) : Serializable

data class LDAPGroupRead (
  /**
   * Unique Id (read-only)
   */
  var id: Long? = null,
  /**
   * Unique Id of group in Looker (read-only)
   */
  var looker_group_id: Long? = null,
  /**
   * Name of group in Looker (read-only)
   */
  var looker_group_name: String? = null,
  /**
   * Name of group in LDAP (read-only)
   */
  var name: String? = null,
  /**
   * Looker Roles (read-only)
   */
  var roles: Array<Role>? = null,
  /**
   * Link to ldap config (read-only)
   */
  var url: UriString? = null
) : Serializable

data class LDAPGroupWrite (
  /**
   * Unique Id
   */
  var id: Long? = null,
  /**
   * Unique Id of group in Looker (read-only)
   */
  var looker_group_id: Long? = null,
  /**
   * Name of group in Looker
   */
  var looker_group_name: String? = null,
  /**
   * Name of group in LDAP
   */
  var name: String? = null,
  /**
   * Looker Role Ids
   */
  var role_ids: Array<Long>? = null,
  /**
   * Link to ldap config (read-only)
   */
  var url: UriString? = null
) : Serializable

data class LDAPUser (
  /**
   * Array of user's email addresses and aliases for use in migration (read-only)
   */
  var all_emails: Array<String>? = null,
  /**
   * Dictionary of user's attributes (name/value) (read-only)
   */
  var attributes: Map<String,Any>? = null,
  /**
   * Primary email address (read-only)
   */
  var email: String? = null,
  /**
   * First name (read-only)
   */
  var first_name: String? = null,
  /**
   * Array of user's groups (group names only) (read-only)
   */
  var groups: Array<String>? = null,
  /**
   * Last Name (read-only)
   */
  var last_name: String? = null,
  /**
   * LDAP's distinguished name for the user record (read-only)
   */
  var ldap_dn: String? = null,
  /**
   * LDAP's Unique ID for the user (read-only)
   */
  var ldap_id: String? = null,
  /**
   * Array of user's roles (role names only) (read-only)
   */
  var roles: Array<String>? = null,
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Link to ldap config (read-only)
   */
  var url: UriString? = null
) : Serializable

data class LDAPUserAttributeRead (
  /**
   * Name of User Attribute in LDAP (read-only)
   */
  var name: String? = null,
  /**
   * Required to be in LDAP assertion for login to be allowed to succeed (read-only)
   */
  var required: Boolean? = null,
  /**
   * Looker User Attributes (read-only)
   */
  var user_attributes: Array<UserAttribute>? = null,
  /**
   * Link to ldap config (read-only)
   */
  var url: UriString? = null
) : Serializable

data class LDAPUserAttributeWrite (
  /**
   * Name of User Attribute in LDAP
   */
  var name: String? = null,
  /**
   * Required to be in LDAP assertion for login to be allowed to succeed
   */
  var required: Boolean? = null,
  /**
   * Looker User Attribute Ids
   */
  var user_attribute_ids: Array<Long>? = null,
  /**
   * Link to ldap config (read-only)
   */
  var url: UriString? = null
) : Serializable

data class LegacyFeature (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Unique Id (read-only)
   */
  var id: String? = null,
  /**
   * Name (read-only)
   */
  var name: String? = null,
  /**
   * Description (read-only)
   */
  var description: String? = null,
  /**
   * Whether this feature has been enabled by a user
   */
  var enabled_locally: Boolean? = null,
  /**
   * Whether this feature is currently enabled (read-only)
   */
  var enabled: Boolean? = null,
  /**
   * Looker version where this feature became a legacy feature (read-only)
   */
  var disallowed_as_of_version: String? = null,
  /**
   * Looker version where this feature will be automatically disabled (read-only)
   */
  var disable_on_upgrade_to_version: String? = null,
  /**
   * Future Looker version where this feature will be removed (read-only)
   */
  var end_of_life_version: String? = null,
  /**
   * URL for documentation about this feature (read-only)
   */
  var documentation_url: String? = null,
  /**
   * Approximate date that this feature will be automatically disabled. (read-only)
   */
  var approximate_disable_date: Date? = null,
  /**
   * Approximate date that this feature will be removed. (read-only)
   */
  var approximate_end_of_life_date: Date? = null,
  /**
   * Whether this legacy feature may have been automatically disabled when upgrading to the current version. (read-only)
   */
  var has_disabled_on_upgrade: Boolean? = null
) : Serializable

data class Locale (
  /**
   * Code for Locale (read-only)
   */
  var code: String? = null,
  /**
   * Name of Locale in its own language (read-only)
   */
  var native_name: String? = null,
  /**
   * Name of Locale in English (read-only)
   */
  var english_name: String? = null
) : Serializable

data class LocalizationSettings (
  /**
   * Default locale for localization (read-only)
   */
  var default_locale: String? = null,
  /**
   * Localization level - strict or permissive (read-only)
   */
  var localization_level: String? = null,
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null
) : Serializable

data class Look (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Id of content metadata (read-only)
   */
  var content_metadata_id: Long? = null,
  /**
   * Unique Id (read-only)
   */
  var id: Long? = null,
  /**
   * Look Title
   */
  var title: String? = null,
  /**
   * Content Favorite Id (read-only)
   */
  var content_favorite_id: Long? = null,
  /**
   * Time that the Look was created. (read-only)
   */
  var created_at: Date? = null,
  /**
   * Whether or not a look is 'soft' deleted.
   */
  var deleted: Boolean? = null,
  /**
   * Time that the Look was deleted. (read-only)
   */
  var deleted_at: Date? = null,
  /**
   * Id of User that deleted the look. (read-only)
   */
  var deleter_id: Long? = null,
  /**
   * Description
   */
  var description: String? = null,
  /**
   * Embed Url (read-only)
   */
  var embed_url: String? = null,
  /**
   * Excel File Url (read-only)
   */
  var excel_file_url: String? = null,
  /**
   * Number of times favorited (read-only)
   */
  var favorite_count: Long? = null,
  /**
   * Google Spreadsheet Formula (read-only)
   */
  var google_spreadsheet_formula: String? = null,
  /**
   * Image Embed Url (read-only)
   */
  var image_embed_url: String? = null,
  /**
   * auto-run query when Look viewed
   */
  var is_run_on_load: Boolean? = null,
  /**
   * Time that the Look was last accessed by any user (read-only)
   */
  var last_accessed_at: Date? = null,
  /**
   * Id of User that last updated the look. (read-only)
   */
  var last_updater_id: Long? = null,
  /**
   * Time last viewed in the Looker web UI (read-only)
   */
  var last_viewed_at: Date? = null,
  var model: LookModel? = null,
  /**
   * Is Public
   */
  var public: Boolean? = null,
  /**
   * Public Slug (read-only)
   */
  var public_slug: String? = null,
  /**
   * Public Url (read-only)
   */
  var public_url: String? = null,
  /**
   * Query Id
   */
  var query_id: Long? = null,
  /**
   * Short Url (read-only)
   */
  var short_url: String? = null,
  var folder: FolderBase? = null,
  /**
   * Folder Id
   */
  var folder_id: String? = null,
  /**
   * Time that the Look was updated. (read-only)
   */
  var updated_at: Date? = null,
  /**
   * User Id
   */
  var user_id: Long? = null,
  /**
   * Number of times viewed in the Looker web UI (read-only)
   */
  var view_count: Long? = null,
  var user: UserIdOnly? = null,
  /**
   * Space Id
   */
  var space_id: String? = null,
  var space: SpaceBase? = null
) : Serializable

data class LookBasic (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Id of content metadata (read-only)
   */
  var content_metadata_id: Long? = null,
  /**
   * Unique Id (read-only)
   */
  var id: Long? = null,
  /**
   * Look Title (read-only)
   */
  var title: String? = null
) : Serializable

data class LookmlModel (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Array of names of connections this model is allowed to use
   */
  var allowed_db_connection_names: Array<String>? = null,
  /**
   * Array of explores (if has_content) (read-only)
   */
  var explores: Array<LookmlModelNavExplore>? = null,
  /**
   * Does this model declaration have have lookml content? (read-only)
   */
  var has_content: Boolean? = null,
  /**
   * UI-friendly name for this model (read-only)
   */
  var label: String? = null,
  /**
   * Name of the model. Also used as the unique identifier
   */
  var name: String? = null,
  /**
   * Name of project containing the model
   */
  var project_name: String? = null,
  /**
   * Is this model allowed to use all current and future connections
   */
  var unlimited_db_connections: Boolean? = null
) : Serializable

data class LookmlModelExplore (
  /**
   * Fully qualified explore name (model name plus explore name) (read-only)
   */
  var id: String? = null,
  /**
   * Explore name (read-only)
   */
  var name: String? = null,
  /**
   * Description (read-only)
   */
  var description: String? = null,
  /**
   * Label (read-only)
   */
  var label: String? = null,
  /**
   * Scopes (read-only)
   */
  var scopes: Array<String>? = null,
  /**
   * Can Total (read-only)
   */
  var can_total: Boolean? = null,
  /**
   * Can Save (read-only)
   */
  var can_save: Boolean? = null,
  /**
   * Can Explain (read-only)
   */
  var can_explain: Boolean? = null,
  /**
   * Can pivot in the DB (read-only)
   */
  var can_pivot_in_db: Boolean? = null,
  /**
   * Can use subtotals (read-only)
   */
  var can_subtotal: Boolean? = null,
  /**
   * Has timezone support (read-only)
   */
  var has_timezone_support: Boolean? = null,
  /**
   * Cost estimates supported (read-only)
   */
  var supports_cost_estimate: Boolean? = null,
  /**
   * Connection name (read-only)
   */
  var connection_name: String? = null,
  /**
   * How nulls are sorted, possible values are "low", "high", "first" and "last" (read-only)
   */
  var null_sort_treatment: String? = null,
  /**
   * List of model source files (read-only)
   */
  var files: Array<String>? = null,
  /**
   * Primary source_file file (read-only)
   */
  var source_file: String? = null,
  /**
   * Name of project (read-only)
   */
  var project_name: String? = null,
  /**
   * Name of model (read-only)
   */
  var model_name: String? = null,
  /**
   * Name of view (read-only)
   */
  var view_name: String? = null,
  /**
   * Is hidden (read-only)
   */
  var hidden: Boolean? = null,
  /**
   * A sql_table_name expression that defines what sql table the view/explore maps onto. Example: "prod_orders2 AS orders" in a view named orders. (read-only)
   */
  var sql_table_name: String? = null,
  /**
   * (DEPRECATED) Array of access filter field names (read-only)
   */
  var access_filter_fields: Array<String>? = null,
  /**
   * Access filters (read-only)
   */
  var access_filters: Array<LookmlModelExploreAccessFilter>? = null,
  /**
   * Aliases (read-only)
   */
  var aliases: Array<LookmlModelExploreAlias>? = null,
  /**
   * Always filter (read-only)
   */
  var always_filter: Array<LookmlModelExploreAlwaysFilter>? = null,
  /**
   * Conditionally filter (read-only)
   */
  var conditionally_filter: Array<LookmlModelExploreConditionallyFilter>? = null,
  /**
   * Array of index fields (read-only)
   */
  var index_fields: Array<String>? = null,
  /**
   * Sets (read-only)
   */
  var sets: Array<LookmlModelExploreSet>? = null,
  /**
   * An array of arbitrary string tags provided in the model for this explore. (read-only)
   */
  var tags: Array<String>? = null,
  /**
   * Errors (read-only)
   */
  var errors: Array<LookmlModelExploreError>? = null,
  var fields: LookmlModelExploreFieldset? = null,
  /**
   * Views joined into this explore (read-only)
   */
  var joins: Array<LookmlModelExploreJoins>? = null,
  /**
   * Label used to group explores in the navigation menus (read-only)
   */
  var group_label: String? = null,
  /**
   * An array of items describing which custom measure types are supported for creating a custom measure 'based_on' each possible dimension type. (read-only)
   */
  var supported_measure_types: Array<LookmlModelExploreSupportedMeasureType>? = null
) : Serializable

data class LookmlModelExploreAccessFilter (
  /**
   * Field to be filtered (read-only)
   */
  var field: String? = null,
  /**
   * User attribute name (read-only)
   */
  var user_attribute: String? = null
) : Serializable

data class LookmlModelExploreAlias (
  /**
   * Name (read-only)
   */
  var name: String? = null,
  /**
   * Value (read-only)
   */
  var value: String? = null
) : Serializable

data class LookmlModelExploreAlwaysFilter (
  /**
   * Name (read-only)
   */
  var name: String? = null,
  /**
   * Value (read-only)
   */
  var value: String? = null
) : Serializable

data class LookmlModelExploreConditionallyFilter (
  /**
   * Name (read-only)
   */
  var name: String? = null,
  /**
   * Value (read-only)
   */
  var value: String? = null
) : Serializable

data class LookmlModelExploreError (
  /**
   * Error Message (read-only)
   */
  var message: String? = null,
  /**
   * Details (read-only)
   */
  var details: Any? = null,
  /**
   * Error source location (read-only)
   */
  var error_pos: String? = null,
  /**
   * Is this a field error (read-only)
   */
  var field_error: Boolean? = null
) : Serializable

data class LookmlModelExploreField (
  /**
   * The appropriate horizontal text alignment the values of this field shoud be displayed in. Valid values are: "left", "right". (read-only)
   */
  var align: Align? = null,
  /**
   * Whether it's possible to filter on this field. (read-only)
   */
  var can_filter: Boolean? = null,
  /**
   * Field category Valid values are: "parameter", "filter", "measure", "dimension". (read-only)
   */
  var category: Category? = null,
  /**
   * The default value that this field uses when filtering. Null if there is no default value. (read-only)
   */
  var default_filter_value: String? = null,
  /**
   * Description (read-only)
   */
  var description: String? = null,
  /**
   * An array enumerating all the possible values that this field can contain. When null, there is no limit to the set of possible values this field can contain. (read-only)
   */
  var enumerations: Array<LookmlModelExploreFieldEnumeration>? = null,
  /**
   * An error message indicating a problem with the definition of this field. If there are no errors, this will be null. (read-only)
   */
  var error: String? = null,
  /**
   * A label creating a grouping of fields. All fields with this label should be presented together when displayed in a UI. (read-only)
   */
  var field_group_label: String? = null,
  /**
   * When presented in a field group via field_group_label, a shorter name of the field to be displayed in that context. (read-only)
   */
  var field_group_variant: String? = null,
  /**
   * The style of dimension fill that is possible for this field. Null if no dimension fill is possible. Valid values are: "enumeration", "range". (read-only)
   */
  var fill_style: FillStyle? = null,
  /**
   * An offset (in months) from the calendar start month to the fiscal start month defined in the LookML model this field belongs to. (read-only)
   */
  var fiscal_month_offset: Long? = null,
  /**
   * Whether this field has a set of allowed_values specified in LookML. (read-only)
   */
  var has_allowed_values: Boolean? = null,
  /**
   * Whether this field should be hidden from the user interface. (read-only)
   */
  var hidden: Boolean? = null,
  /**
   * Whether this field is a filter. (read-only)
   */
  var is_filter: Boolean? = null,
  /**
   * Whether this field represents a fiscal time value. (read-only)
   */
  var is_fiscal: Boolean? = null,
  /**
   * Whether this field is of a type that represents a numeric value. (read-only)
   */
  var is_numeric: Boolean? = null,
  /**
   * Whether this field is of a type that represents a time value. (read-only)
   */
  var is_timeframe: Boolean? = null,
  /**
   * Whether this field can be time filtered. (read-only)
   */
  var can_time_filter: Boolean? = null,
  var time_interval: LookmlModelExploreFieldTimeInterval? = null,
  /**
   * Fully-qualified human-readable label of the field. (read-only)
   */
  var label: String? = null,
  /**
   * The name of the parameter that will provide a parameterized label for this field, if available in the current context. (read-only)
   */
  var label_from_parameter: String? = null,
  /**
   * The human-readable label of the field, without the view label. (read-only)
   */
  var label_short: String? = null,
  /**
   * A URL linking to the definition of this field in the LookML IDE. (read-only)
   */
  var lookml_link: String? = null,
  var map_layer: LookmlModelExploreFieldMapLayer? = null,
  /**
   * Whether this field is a measure. (read-only)
   */
  var measure: Boolean? = null,
  /**
   * Fully-qualified name of the field. (read-only)
   */
  var name: String? = null,
  /**
   * If yes, the field will not be localized with the user attribute number_format. Defaults to no (read-only)
   */
  var strict_value_format: Boolean? = null,
  /**
   * Whether this field is a parameter. (read-only)
   */
  var parameter: Boolean? = null,
  /**
   * Whether this field can be removed from a query. (read-only)
   */
  var permanent: Boolean? = null,
  /**
   * Whether or not the field represents a primary key. (read-only)
   */
  var primary_key: Boolean? = null,
  /**
   * The name of the project this field is defined in. (read-only)
   */
  var project_name: String? = null,
  /**
   * When true, it's not possible to re-sort this field's values without re-running the SQL query, due to database logic that affects the sort. (read-only)
   */
  var requires_refresh_on_sort: Boolean? = null,
  /**
   * The LookML scope this field belongs to. The scope is typically the field's view. (read-only)
   */
  var scope: String? = null,
  /**
   * Whether this field can be sorted. (read-only)
   */
  var sortable: Boolean? = null,
  /**
   * The path portion of source_file_path. (read-only)
   */
  var source_file: String? = null,
  /**
   * The fully-qualified path of the project file this field is defined in. (read-only)
   */
  var source_file_path: String? = null,
  /**
   * SQL expression as defined in the LookML model. The SQL syntax shown here is a representation intended for auditability, and is not neccessarily an exact match for what will ultimately be run in the database. It may contain special LookML syntax or annotations that are not valid SQL. This will be null if the current user does not have the see_lookml permission for the field's model. (read-only)
   */
  var sql: String? = null,
  /**
   * An array of conditions and values that make up a SQL Case expression, as defined in the LookML model. The SQL syntax shown here is a representation intended for auditability, and is not neccessarily an exact match for what will ultimately be run in the database. It may contain special LookML syntax or annotations that are not valid SQL. This will be null if the current user does not have the see_lookml permission for the field's model. (read-only)
   */
  var sql_case: Array<LookmlModelExploreFieldSqlCase>? = null,
  /**
   * The name of the dimension to base suggest queries from. (read-only)
   */
  var suggest_dimension: String? = null,
  /**
   * The name of the explore to base suggest queries from. (read-only)
   */
  var suggest_explore: String? = null,
  /**
   * Whether or not suggestions are possible for this field. (read-only)
   */
  var suggestable: Boolean? = null,
  /**
   * If available, a list of suggestions for this field. For most fields, a suggest query is a more appropriate way to get an up-to-date list of suggestions. Or use enumerations to list all the possible values. (read-only)
   */
  var suggestions: Array<String>? = null,
  /**
   * An array of arbitrary string tags provided in the model for this field. (read-only)
   */
  var tags: Array<String>? = null,
  /**
   * The LookML type of the field. (read-only)
   */
  var type: String? = null,
  /**
   * An array of user attribute types that are allowed to be used in filters on this field. Valid values are: "advanced_filter_string", "advanced_filter_number", "advanced_filter_datetime", "string", "number", "datetime", "relative_url", "yesno", "zipcode". (read-only)
   */
  var user_attribute_filter_types: UserAttributeFilterTypes? = null,
  /**
   * If specified, the LookML value format string for formatting values of this field. (read-only)
   */
  var value_format: String? = null,
  /**
   * The name of the view this field belongs to. (read-only)
   */
  var view: String? = null,
  /**
   * The human-readable label of the view the field belongs to. (read-only)
   */
  var view_label: String? = null,
  /**
   * Whether this field was specified in "dynamic_fields" and is not part of the model. (read-only)
   */
  var dynamic: Boolean? = null,
  /**
   * The name of the starting day of the week. Valid values are: "monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday". (read-only)
   */
  var week_start_day: WeekStartDay? = null
) : Serializable

data class LookmlModelExploreFieldEnumeration (
  /**
   * Label (read-only)
   */
  var label: String? = null,
  /**
   * Value (read-only)
   */
  var value: Any? = null
) : Serializable

data class LookmlModelExploreFieldMapLayer (
  /**
   * URL to the map layer resource. (read-only)
   */
  var url: String? = null,
  /**
   * Name of the map layer, as defined in LookML. (read-only)
   */
  var name: String? = null,
  /**
   * Specifies the name of the TopoJSON object that the map layer references. If not specified, use the first object.. (read-only)
   */
  var feature_key: String? = null,
  /**
   * Selects which property from the TopoJSON data to plot against. TopoJSON supports arbitrary metadata for each region. When null, the first matching property should be used. (read-only)
   */
  var property_key: String? = null,
  /**
   * Which property from the TopoJSON data to use to label the region. When null, property_key should be used. (read-only)
   */
  var property_label_key: String? = null,
  /**
   * The preferred geographic projection of the map layer when displayed in a visualization that supports multiple geographic projections. (read-only)
   */
  var projection: String? = null,
  /**
   * Specifies the data format of the region information. Valid values are: "topojson", "vector_tile_region". (read-only)
   */
  var format: Format? = null,
  /**
   * Specifies the URL to a JSON file that defines the geographic extents of each region available in the map layer. This data is used to automatically center the map on the available data for visualization purposes. The JSON file must be a JSON object where the keys are the mapping value of the feature (as specified by property_key) and the values are arrays of four numbers representing the west longitude, south latitude, east longitude, and north latitude extents of the region. The object must include a key for every possible value of property_key. (read-only)
   */
  var extents_json_url: String? = null,
  /**
   * The minimum zoom level that the map layer may be displayed at, for visualizations that support zooming. (read-only)
   */
  var max_zoom_level: Long? = null,
  /**
   * The maximum zoom level that the map layer may be displayed at, for visualizations that support zooming. (read-only)
   */
  var min_zoom_level: Long? = null
) : Serializable

data class LookmlModelExploreFieldset (
  /**
   * Array of dimensions (read-only)
   */
  var dimensions: Array<LookmlModelExploreField>? = null,
  /**
   * Array of measures (read-only)
   */
  var measures: Array<LookmlModelExploreField>? = null,
  /**
   * Array of filters (read-only)
   */
  var filters: Array<LookmlModelExploreField>? = null,
  /**
   * Array of parameters (read-only)
   */
  var parameters: Array<LookmlModelExploreField>? = null
) : Serializable

data class LookmlModelExploreFieldSqlCase (
  /**
   * SQL Case label value (read-only)
   */
  var value: String? = null,
  /**
   * SQL Case condition expression (read-only)
   */
  var condition: String? = null
) : Serializable

data class LookmlModelExploreFieldTimeInterval (
  /**
   * The type of time interval this field represents a grouping of. Valid values are: "day", "hour", "minute", "second", "millisecond", "microsecond", "week", "month", "year". (read-only)
   */
  var name: Name? = null,
  /**
   * The number of intervals this field represents a grouping of. (read-only)
   */
  var count: Long? = null
) : Serializable

data class LookmlModelExploreJoins (
  /**
   * Name of this join (and name of the view to join) (read-only)
   */
  var name: String? = null,
  /**
   * Fields referenced by the join (read-only)
   */
  var dependent_fields: Array<String>? = null,
  /**
   * Fields of the joined view to pull into this explore (read-only)
   */
  var fields: Array<String>? = null,
  /**
   * Name of the dimension in this explore whose value is in the primary key of the joined view (read-only)
   */
  var foreign_key: String? = null,
  /**
   * Name of view to join (read-only)
   */
  var from: String? = null,
  /**
   * Specifies whether all queries must use an outer join (read-only)
   */
  var outer_only: Boolean? = null,
  /**
   * many_to_one, one_to_one, one_to_many, many_to_many (read-only)
   */
  var relationship: String? = null,
  /**
   * Names of joins that must always be included in SQL queries (read-only)
   */
  var required_joins: Array<String>? = null,
  /**
   * SQL expression that produces a foreign key (read-only)
   */
  var sql_foreign_key: String? = null,
  /**
   * SQL ON expression describing the join condition (read-only)
   */
  var sql_on: String? = null,
  /**
   * SQL table name to join (read-only)
   */
  var sql_table_name: String? = null,
  /**
   * The join type: left_outer, full_outer, inner, or cross (read-only)
   */
  var type: String? = null,
  /**
   * Label to display in UI selectors (read-only)
   */
  var view_label: String? = null
) : Serializable

data class LookmlModelExploreSet (
  /**
   * Name (read-only)
   */
  var name: String? = null,
  /**
   * Value set (read-only)
   */
  var value: Array<String>? = null
) : Serializable

data class LookmlModelExploreSupportedMeasureType (
  /**
   * (read-only)
   */
  var dimension_type: String? = null,
  /**
   * (read-only)
   */
  var measure_types: Array<String>? = null
) : Serializable

data class LookmlModelNavExplore (
  /**
   * Name of the explore (read-only)
   */
  var name: String? = null,
  /**
   * Description for the explore (read-only)
   */
  var description: String? = null,
  /**
   * Label for the explore (read-only)
   */
  var label: String? = null,
  /**
   * Is this explore marked as hidden (read-only)
   */
  var hidden: Boolean? = null,
  /**
   * Label used to group explores in the navigation menus (read-only)
   */
  var group_label: String? = null,
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null
) : Serializable

data class LookmlTest (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Name of model containing this test. (read-only)
   */
  var model_name: String? = null,
  /**
   * Name of this test. (read-only)
   */
  var name: String? = null,
  /**
   * Name of the explore this test runs a query against (read-only)
   */
  var explore_name: String? = null,
  /**
   * The url parameters that can be used to reproduce this test's query on an explore. (read-only)
   */
  var query_url_params: String? = null,
  /**
   * Name of the LookML file containing this test. (read-only)
   */
  var file: String? = null,
  /**
   * Line number of this test in LookML. (read-only)
   */
  var line: Long? = null
) : Serializable

data class LookmlTestResult (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Name of model containing this test. (read-only)
   */
  var model_name: String? = null,
  /**
   * Name of this test. (read-only)
   */
  var test_name: String? = null,
  /**
   * Number of assertions in this test (read-only)
   */
  var assertions_count: Long? = null,
  /**
   * Number of assertions passed in this test (read-only)
   */
  var assertions_failed: Long? = null,
  /**
   * A list of any errors encountered by the test. (read-only)
   */
  var errors: Array<ProjectError>? = null,
  /**
   * A list of any warnings encountered by the test. (read-only)
   */
  var warnings: Array<ProjectError>? = null,
  /**
   * True if this test passsed without errors. (read-only)
   */
  var success: Boolean? = null
) : Serializable

data class LookModel (
  /**
   * Model Id (read-only)
   */
  var id: String? = null,
  /**
   * Model Label (read-only)
   */
  var label: String? = null
) : Serializable

data class LookWithDashboards (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Id of content metadata (read-only)
   */
  var content_metadata_id: Long? = null,
  /**
   * Unique Id (read-only)
   */
  var id: Long? = null,
  /**
   * Look Title
   */
  var title: String? = null,
  /**
   * Content Favorite Id (read-only)
   */
  var content_favorite_id: Long? = null,
  /**
   * Time that the Look was created. (read-only)
   */
  var created_at: Date? = null,
  /**
   * Whether or not a look is 'soft' deleted.
   */
  var deleted: Boolean? = null,
  /**
   * Time that the Look was deleted. (read-only)
   */
  var deleted_at: Date? = null,
  /**
   * Id of User that deleted the look. (read-only)
   */
  var deleter_id: Long? = null,
  /**
   * Description
   */
  var description: String? = null,
  /**
   * Embed Url (read-only)
   */
  var embed_url: String? = null,
  /**
   * Excel File Url (read-only)
   */
  var excel_file_url: String? = null,
  /**
   * Number of times favorited (read-only)
   */
  var favorite_count: Long? = null,
  /**
   * Google Spreadsheet Formula (read-only)
   */
  var google_spreadsheet_formula: String? = null,
  /**
   * Image Embed Url (read-only)
   */
  var image_embed_url: String? = null,
  /**
   * auto-run query when Look viewed
   */
  var is_run_on_load: Boolean? = null,
  /**
   * Time that the Look was last accessed by any user (read-only)
   */
  var last_accessed_at: Date? = null,
  /**
   * Id of User that last updated the look. (read-only)
   */
  var last_updater_id: Long? = null,
  /**
   * Time last viewed in the Looker web UI (read-only)
   */
  var last_viewed_at: Date? = null,
  var model: LookModel? = null,
  /**
   * Is Public
   */
  var public: Boolean? = null,
  /**
   * Public Slug (read-only)
   */
  var public_slug: String? = null,
  /**
   * Public Url (read-only)
   */
  var public_url: String? = null,
  /**
   * Query Id
   */
  var query_id: Long? = null,
  /**
   * Short Url (read-only)
   */
  var short_url: String? = null,
  var folder: FolderBase? = null,
  /**
   * Folder Id
   */
  var folder_id: String? = null,
  /**
   * Time that the Look was updated. (read-only)
   */
  var updated_at: Date? = null,
  /**
   * User Id
   */
  var user_id: Long? = null,
  /**
   * Number of times viewed in the Looker web UI (read-only)
   */
  var view_count: Long? = null,
  var user: UserIdOnly? = null,
  /**
   * Space Id
   */
  var space_id: String? = null,
  var space: SpaceBase? = null,
  /**
   * Dashboards (read-only)
   */
  var dashboards: Array<DashboardBase>? = null
) : Serializable

data class LookWithQuery (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Id of content metadata (read-only)
   */
  var content_metadata_id: Long? = null,
  /**
   * Unique Id (read-only)
   */
  var id: Long? = null,
  /**
   * Look Title
   */
  var title: String? = null,
  /**
   * Content Favorite Id (read-only)
   */
  var content_favorite_id: Long? = null,
  /**
   * Time that the Look was created. (read-only)
   */
  var created_at: Date? = null,
  /**
   * Whether or not a look is 'soft' deleted.
   */
  var deleted: Boolean? = null,
  /**
   * Time that the Look was deleted. (read-only)
   */
  var deleted_at: Date? = null,
  /**
   * Id of User that deleted the look. (read-only)
   */
  var deleter_id: Long? = null,
  /**
   * Description
   */
  var description: String? = null,
  /**
   * Embed Url (read-only)
   */
  var embed_url: String? = null,
  /**
   * Excel File Url (read-only)
   */
  var excel_file_url: String? = null,
  /**
   * Number of times favorited (read-only)
   */
  var favorite_count: Long? = null,
  /**
   * Google Spreadsheet Formula (read-only)
   */
  var google_spreadsheet_formula: String? = null,
  /**
   * Image Embed Url (read-only)
   */
  var image_embed_url: String? = null,
  /**
   * auto-run query when Look viewed
   */
  var is_run_on_load: Boolean? = null,
  /**
   * Time that the Look was last accessed by any user (read-only)
   */
  var last_accessed_at: Date? = null,
  /**
   * Id of User that last updated the look. (read-only)
   */
  var last_updater_id: Long? = null,
  /**
   * Time last viewed in the Looker web UI (read-only)
   */
  var last_viewed_at: Date? = null,
  var model: LookModel? = null,
  /**
   * Is Public
   */
  var public: Boolean? = null,
  /**
   * Public Slug (read-only)
   */
  var public_slug: String? = null,
  /**
   * Public Url (read-only)
   */
  var public_url: String? = null,
  /**
   * Query Id
   */
  var query_id: Long? = null,
  /**
   * Short Url (read-only)
   */
  var short_url: String? = null,
  var folder: FolderBase? = null,
  /**
   * Folder Id
   */
  var folder_id: String? = null,
  /**
   * Time that the Look was updated. (read-only)
   */
  var updated_at: Date? = null,
  /**
   * User Id
   */
  var user_id: Long? = null,
  /**
   * Number of times viewed in the Looker web UI (read-only)
   */
  var view_count: Long? = null,
  var user: UserIdOnly? = null,
  /**
   * Space Id
   */
  var space_id: String? = null,
  var space: SpaceBase? = null,
  var query: Query? = null,
  /**
   * Url (read-only)
   */
  var url: String? = null
) : Serializable

data class Manifest (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Manifest project name (read-only)
   */
  var name: String? = null,
  /**
   * Imports for a project (read-only)
   */
  var imports: Array<ImportedProject>? = null,
  var localization_settings: LocalizationSettings? = null
) : Serializable

data class MergeFields (
  /**
   * Field name to map onto in the merged results
   */
  var field_name: String? = null,
  /**
   * Field name from the source query
   */
  var source_field_name: String? = null
) : Serializable

data class MergeQuery (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Column Limit
   */
  var column_limit: String? = null,
  /**
   * Dynamic Fields
   */
  var dynamic_fields: String? = null,
  /**
   * Unique Id (read-only)
   */
  var id: String? = null,
  /**
   * Pivots
   */
  var pivots: Array<String>? = null,
  /**
   * Unique to get results (read-only)
   */
  var result_maker_id: Long? = null,
  /**
   * Sorts
   */
  var sorts: Array<String>? = null,
  /**
   * Source Queries defining the results to be merged.
   */
  var source_queries: Array<MergeQuerySourceQuery>? = null,
  /**
   * Total
   */
  var total: Boolean? = null,
  /**
   * Visualization Config
   */
  var vis_config: Map<String,Any>? = null
) : Serializable

data class MergeQuerySourceQuery (
  /**
   * An array defining which fields of the source query are mapped onto fields of the merge query
   */
  var merge_fields: Array<MergeFields>? = null,
  /**
   * Display name
   */
  var name: String? = null,
  /**
   * Id of the query to merge
   */
  var query_id: Long? = null
) : Serializable

data class ModelSet (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * (read-only)
   */
  var all_access: Boolean? = null,
  /**
   * (read-only)
   */
  var built_in: Boolean? = null,
  /**
   * Unique Id (read-only)
   */
  var id: Long? = null,
  var models: Array<String>? = null,
  /**
   * Name of ModelSet
   */
  var name: String? = null,
  /**
   * Link to get this item (read-only)
   */
  var url: UriString? = null
) : Serializable

data class ModelsNotValidated (
  /**
   * Model name (read-only)
   */
  var name: String? = null,
  /**
   * Project file (read-only)
   */
  var project_file_id: String? = null
) : Serializable

/**
 * The type of time interval this field represents a grouping of. Valid values are: "day", "hour", "minute", "second", "millisecond", "microsecond", "week", "month", "year".
 */
enum class Name : Serializable {
  day,
  hour,
  minute,
  second,
  millisecond,
  microsecond,
  week,
  month,
  year
}

data class OIDCConfig (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Allow alternate email-based login via '/login/email' for admins and for specified users with the 'login_special_email' permission. This option is useful as a fallback during ldap setup, if ldap config problems occur later, or if you need to support some users who are not in your ldap directory. Looker email/password logins are always disabled for regular users when ldap is enabled.
   */
  var alternate_email_login_allowed: Boolean? = null,
  /**
   * OpenID Provider Audience
   */
  var audience: String? = null,
  /**
   * Users will not be allowed to login at all unless a role for them is found in OIDC if set to true
   */
  var auth_requires_role: Boolean? = null,
  /**
   * OpenID Provider Authorization Url
   */
  var authorization_endpoint: UriString? = null,
  /**
   * (Write-Only) Array of ids of groups that will be applied to new users the first time they login via OIDC
   */
  var default_new_user_group_ids: Array<Long>? = null,
  /**
   * (Read-only) Groups that will be applied to new users the first time they login via OIDC (read-only)
   */
  var default_new_user_groups: Array<Group>? = null,
  /**
   * (Write-Only) Array of ids of roles that will be applied to new users the first time they login via OIDC
   */
  var default_new_user_role_ids: Array<Long>? = null,
  /**
   * (Read-only) Roles that will be applied to new users the first time they login via OIDC (read-only)
   */
  var default_new_user_roles: Array<Role>? = null,
  /**
   * Enable/Disable OIDC authentication for the server
   */
  var enabled: Boolean? = null,
  /**
   * (Read-only) Array of mappings between OIDC Groups and Looker Roles (read-only)
   */
  var groups: Array<OIDCGroupRead>? = null,
  /**
   * Name of user record attributes used to indicate groups. Used when 'groups_finder_type' is set to 'grouped_attribute_values'
   */
  var groups_attribute: String? = null,
  /**
   * (Read/Write) Array of mappings between OIDC Groups and arrays of Looker Role ids
   */
  var groups_with_role_ids: Array<OIDCGroupWrite>? = null,
  /**
   * Relying Party Identifier (provided by OpenID Provider)
   */
  var identifier: String? = null,
  /**
   * OpenID Provider Issuer
   */
  var issuer: String? = null,
  /**
   * When this config was last modified (read-only)
   */
  var modified_at: Date? = null,
  /**
   * User id of user who last modified this config (read-only)
   */
  var modified_by: Long? = null,
  /**
   * Merge first-time oidc login to existing user account by email addresses. When a user logs in for the first time via oidc this option will connect this user into their existing account by finding the account with a matching email address by testing the given types of credentials for existing users. Otherwise a new user account will be created for the user. This list (if provided) must be a comma separated list of string like 'email,ldap,google'
   */
  var new_user_migration_types: String? = null,
  /**
   * Array of scopes to request.
   */
  var scopes: Array<String>? = null,
  /**
   * (Write-Only) Relying Party Secret (provided by OpenID Provider)
   */
  var secret: String? = null,
  /**
   * Set user roles in Looker based on groups from OIDC
   */
  var set_roles_from_groups: Boolean? = null,
  /**
   * Slug to identify configurations that are created in order to run a OIDC config test (read-only)
   */
  var test_slug: String? = null,
  /**
   * OpenID Provider Token Url
   */
  var token_endpoint: String? = null,
  /**
   * Name of user record attributes used to indicate email address field
   */
  var user_attribute_map_email: String? = null,
  /**
   * Name of user record attributes used to indicate first name
   */
  var user_attribute_map_first_name: String? = null,
  /**
   * Name of user record attributes used to indicate last name
   */
  var user_attribute_map_last_name: String? = null,
  /**
   * (Read-only) Array of mappings between OIDC User Attributes and Looker User Attributes (read-only)
   */
  var user_attributes: Array<OIDCUserAttributeRead>? = null,
  /**
   * (Read/Write) Array of mappings between OIDC User Attributes and arrays of Looker User Attribute ids
   */
  var user_attributes_with_ids: Array<OIDCUserAttributeWrite>? = null,
  /**
   * OpenID Provider User Information Url
   */
  var userinfo_endpoint: UriString? = null,
  /**
   * Allow OIDC auth'd users to be members of non-reflected Looker groups. If 'false', user will be removed from non-reflected groups on login.
   */
  var allow_normal_group_membership: Boolean? = null,
  /**
   * OIDC auth'd users will inherit roles from non-reflected Looker groups.
   */
  var allow_roles_from_normal_groups: Boolean? = null,
  /**
   * Allows roles to be directly assigned to OIDC auth'd users.
   */
  var allow_direct_roles: Boolean? = null,
  /**
   * Link to get this item (read-only)
   */
  var url: UriString? = null
) : Serializable

data class OIDCGroupRead (
  /**
   * Unique Id (read-only)
   */
  var id: Long? = null,
  /**
   * Unique Id of group in Looker (read-only)
   */
  var looker_group_id: Long? = null,
  /**
   * Name of group in Looker (read-only)
   */
  var looker_group_name: String? = null,
  /**
   * Name of group in OIDC (read-only)
   */
  var name: String? = null,
  /**
   * Looker Roles (read-only)
   */
  var roles: Array<Role>? = null
) : Serializable

data class OIDCGroupWrite (
  /**
   * Unique Id
   */
  var id: Long? = null,
  /**
   * Unique Id of group in Looker (read-only)
   */
  var looker_group_id: Long? = null,
  /**
   * Name of group in Looker
   */
  var looker_group_name: String? = null,
  /**
   * Name of group in OIDC
   */
  var name: String? = null,
  /**
   * Looker Role Ids
   */
  var role_ids: Array<Long>? = null,
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null
) : Serializable

data class OIDCUserAttributeRead (
  /**
   * Name of User Attribute in OIDC (read-only)
   */
  var name: String? = null,
  /**
   * Required to be in OIDC assertion for login to be allowed to succeed (read-only)
   */
  var required: Boolean? = null,
  /**
   * Looker User Attributes (read-only)
   */
  var user_attributes: Array<UserAttribute>? = null
) : Serializable

data class OIDCUserAttributeWrite (
  /**
   * Name of User Attribute in OIDC
   */
  var name: String? = null,
  /**
   * Required to be in OIDC assertion for login to be allowed to succeed
   */
  var required: Boolean? = null,
  /**
   * Looker User Attribute Ids
   */
  var user_attribute_ids: Array<Long>? = null,
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null
) : Serializable

data class PasswordConfig (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Minimum number of characters required for a new password.  Must be between 7 and 100
   */
  var min_length: Long? = null,
  /**
   * Require at least one numeric character
   */
  var require_numeric: Boolean? = null,
  /**
   * Require at least one uppercase and one lowercase letter
   */
  var require_upperlower: Boolean? = null,
  /**
   * Require at least one special character
   */
  var require_special: Boolean? = null
) : Serializable

data class Permission (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Permission symbol (read-only)
   */
  var permission: String? = null,
  /**
   * Dependency parent symbol (read-only)
   */
  var parent: String? = null,
  /**
   * Description (read-only)
   */
  var description: String? = null
) : Serializable

data class PermissionSet (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * (read-only)
   */
  var all_access: Boolean? = null,
  /**
   * (read-only)
   */
  var built_in: Boolean? = null,
  /**
   * Unique Id (read-only)
   */
  var id: Long? = null,
  /**
   * Name of PermissionSet
   */
  var name: String? = null,
  var permissions: Array<String>? = null,
  /**
   * Link to get this item (read-only)
   */
  var url: UriString? = null
) : Serializable

/**
 * Type of permission: "view" or "edit" Valid values are: "view", "edit".
 */
enum class PermissionType : Serializable {
  view,
  edit
}

data class Project (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Project Id (read-only)
   */
  var id: String? = null,
  /**
   * Project display name
   */
  var name: String? = null,
  /**
   * If true the project is configured with a git repository (read-only)
   */
  var uses_git: Boolean? = null,
  /**
   * Git remote repository url
   */
  var git_remote_url: String? = null,
  /**
   * Git username for HTTPS authentication. (For production only, if using user attributes.)
   */
  var git_username: String? = null,
  /**
   * (Write-Only) Git password for HTTPS authentication. (For production only, if using user attributes.)
   */
  var git_password: String? = null,
  /**
   * User attribute name for username in per-user HTTPS authentication.
   */
  var git_username_user_attribute: String? = null,
  /**
   * User attribute name for password in per-user HTTPS authentication.
   */
  var git_password_user_attribute: String? = null,
  /**
   * Name of the git service provider
   */
  var git_service_name: String? = null,
  /**
   * Port that HTTP(S) application server is running on (for PRs, file browsing, etc.)
   */
  var git_application_server_http_port: Long? = null,
  /**
   * Scheme that is running on application server (for PRs, file browsing, etc.) Valid values are: "http", "https".
   */
  var git_application_server_http_scheme: GitApplicationServerHttpScheme? = null,
  /**
   * (Write-Only) Optional secret token with which to authenticate requests to the webhook deploy endpoint. If not set, endpoint is unauthenticated.
   */
  var deploy_secret: String? = null,
  /**
   * (Write-Only) When true, unsets the deploy secret to allow unauthenticated access to the webhook deploy endpoint.
   */
  var unset_deploy_secret: Boolean? = null,
  /**
   * The git pull request policy for this project. Valid values are: "off", "links", "recommended", "required".
   */
  var pull_request_mode: PullRequestMode? = null,
  /**
   * Validation policy: If true, the project must pass validation checks before project changes can be committed to the git repository
   */
  var validation_required: Boolean? = null,
  /**
   * If true, folders are enabled for this project
   */
  var folders_enabled: Boolean? = null,
  /**
   * If true, advanced git release management is enabled for this project
   */
  var git_release_mgmt_enabled: Boolean? = null,
  /**
   * Validation policy: If true, the project can be committed with warnings when `validation_required` is true. (`allow_warnings` does nothing if `validation_required` is false).
   */
  var allow_warnings: Boolean? = null,
  /**
   * If true the project is an example project and cannot be modified (read-only)
   */
  var is_example: Boolean? = null
) : Serializable

data class ProjectError (
  /**
   * A stable token that uniquely identifies this class of error, ignoring parameter values. Error message text may vary due to parameters or localization, but error codes do not. For example, a "File not found" error will have the same error code regardless of the filename in question or the user's display language (read-only)
   */
  var code: String? = null,
  /**
   * Severity: fatal, error, warning, info, success (read-only)
   */
  var severity: String? = null,
  /**
   * Error classification: syntax, deprecation, model_configuration, etc (read-only)
   */
  var kind: String? = null,
  /**
   * Error message which may contain information such as dashboard or model names that may be considered sensitive in some use cases. Avoid storing or sending this message outside of Looker (read-only)
   */
  var message: String? = null,
  /**
   * The field associated with this error (read-only)
   */
  var field_name: String? = null,
  /**
   * Name of the file containing this error (read-only)
   */
  var file_path: String? = null,
  /**
   * Line number in the file of this error (read-only)
   */
  var line_number: Long? = null,
  /**
   * The model associated with this error (read-only)
   */
  var model_id: String? = null,
  /**
   * The explore associated with this error (read-only)
   */
  var explore: String? = null,
  /**
   * A link to Looker documentation about this error (read-only)
   */
  var help_url: String? = null,
  /**
   * Error parameters (read-only)
   */
  var params: Map<String,Any>? = null,
  /**
   * A version of the error message that does not contain potentially sensitive information. Suitable for situations in which messages are stored or sent to consumers outside of Looker, such as external logs. Sanitized messages will display "(?)" where sensitive information would appear in the corresponding non-sanitized message (read-only)
   */
  var sanitized_message: String? = null
) : Serializable

data class ProjectFile (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * An opaque token uniquely identifying a file within a project. Avoid parsing or decomposing the text of this token. This token is stable within a Looker release but may change between Looker releases (read-only)
   */
  var id: String? = null,
  /**
   * Path, file name, and extension of the file relative to the project root directory (read-only)
   */
  var path: String? = null,
  /**
   * Display name (read-only)
   */
  var title: String? = null,
  /**
   * File type: model, view, etc (read-only)
   */
  var type: String? = null,
  /**
   * The extension of the file: .view.lkml, .model.lkml, etc (read-only)
   */
  var extension: String? = null,
  /**
   * File mime type (read-only)
   */
  var mime_type: String? = null,
  /**
   * State of editability for the file. (read-only)
   */
  var editable: Boolean? = null,
  var git_status: GitStatus? = null
) : Serializable

data class ProjectValidation (
  /**
   * A list of project errors (read-only)
   */
  var errors: Array<ProjectError>? = null,
  /**
   * A hash value computed from the project's current state (read-only)
   */
  var project_digest: String? = null,
  /**
   * A list of models which were not fully validated (read-only)
   */
  var models_not_validated: Array<ModelsNotValidated>? = null,
  /**
   * Duration of project validation in seconds (read-only)
   */
  var computation_time: Float? = null
) : Serializable

data class ProjectValidationCache (
  /**
   * A list of project errors (read-only)
   */
  var errors: Array<ProjectError>? = null,
  /**
   * A hash value computed from the project's current state (read-only)
   */
  var project_digest: String? = null,
  /**
   * A list of models which were not fully validated (read-only)
   */
  var models_not_validated: Array<ModelsNotValidated>? = null,
  /**
   * Duration of project validation in seconds (read-only)
   */
  var computation_time: Float? = null,
  /**
   * If true, the cached project validation results are no longer accurate because the project has changed since the cached results were calculated (read-only)
   */
  var stale: Boolean? = null
) : Serializable

data class ProjectWorkspace (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * The id of the project (read-only)
   */
  var project_id: String? = null,
  /**
   * The id of the local workspace containing the project files (read-only)
   */
  var workspace_id: String? = null,
  /**
   * The status of the local git directory (read-only)
   */
  var git_status: String? = null,
  /**
   * Git head revision name (read-only)
   */
  var git_head: String? = null,
  /**
   * Status of the dependencies in your project. Valid values are: "lock_optional", "lock_required", "lock_error", "install_none". (read-only)
   */
  var dependency_status: DependencyStatus? = null,
  var git_branch: GitBranch? = null,
  /**
   * The lookml syntax used by all files in this project (read-only)
   */
  var lookml_type: String? = null
) : Serializable

/**
 * The git pull request policy for this project. Valid values are: "off", "links", "recommended", "required".
 */
enum class PullRequestMode : Serializable {
  off,
  links,
  recommended,
  required
}

data class Query (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Unique Id (read-only)
   */
  var id: Long? = null,
  /**
   * Model
   */
  var model: String,
  /**
   * Explore Name
   */
  var view: String,
  /**
   * Fields
   */
  var fields: Array<String>? = null,
  /**
   * Pivots
   */
  var pivots: Array<String>? = null,
  /**
   * Fill Fields
   */
  var fill_fields: Array<String>? = null,
  /**
   * Filters
   */
  var filters: Map<String,Any>? = null,
  /**
   * Filter Expression
   */
  var filter_expression: String? = null,
  /**
   * Sorting for the query results. Use the format `["view.field", ...]` to sort on fields in ascending order. Use the format `["view.field desc", ...]` to sort on fields in descending order. Use `["__UNSORTED__"]` (2 underscores before and after) to disable sorting entirely. Empty sorts `[]` will trigger a default sort.
   */
  var sorts: Array<String>? = null,
  /**
   * Limit
   */
  var limit: String? = null,
  /**
   * Column Limit
   */
  var column_limit: String? = null,
  /**
   * Total
   */
  var total: Boolean? = null,
  /**
   * Raw Total
   */
  var row_total: String? = null,
  /**
   * Fields on which to run subtotals
   */
  var subtotals: Array<String>? = null,
  /**
   * Visualization configuration properties. These properties are typically opaque and differ based on the type of visualization used. There is no specified set of allowed keys. The values can be any type supported by JSON. A "type" key with a string value is often present, and is used by Looker to determine which visualization to present. Visualizations ignore unknown vis_config properties.
   */
  var vis_config: Map<String,Any>? = null,
  /**
   * The filter_config represents the state of the filter UI on the explore page for a given query. When running a query via the Looker UI, this parameter takes precedence over "filters". When creating a query or modifying an existing query, "filter_config" should be set to null. Setting it to any other value could cause unexpected filtering behavior. The format should be considered opaque.
   */
  var filter_config: Map<String,Any>? = null,
  /**
   * Visible UI Sections
   */
  var visible_ui_sections: String? = null,
  /**
   * Slug (read-only)
   */
  var slug: String? = null,
  /**
   * Dynamic Fields
   */
  var dynamic_fields: String? = null,
  /**
   * Client Id: used to generate shortened explore URLs. If set by client, must be a unique 22 character alphanumeric string. Otherwise one will be generated.
   */
  var client_id: String? = null,
  /**
   * Share Url (read-only)
   */
  var share_url: String? = null,
  /**
   * Expanded Share Url (read-only)
   */
  var expanded_share_url: String? = null,
  /**
   * Expanded Url (read-only)
   */
  var url: String? = null,
  /**
   * Query Timezone
   */
  var query_timezone: String? = null,
  /**
   * Has Table Calculations (read-only)
   */
  var has_table_calculations: Boolean? = null,
  /**
   * (DEPRECATED) Runtime (Deprecated)
   */
  var runtime: Double? = null
) : Serializable

data class QueryTask (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Unique Id (read-only)
   */
  var id: String? = null,
  /**
   * Id of query
   */
  var query_id: Long? = null,
  var query: Query? = null,
  /**
   * whether or not to generate links in the query response.
   */
  var generate_links: Boolean? = null,
  /**
   * Use production models to run query (even is user is in dev mode).
   */
  var force_production: Boolean? = null,
  /**
   * Prefix to use for drill links.
   */
  var path_prefix: String? = null,
  /**
   * Whether or not to use the cache
   */
  var cache: Boolean? = null,
  /**
   * Whether or not to run table calculations on the server
   */
  var server_table_calcs: Boolean? = null,
  /**
   * Retrieve any results from cache even if the results have expired.
   */
  var cache_only: Boolean? = null,
  /**
   * cache key used to cache query. (read-only)
   */
  var cache_key: String? = null,
  /**
   * Status of query task.
   */
  var status: String? = null,
  /**
   * Source of query task.
   */
  var source: String? = null,
  /**
   * Runtime of prior queries. (read-only)
   */
  var runtime: Float? = null,
  /**
   * Rebuild PDTS used in query.
   */
  var rebuild_pdts: Boolean? = null,
  /**
   * Source of the results of the query. (read-only)
   */
  var result_source: String? = null,
  /**
   * Id of look associated with query.
   */
  var look_id: Long? = null,
  /**
   * Id of dashboard associated with query.
   */
  var dashboard_id: String? = null,
  /**
   * The data format of the query results. (read-only)
   */
  var result_format: String? = null
) : Serializable

data class RenderTask (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Date/Time render task was created (read-only)
   */
  var created_at: String? = null,
  /**
   * Filter values to apply to the dashboard queries, in URL query format (read-only)
   */
  var dashboard_filters: String? = null,
  /**
   * Id of dashboard to render (read-only)
   */
  var dashboard_id: Long? = null,
  /**
   * Dashboard layout style: single_column or tiled (read-only)
   */
  var dashboard_style: String? = null,
  /**
   * Date/Time render task was completed (read-only)
   */
  var finalized_at: String? = null,
  /**
   * Output height in pixels. Flowed layouts may ignore this value. (read-only)
   */
  var height: Long? = null,
  /**
   * Id of this render task (read-only)
   */
  var id: String? = null,
  /**
   * Id of look to render (read-only)
   */
  var look_id: Long? = null,
  /**
   * Id of lookml dashboard to render (read-only)
   */
  var lookml_dashboard_id: String? = null,
  /**
   * Id of query to render (read-only)
   */
  var query_id: Long? = null,
  /**
   * Number of seconds elapsed running queries (read-only)
   */
  var query_runtime: Double? = null,
  /**
   * Number of seconds elapsed rendering data (read-only)
   */
  var render_runtime: Double? = null,
  /**
   * Output format: pdf, png, or jpg (read-only)
   */
  var result_format: String? = null,
  /**
   * Total seconds elapsed for render task (read-only)
   */
  var runtime: Double? = null,
  /**
   * Render task status: enqueued_for_query, querying, enqueued_for_render, rendering, success, failure (read-only)
   */
  var status: String? = null,
  /**
   * Additional information about the current status (read-only)
   */
  var status_detail: String? = null,
  /**
   * The user account permissions in which the render task will execute (read-only)
   */
  var user_id: Long? = null,
  /**
   * Output width in pixels (read-only)
   */
  var width: Long? = null
) : Serializable

data class RepositoryCredential (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Unique Id (read-only)
   */
  var id: String? = null,
  /**
   * Root project Id (read-only)
   */
  var root_project_id: String? = null,
  /**
   * Git remote repository url (read-only)
   */
  var remote_url: String? = null,
  /**
   * Git username for HTTPS authentication.
   */
  var git_username: String? = null,
  /**
   * (Write-Only) Git password for HTTPS authentication.
   */
  var git_password: String? = null,
  /**
   * Public deploy key for SSH authentication.
   */
  var ssh_public_key: String? = null,
  /**
   * Whether the credentials have been configured for the Git Repository. (read-only)
   */
  var is_configured: Boolean? = null
) : Serializable

/**
 * Desired async query result format. Valid values are: "inline_json", "json", "json_detail", "json_fe", "csv", "html", "md", "txt", "xlsx", "gsxml".
 */
enum class ResultFormat : Serializable {
  inline_json,
  json,
  json_detail,
  json_fe,
  csv,
  html,
  md,
  txt,
  xlsx,
  gsxml
}

data class ResultMakerFilterables (
  /**
   * The model this filterable comes from (used for field suggestions). (read-only)
   */
  var model: String? = null,
  /**
   * The view this filterable comes from (used for field suggestions). (read-only)
   */
  var view: String? = null,
  /**
   * The name of the filterable thing (Query or Merged Results). (read-only)
   */
  var name: String? = null,
  /**
   * array of dashboard_filter_name: and field: objects. (read-only)
   */
  var listen: Array<ResultMakerFilterablesListen>? = null
) : Serializable

data class ResultMakerFilterablesListen (
  /**
   * The name of a dashboard filter to listen to.
   */
  var dashboard_filter_name: String? = null,
  /**
   * The name of the field in the filterable to filter with the value of the dashboard filter.
   */
  var field: String? = null
) : Serializable

data class ResultMakerWithIdVisConfigAndDynamicFields (
  /**
   * Unique Id. (read-only)
   */
  var id: Long? = null,
  /**
   * JSON string of dynamic field information. (read-only)
   */
  var dynamic_fields: String? = null,
  /**
   * array of items that can be filtered and information about them. (read-only)
   */
  var filterables: Array<ResultMakerFilterables>? = null,
  /**
   * Sorts of the constituent Look, Query, or Merge Query (read-only)
   */
  var sorts: Array<String>? = null,
  /**
   * ID of merge result if this is a merge_result. (read-only)
   */
  var merge_result_id: String? = null,
  /**
   * Total of the constituent Look, Query, or Merge Query (read-only)
   */
  var total: Boolean? = null,
  /**
   * ID of query if this is a query. (read-only)
   */
  var query_id: Long? = null,
  /**
   * ID of SQL Query if this is a SQL Runner Query (read-only)
   */
  var sql_query_id: String? = null,
  var query: Query? = null,
  /**
   * Vis config of the constituent Query, or Merge Query. (read-only)
   */
  var vis_config: Map<String,Any>? = null
) : Serializable

data class Role (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Unique Id (read-only)
   */
  var id: Long? = null,
  /**
   * Name of Role
   */
  var name: String? = null,
  var permission_set: PermissionSet? = null,
  /**
   * (Write-Only) Id of permission set
   */
  var permission_set_id: Long? = null,
  var model_set: ModelSet? = null,
  /**
   * (Write-Only) Id of model set
   */
  var model_set_id: Long? = null,
  /**
   * Link to get this item (read-only)
   */
  var url: UriString? = null,
  /**
   * Link to get list of users with this role (read-only)
   */
  var users_url: UriString? = null
) : Serializable

data class RunningQueries (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Unique Id (read-only)
   */
  var id: Long? = null,
  var user: UserPublic? = null,
  var query: Query? = null,
  var sql_query: SqlQuery? = null,
  var look: LookBasic? = null,
  /**
   * Date/Time Query was initiated (read-only)
   */
  var created_at: String? = null,
  /**
   * Date/Time Query was completed (read-only)
   */
  var completed_at: String? = null,
  /**
   * Query Id (read-only)
   */
  var query_id: String? = null,
  /**
   * Source (look, dashboard, queryrunner, explore, etc.) (read-only)
   */
  var source: String? = null,
  /**
   * Node Id (read-only)
   */
  var node_id: String? = null,
  /**
   * Slug (read-only)
   */
  var slug: String? = null,
  /**
   * ID of a Query Task (read-only)
   */
  var query_task_id: String? = null,
  /**
   * Cache Key (read-only)
   */
  var cache_key: String? = null,
  /**
   * Connection (read-only)
   */
  var connection_name: String? = null,
  /**
   * Dialect (read-only)
   */
  var dialect: String? = null,
  /**
   * Connection ID (read-only)
   */
  var connection_id: String? = null,
  /**
   * Additional Information(Error message or verbose status) (read-only)
   */
  var message: String? = null,
  /**
   * Status description (read-only)
   */
  var status: String? = null,
  /**
   * Number of seconds elapsed running the Query (read-only)
   */
  var runtime: Double? = null,
  /**
   * SQL text of the query as run (read-only)
   */
  var sql: String? = null
) : Serializable

data class SamlConfig (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Enable/Disable Saml authentication for the server
   */
  var enabled: Boolean? = null,
  /**
   * Identity Provider Certificate (provided by IdP)
   */
  var idp_cert: String? = null,
  /**
   * Identity Provider Url (provided by IdP)
   */
  var idp_url: String? = null,
  /**
   * Identity Provider Issuer (provided by IdP)
   */
  var idp_issuer: String? = null,
  /**
   * Identity Provider Audience (set in IdP config). Optional in Looker. Set this only if you want Looker to validate the audience value returned by the IdP.
   */
  var idp_audience: String? = null,
  /**
   * Count of seconds of clock drift to allow when validating timestamps of assertions.
   */
  var allowed_clock_drift: Long? = null,
  /**
   * Name of user record attributes used to indicate email address field
   */
  var user_attribute_map_email: String? = null,
  /**
   * Name of user record attributes used to indicate first name
   */
  var user_attribute_map_first_name: String? = null,
  /**
   * Name of user record attributes used to indicate last name
   */
  var user_attribute_map_last_name: String? = null,
  /**
   * Merge first-time saml login to existing user account by email addresses. When a user logs in for the first time via saml this option will connect this user into their existing account by finding the account with a matching email address by testing the given types of credentials for existing users. Otherwise a new user account will be created for the user. This list (if provided) must be a comma separated list of string like 'email,ldap,google'
   */
  var new_user_migration_types: String? = null,
  /**
   * Allow alternate email-based login via '/login/email' for admins and for specified users with the 'login_special_email' permission. This option is useful as a fallback during ldap setup, if ldap config problems occur later, or if you need to support some users who are not in your ldap directory. Looker email/password logins are always disabled for regular users when ldap is enabled.
   */
  var alternate_email_login_allowed: Boolean? = null,
  /**
   * Slug to identify configurations that are created in order to run a Saml config test (read-only)
   */
  var test_slug: String? = null,
  /**
   * When this config was last modified (read-only)
   */
  var modified_at: String? = null,
  /**
   * User id of user who last modified this config (read-only)
   */
  var modified_by: String? = null,
  /**
   * (Read-only) Roles that will be applied to new users the first time they login via Saml (read-only)
   */
  var default_new_user_roles: Array<Role>? = null,
  /**
   * (Read-only) Groups that will be applied to new users the first time they login via Saml (read-only)
   */
  var default_new_user_groups: Array<Group>? = null,
  /**
   * (Write-Only) Array of ids of roles that will be applied to new users the first time they login via Saml
   */
  var default_new_user_role_ids: Array<Long>? = null,
  /**
   * (Write-Only) Array of ids of groups that will be applied to new users the first time they login via Saml
   */
  var default_new_user_group_ids: Array<Long>? = null,
  /**
   * Set user roles in Looker based on groups from Saml
   */
  var set_roles_from_groups: Boolean? = null,
  /**
   * Name of user record attributes used to indicate groups. Used when 'groups_finder_type' is set to 'grouped_attribute_values'
   */
  var groups_attribute: String? = null,
  /**
   * (Read-only) Array of mappings between Saml Groups and Looker Roles (read-only)
   */
  var groups: Array<SamlGroupRead>? = null,
  /**
   * (Read/Write) Array of mappings between Saml Groups and arrays of Looker Role ids
   */
  var groups_with_role_ids: Array<SamlGroupWrite>? = null,
  /**
   * Users will not be allowed to login at all unless a role for them is found in Saml if set to true
   */
  var auth_requires_role: Boolean? = null,
  /**
   * (Read-only) Array of mappings between Saml User Attributes and Looker User Attributes (read-only)
   */
  var user_attributes: Array<SamlUserAttributeRead>? = null,
  /**
   * (Read/Write) Array of mappings between Saml User Attributes and arrays of Looker User Attribute ids
   */
  var user_attributes_with_ids: Array<SamlUserAttributeWrite>? = null,
  /**
   * Identifier for a strategy for how Looker will find groups in the SAML response. One of ['grouped_attribute_values', 'individual_attributes']
   */
  var groups_finder_type: String? = null,
  /**
   * Value for group attribute used to indicate membership. Used when 'groups_finder_type' is set to 'individual_attributes'
   */
  var groups_member_value: String? = null,
  /**
   * Bypass the login page when user authentication is required. Redirect to IdP immediately instead.
   */
  var bypass_login_page: Boolean? = null,
  /**
   * Allow SAML auth'd users to be members of non-reflected Looker groups. If 'false', user will be removed from non-reflected groups on login.
   */
  var allow_normal_group_membership: Boolean? = null,
  /**
   * SAML auth'd users will inherit roles from non-reflected Looker groups.
   */
  var allow_roles_from_normal_groups: Boolean? = null,
  /**
   * Allows roles to be directly assigned to SAML auth'd users.
   */
  var allow_direct_roles: Boolean? = null,
  /**
   * Link to get this item (read-only)
   */
  var url: UriString? = null
) : Serializable

data class SamlGroupRead (
  /**
   * Unique Id (read-only)
   */
  var id: Long? = null,
  /**
   * Unique Id of group in Looker (read-only)
   */
  var looker_group_id: Long? = null,
  /**
   * Name of group in Looker (read-only)
   */
  var looker_group_name: String? = null,
  /**
   * Name of group in Saml (read-only)
   */
  var name: String? = null,
  /**
   * Looker Roles (read-only)
   */
  var roles: Array<Role>? = null,
  /**
   * Link to saml config (read-only)
   */
  var url: UriString? = null
) : Serializable

data class SamlGroupWrite (
  /**
   * Unique Id
   */
  var id: Long? = null,
  /**
   * Unique Id of group in Looker (read-only)
   */
  var looker_group_id: Long? = null,
  /**
   * Name of group in Looker
   */
  var looker_group_name: String? = null,
  /**
   * Name of group in Saml
   */
  var name: String? = null,
  /**
   * Looker Role Ids
   */
  var role_ids: Array<Long>? = null,
  /**
   * Link to saml config (read-only)
   */
  var url: UriString? = null
) : Serializable

data class SamlMetadataParseResult (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Identify Provider Issuer (read-only)
   */
  var idp_issuer: String? = null,
  /**
   * Identify Provider Url (read-only)
   */
  var idp_url: String? = null,
  /**
   * Identify Provider Certificate (read-only)
   */
  var idp_cert: String? = null
) : Serializable

data class SamlUserAttributeRead (
  /**
   * Name of User Attribute in Saml (read-only)
   */
  var name: String? = null,
  /**
   * Required to be in Saml assertion for login to be allowed to succeed (read-only)
   */
  var required: Boolean? = null,
  /**
   * Looker User Attributes (read-only)
   */
  var user_attributes: Array<UserAttribute>? = null,
  /**
   * Link to saml config (read-only)
   */
  var url: UriString? = null
) : Serializable

data class SamlUserAttributeWrite (
  /**
   * Name of User Attribute in Saml
   */
  var name: String? = null,
  /**
   * Required to be in Saml assertion for login to be allowed to succeed
   */
  var required: Boolean? = null,
  /**
   * Looker User Attribute Ids
   */
  var user_attribute_ids: Array<Long>? = null,
  /**
   * Link to saml config (read-only)
   */
  var url: UriString? = null
) : Serializable

data class ScheduledPlan (
  /**
   * Name of this scheduled plan
   */
  var name: String? = null,
  /**
   * User Id which owns this scheduled plan
   */
  var user_id: Long? = null,
  /**
   * Whether schedule is run as recipient (only applicable for email recipients)
   */
  var run_as_recipient: Boolean? = null,
  /**
   * Whether the ScheduledPlan is enabled
   */
  var enabled: Boolean? = null,
  /**
   * Id of a look
   */
  var look_id: Long? = null,
  /**
   * Id of a dashboard
   */
  var dashboard_id: Long? = null,
  /**
   * Id of a LookML dashboard
   */
  var lookml_dashboard_id: String? = null,
  /**
   * Query string to run look or dashboard with
   */
  var filters_string: String? = null,
  /**
   * (DEPRECATED) Alias for filters_string field
   */
  var dashboard_filters: String? = null,
  /**
   * Delivery should occur if running the dashboard or look returns results
   */
  var require_results: Boolean? = null,
  /**
   * Delivery should occur if the dashboard look does not return results
   */
  var require_no_results: Boolean? = null,
  /**
   * Delivery should occur if data have changed since the last run
   */
  var require_change: Boolean? = null,
  /**
   * Will run an unlimited query and send all results.
   */
  var send_all_results: Boolean? = null,
  /**
   * Vixie-Style crontab specification when to run
   */
  var crontab: String? = null,
  /**
   * Name of a datagroup; if specified will run when datagroup triggered (can't be used with cron string)
   */
  var datagroup: String? = null,
  /**
   * Timezone for interpreting the specified crontab (default is Looker instance timezone)
   */
  var timezone: String? = null,
  /**
   * Query id
   */
  var query_id: String? = null,
  /**
   * Scheduled plan destinations
   */
  var scheduled_plan_destination: Array<ScheduledPlanDestination>? = null,
  /**
   * Whether the plan in question should only be run once (usually for testing)
   */
  var run_once: Boolean? = null,
  /**
   * Whether links back to Looker should be included in this ScheduledPlan
   */
  var include_links: Boolean? = null,
  /**
   * The size of paper the PDF should be formatted to fit. Valid values are: "letter", "legal", "tabloid", "a0", "a1", "a2", "a3", "a4", "a5".
   */
  var pdf_paper_size: String? = null,
  /**
   * Whether the PDF should be formatted for landscape orientation
   */
  var pdf_landscape: Boolean? = null,
  /**
   * Whether this schedule is in an embed context or not
   */
  var embed: Boolean? = null,
  /**
   * Color scheme of the dashboard if applicable
   */
  var color_theme: String? = null,
  /**
   * Whether or not to expand table vis to full length
   */
  var long_tables: Boolean? = null,
  /**
   * The pixel width at which we render the inline table visualizations
   */
  var inline_table_width: Long? = null,
  /**
   * Unique Id (read-only)
   */
  var id: Long? = null,
  /**
   * Date and time when ScheduledPlan was created (read-only)
   */
  var created_at: Date? = null,
  /**
   * Date and time when ScheduledPlan was last updated (read-only)
   */
  var updated_at: Date? = null,
  /**
   * Title (read-only)
   */
  var title: String? = null,
  var user: UserPublic? = null,
  /**
   * When the ScheduledPlan will next run (null if running once) (read-only)
   */
  var next_run_at: Date? = null,
  /**
   * When the ScheduledPlan was last run (read-only)
   */
  var last_run_at: Date? = null,
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null
) : Serializable

data class ScheduledPlanDestination (
  /**
   * Unique Id (read-only)
   */
  var id: Long? = null,
  /**
   * Id of a scheduled plan you own
   */
  var scheduled_plan_id: Long? = null,
  /**
   * The data format to send to the given destination. Supported formats vary by destination, but include: "txt", "csv", "inline_json", "json", "json_detail", "xlsx", "html", "wysiwyg_pdf", "assembled_pdf", "wysiwyg_png"
   */
  var format: String? = null,
  /**
   * Are values formatted? (containing currency symbols, digit separators, etc.
   */
  var apply_formatting: Boolean? = null,
  /**
   * Whether visualization options are applied to the results.
   */
  var apply_vis: Boolean? = null,
  /**
   * Address for recipient. For email e.g. 'user@example.com'. For webhooks e.g. 'https://domain/path'. For Amazon S3 e.g. 's3://bucket-name/path/'. For SFTP e.g. 'sftp://host-name/path/'.
   */
  var address: String? = null,
  /**
   * Whether the recipient is a Looker user on the current instance (only applicable for email recipients) (read-only)
   */
  var looker_recipient: Boolean? = null,
  /**
   * Type of the address ('email', 'webhook', 's3', or 'sftp')
   */
  var type: String? = null,
  /**
   * JSON object containing parameters for external scheduling. For Amazon S3, this requires keys and values for access_key_id and region. For SFTP, this requires a key and value for username.
   */
  var parameters: String? = null,
  /**
   * (Write-Only) JSON object containing secret parameters for external scheduling. For Amazon S3, this requires a key and value for secret_access_key. For SFTP, this requires a key and value for password.
   */
  var secret_parameters: String? = null,
  /**
   * Optional message to be included in scheduled emails
   */
  var message: String? = null
) : Serializable

data class Session (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Unique Id (read-only)
   */
  var id: Long? = null,
  /**
   * IP address of user when this session was initiated (read-only)
   */
  var ip_address: String? = null,
  /**
   * User's browser type (read-only)
   */
  var browser: String? = null,
  /**
   * User's Operating System (read-only)
   */
  var operating_system: String? = null,
  /**
   * City component of user location (derived from IP address) (read-only)
   */
  var city: String? = null,
  /**
   * State component of user location (derived from IP address) (read-only)
   */
  var state: String? = null,
  /**
   * Country component of user location (derived from IP address) (read-only)
   */
  var country: String? = null,
  /**
   * Type of credentials used for logging in this session (read-only)
   */
  var credentials_type: String? = null,
  /**
   * Time when this session was last extended by the user (read-only)
   */
  var extended_at: String? = null,
  /**
   * Number of times this session was extended (read-only)
   */
  var extended_count: Long? = null,
  /**
   * Actual user in the case when this session represents one user sudo'ing as another (read-only)
   */
  var sudo_user_id: Long? = null,
  /**
   * Time when this session was initiated (read-only)
   */
  var created_at: String? = null,
  /**
   * Time when this session will expire (read-only)
   */
  var expires_at: String? = null,
  /**
   * Link to get this item (read-only)
   */
  var url: UriString? = null
) : Serializable

data class SessionConfig (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Allow users to have persistent sessions when they login
   */
  var allow_persistent_sessions: Boolean? = null,
  /**
   * Number of minutes for user sessions.  Must be between 5 and 43200
   */
  var session_minutes: Long? = null,
  /**
   * Allow users to have an unbounded number of concurrent sessions (otherwise, users will be limited to only one session at a time).
   */
  var unlimited_sessions_per_user: Boolean? = null,
  /**
   * Enforce session logout for sessions that are inactive for 15 minutes.
   */
  var use_inactivity_based_logout: Boolean? = null,
  /**
   * Track location of session when user logs in.
   */
  var track_session_location: Boolean? = null
) : Serializable

data class Snippet (
  /**
   * Name of the snippet (read-only)
   */
  var name: String? = null,
  /**
   * Label of the snippet (read-only)
   */
  var label: String? = null,
  /**
   * SQL text of the snippet (read-only)
   */
  var sql: String? = null,
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null
) : Serializable

data class Space (
  /**
   * Unique Name
   */
  var name: String,
  /**
   * Id of Parent. If the parent id is null, this is a root-level entry
   */
  var parent_id: String? = null,
  /**
   * Unique Id (read-only)
   */
  var id: String? = null,
  /**
   * Id of content metadata (read-only)
   */
  var content_metadata_id: Long? = null,
  /**
   * Time the space was created (read-only)
   */
  var created_at: Date? = null,
  /**
   * User Id of Creator (read-only)
   */
  var creator_id: Long? = null,
  /**
   * Children Count (read-only)
   */
  var child_count: Long? = null,
  /**
   * Embedder's Id if this space was autogenerated as an embedding shared space via 'external_group_id' in an SSO embed login (read-only)
   */
  var external_id: String? = null,
  /**
   * Space is an embed space (read-only)
   */
  var is_embed: Boolean? = null,
  /**
   * Space is the root embed shared space (read-only)
   */
  var is_embed_shared_root: Boolean? = null,
  /**
   * Space is the root embed users space (read-only)
   */
  var is_embed_users_root: Boolean? = null,
  /**
   * Space is a user's personal space (read-only)
   */
  var is_personal: Boolean? = null,
  /**
   * Space is descendant of a user's personal space (read-only)
   */
  var is_personal_descendant: Boolean? = null,
  /**
   * Space is the root shared space (read-only)
   */
  var is_shared_root: Boolean? = null,
  /**
   * Space is the root user space (read-only)
   */
  var is_users_root: Boolean? = null,
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Dashboards (read-only)
   */
  var dashboards: Array<DashboardBase>? = null,
  /**
   * Looks (read-only)
   */
  var looks: Array<LookWithDashboards>? = null
) : Serializable

data class SpaceBase (
  /**
   * Unique Name
   */
  var name: String,
  /**
   * Id of Parent. If the parent id is null, this is a root-level entry
   */
  var parent_id: String? = null,
  /**
   * Unique Id (read-only)
   */
  var id: String? = null,
  /**
   * Id of content metadata (read-only)
   */
  var content_metadata_id: Long? = null,
  /**
   * Time the space was created (read-only)
   */
  var created_at: Date? = null,
  /**
   * User Id of Creator (read-only)
   */
  var creator_id: Long? = null,
  /**
   * Children Count (read-only)
   */
  var child_count: Long? = null,
  /**
   * Embedder's Id if this space was autogenerated as an embedding shared space via 'external_group_id' in an SSO embed login (read-only)
   */
  var external_id: String? = null,
  /**
   * Space is an embed space (read-only)
   */
  var is_embed: Boolean? = null,
  /**
   * Space is the root embed shared space (read-only)
   */
  var is_embed_shared_root: Boolean? = null,
  /**
   * Space is the root embed users space (read-only)
   */
  var is_embed_users_root: Boolean? = null,
  /**
   * Space is a user's personal space (read-only)
   */
  var is_personal: Boolean? = null,
  /**
   * Space is descendant of a user's personal space (read-only)
   */
  var is_personal_descendant: Boolean? = null,
  /**
   * Space is the root shared space (read-only)
   */
  var is_shared_root: Boolean? = null,
  /**
   * Space is the root user space (read-only)
   */
  var is_users_root: Boolean? = null,
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null
) : Serializable

data class SqlQuery (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * The identifier of the SQL query (read-only)
   */
  var slug: String? = null,
  /**
   * Number of seconds this query took to run the most recent time it was run (read-only)
   */
  var last_runtime: Float? = null,
  /**
   * Number of times this query has been run (read-only)
   */
  var run_count: Long? = null,
  /**
   * Maximum number of rows this query will display on the SQL Runner page (read-only)
   */
  var browser_limit: Long? = null,
  /**
   * SQL query text (read-only)
   */
  var sql: String? = null,
  /**
   * The most recent time this query was run (read-only)
   */
  var last_run_at: String? = null,
  var connection: DBConnectionBase? = null,
  /**
   * Model name this query uses (read-only)
   */
  var model_name: String? = null,
  var creator: UserPublic? = null,
  /**
   * Explore page URL for this SQL query (read-only)
   */
  var explore_url: String? = null,
  /**
   * Should this query be rendered as plain text (read-only)
   */
  var plaintext: Boolean? = null,
  /**
   * Visualization configuration properties. These properties are typically opaque and differ based on the type of visualization used. There is no specified set of allowed keys. The values can be any type supported by JSON. A "type" key with a string value is often present, and is used by Looker to determine which visualization to present. Visualizations ignore unknown vis_config properties.
   */
  var vis_config: Map<String,Any>? = null,
  /**
   * ID of the ResultMakerLookup entry.
   */
  var result_maker_id: Long? = null
) : Serializable

data class SqlQueryCreate (
  /**
   * Name of the db connection on which to run this query
   */
  var connection_name: String? = null,
  /**
   * (DEPRECATED) Use `connection_name` instead
   */
  var connection_id: String? = null,
  /**
   * Name of LookML Model (this or `connection_id` required)
   */
  var model_name: String? = null,
  /**
   * SQL query
   */
  var sql: String? = null,
  /**
   * Visualization configuration properties. These properties are typically opaque and differ based on the type of visualization used. There is no specified set of allowed keys. The values can be any type supported by JSON. A "type" key with a string value is often present, and is used by Looker to determine which visualization to present. Visualizations ignore unknown vis_config properties.
   */
  var vis_config: Map<String,Any>? = null
) : Serializable

/**
 * A list of action types the integration supports. Valid values are: "cell", "query", "dashboard".
 */
enum class SupportedActionTypes : Serializable {
  cell,
  query,
  dashboard
}

/**
 * A list of all the download mechanisms the integration supports. The order of values is not significant: Looker will select the most appropriate supported download mechanism for a given query. The integration must ensure it can handle any of the mechanisms it claims to support. If unspecified, this defaults to all download setting values. Valid values are: "push", "url".
 */
enum class SupportedDownloadSettings : Serializable {
  push,
  url
}

/**
 * A list of data formats the integration supports. If unspecified, the default is all data formats. Valid values are: "txt", "csv", "inline_json", "json", "json_label", "json_detail", "json_detail_lite_stream", "xlsx", "html", "wysiwyg_pdf", "assembled_pdf", "wysiwyg_png", "csv_zip".
 */
enum class SupportedFormats : Serializable {
  txt,
  csv,
  inline_json,
  json,
  json_label,
  json_detail,
  json_detail_lite_stream,
  xlsx,
  html,
  wysiwyg_pdf,
  assembled_pdf,
  wysiwyg_png,
  csv_zip
}

/**
 * A list of formatting options the integration supports. If unspecified, defaults to all formats. Valid values are: "formatted", "unformatted".
 */
enum class SupportedFormattings : Serializable {
  formatted,
  unformatted
}

/**
 * A list of visualization formatting options the integration supports. If unspecified, defaults to all formats. Valid values are: "apply", "noapply".
 */
enum class SupportedVisualizationFormattings : Serializable {
  apply,
  noapply
}

data class Theme (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Timestamp for when this theme becomes active. Null=always
   */
  var begin_at: Date? = null,
  /**
   * Timestamp for when this theme expires. Null=never
   */
  var end_at: Date? = null,
  /**
   * Unique Id (read-only)
   */
  var id: Long? = null,
  /**
   * Name of theme. Can only be alphanumeric and underscores.
   */
  var name: String? = null,
  var settings: ThemeSettings? = null
) : Serializable

data class ThemeSettings (
  /**
   * Default background color
   */
  var background_color: String? = null,
  /**
   * Base font size for scaling fonts
   */
  var base_font_size: String? = null,
  /**
   * Optional. ID of color collection to use with the theme. Use an empty string for none.
   */
  var color_collection_id: String? = null,
  /**
   * Default font color
   */
  var font_color: String? = null,
  /**
   * Primary font family
   */
  var font_family: String? = null,
  /**
   * Source specification for font
   */
  var font_source: String? = null,
  /**
   * Info button color
   */
  var info_button_color: String? = null,
  /**
   * Primary button color
   */
  var primary_button_color: String? = null,
  /**
   * Toggle to show filters. Defaults to true.
   */
  var show_filters_bar: Boolean? = null,
  /**
   * Toggle to show the title. Defaults to true.
   */
  var show_title: Boolean? = null,
  /**
   * Text color for text tiles
   */
  var text_tile_text_color: String? = null,
  /**
   * Background color for tiles
   */
  var tile_background_color: String? = null,
  /**
   * Text color for tiles
   */
  var tile_text_color: String? = null,
  /**
   * Color for titles
   */
  var title_color: String? = null,
  /**
   * Warning button color
   */
  var warn_button_color: String? = null,
  /**
   * The text alignment of tile titles (New Dashboards)
   */
  var tile_title_alignment: String? = null,
  /**
   * Toggles the tile shadow (New Dashboards)
   */
  var tile_shadow: Boolean? = null
) : Serializable

data class Timezone (
  /**
   * Timezone (read-only)
   */
  var value: String? = null,
  /**
   * Description of timezone (read-only)
   */
  var label: String? = null,
  /**
   * Timezone group (e.g Common, Other, etc.) (read-only)
   */
  var group: String? = null
) : Serializable

data class UpdateFolder (
  /**
   * Unique Name
   */
  var name: String? = null,
  /**
   * Id of Parent. If the parent id is null, this is a root-level entry
   */
  var parent_id: String? = null
) : Serializable

data class UpdateSpace (
  /**
   * Unique Name
   */
  var name: String? = null,
  /**
   * Id of Parent. If the parent id is null, this is a root-level entry
   */
  var parent_id: String? = null
) : Serializable

data class User (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * URL for the avatar image (may be generic) (read-only)
   */
  var avatar_url: UriString? = null,
  /**
   * URL for the avatar image (may be generic), does not specify size (read-only)
   */
  var avatar_url_without_sizing: UriString? = null,
  /**
   * API 3 credentials (read-only)
   */
  var credentials_api3: Array<CredentialsApi3>? = null,
  var credentials_email: CredentialsEmail? = null,
  /**
   * Embed credentials (read-only)
   */
  var credentials_embed: Array<CredentialsEmbed>? = null,
  var credentials_google: CredentialsGoogle? = null,
  var credentials_ldap: CredentialsLDAP? = null,
  var credentials_looker_openid: CredentialsLookerOpenid? = null,
  var credentials_oidc: CredentialsOIDC? = null,
  var credentials_saml: CredentialsSaml? = null,
  var credentials_totp: CredentialsTotp? = null,
  /**
   * Full name for display (available only if both first_name and last_name are set) (read-only)
   */
  var display_name: String? = null,
  /**
   * EMail address (read-only)
   */
  var email: String? = null,
  /**
   * (Embed only) ID of user's group space based on the external_group_id optionally specified during embed user login (read-only)
   */
  var embed_group_space_id: Long? = null,
  /**
   * First name
   */
  var first_name: String? = null,
  /**
   * Array of ids of the groups for this user (read-only)
   */
  var group_ids: Array<Long>? = null,
  /**
   * ID string for user's home space
   */
  var home_space_id: String? = null,
  /**
   * ID string for user's home folder
   */
  var home_folder_id: String? = null,
  /**
   * Unique Id (read-only)
   */
  var id: Long? = null,
  /**
   * Account has been disabled
   */
  var is_disabled: Boolean? = null,
  /**
   * Last name
   */
  var last_name: String? = null,
  /**
   * User's preferred locale. User locale takes precedence over Looker's system-wide default locale. Locale determines language of display strings and date and numeric formatting in API responses. Locale string must be a 2 letter language code or a combination of language code and region code: 'en' or 'en-US', for example.
   */
  var locale: String? = null,
  /**
   * Array of strings representing the Looker versions that this user has used (this only goes back as far as '3.54.0') (read-only)
   */
  var looker_versions: Array<String>? = null,
  /**
   * User's dev workspace has been checked for presence of applicable production projects
   */
  var models_dir_validated: Boolean? = null,
  /**
   * ID of user's personal space (read-only)
   */
  var personal_space_id: Long? = null,
  /**
   * ID of user's personal folder (read-only)
   */
  var personal_folder_id: Long? = null,
  /**
   * User is identified as an employee of Looker (read-only)
   */
  var presumed_looker_employee: Boolean? = null,
  /**
   * Array of ids of the roles for this user (read-only)
   */
  var role_ids: Array<Long>? = null,
  /**
   * Active sessions (read-only)
   */
  var sessions: Array<Session>? = null,
  /**
   * Per user dictionary of undocumented state information owned by the Looker UI.
   */
  var ui_state: Map<String,Any>? = null,
  /**
   * User is identified as an employee of Looker who has been verified via Looker corporate authentication (read-only)
   */
  var verified_looker_employee: Boolean? = null,
  /**
   * User's roles are managed by an external directory like SAML or LDAP and can not be changed directly. (read-only)
   */
  var roles_externally_managed: Boolean? = null,
  /**
   * User can be directly assigned a role. (read-only)
   */
  var allow_direct_roles: Boolean? = null,
  /**
   * User can be a direct member of a normal Looker group. (read-only)
   */
  var allow_normal_group_membership: Boolean? = null,
  /**
   * User can inherit roles from a normal Looker group. (read-only)
   */
  var allow_roles_from_normal_groups: Boolean? = null,
  /**
   * Link to get this item (read-only)
   */
  var url: UriString? = null
) : Serializable

data class UserAttribute (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Unique Id (read-only)
   */
  var id: Long? = null,
  /**
   * Name of user attribute
   */
  var name: String? = null,
  /**
   * Human-friendly label for user attribute
   */
  var label: String? = null,
  /**
   * Type of user attribute ("string", "number", "datetime", "yesno", "zipcode")
   */
  var type: String? = null,
  /**
   * Default value for when no value is set on the user
   */
  var default_value: String? = null,
  /**
   * Attribute is a system default (read-only)
   */
  var is_system: Boolean? = null,
  /**
   * Attribute is permanent and cannot be deleted (read-only)
   */
  var is_permanent: Boolean? = null,
  /**
   * If true, users will not be able to view values of this attribute
   */
  var value_is_hidden: Boolean? = null,
  /**
   * Non-admin users can see the values of their attributes and use them in filters
   */
  var user_can_view: Boolean? = null,
  /**
   * Users can change the value of this attribute for themselves
   */
  var user_can_edit: Boolean? = null,
  /**
   * Destinations to which a hidden attribute may be sent. Once set, cannot be edited.
   */
  var hidden_value_domain_whitelist: String? = null
) : Serializable

/**
 * An array of user attribute types that are allowed to be used in filters on this field. Valid values are: "advanced_filter_string", "advanced_filter_number", "advanced_filter_datetime", "string", "number", "datetime", "relative_url", "yesno", "zipcode".
 */
enum class UserAttributeFilterTypes : Serializable {
  advanced_filter_string,
  advanced_filter_number,
  advanced_filter_datetime,
  string,
  number,
  datetime,
  relative_url,
  yesno,
  zipcode
}

data class UserAttributeGroupValue (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Unique Id of this group-attribute relation (read-only)
   */
  var id: Long? = null,
  /**
   * Id of group (read-only)
   */
  var group_id: Long? = null,
  /**
   * Id of user attribute (read-only)
   */
  var user_attribute_id: Long? = null,
  /**
   * If true, the "value" field will be null, because the attribute settings block access to this value (read-only)
   */
  var value_is_hidden: Boolean? = null,
  /**
   * Precedence for resolving value for user (read-only)
   */
  var rank: Long? = null,
  /**
   * Value of user attribute for group (read-only)
   */
  var value: String? = null
) : Serializable

data class UserAttributeWithValue (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Name of user attribute (read-only)
   */
  var name: String? = null,
  /**
   * Human-friendly label for user attribute (read-only)
   */
  var label: String? = null,
  /**
   * Precedence for setting value on user (lowest wins) (read-only)
   */
  var rank: Long? = null,
  /**
   * Value of attribute for user
   */
  var value: String? = null,
  /**
   * Id of User (read-only)
   */
  var user_id: Long? = null,
  /**
   * Can the user set this value (read-only)
   */
  var user_can_edit: Boolean? = null,
  /**
   * If true, the "value" field will be null, because the attribute settings block access to this value (read-only)
   */
  var value_is_hidden: Boolean? = null,
  /**
   * Id of User Attribute (read-only)
   */
  var user_attribute_id: Long? = null,
  /**
   * How user got this value for this attribute (read-only)
   */
  var source: String? = null,
  /**
   * If this user attribute is hidden, whitelist of destinations to which it may be sent. (read-only)
   */
  var hidden_value_domain_whitelist: String? = null
) : Serializable

data class UserIdOnly (
  /**
   * Unique Id (read-only)
   */
  var id: Long? = null
) : Serializable

data class UserLoginLockout (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Hash of user's client id (read-only)
   */
  var key: String? = null,
  /**
   * Authentication method for login failures (read-only)
   */
  var auth_type: String? = null,
  /**
   * IP address of most recent failed attempt (read-only)
   */
  var ip: String? = null,
  /**
   * User ID (read-only)
   */
  var user_id: Long? = null,
  /**
   * Remote ID of user if using LDAP (read-only)
   */
  var remote_id: String? = null,
  /**
   * User's name (read-only)
   */
  var full_name: String? = null,
  /**
   * Email address associated with the user's account (read-only)
   */
  var email: String? = null,
  /**
   * Number of failures that triggered the lockout (read-only)
   */
  var fail_count: Long? = null,
  /**
   * Time when lockout was triggered (read-only)
   */
  var lockout_at: Date? = null
) : Serializable

data class UserPublic (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Unique Id (read-only)
   */
  var id: Long? = null,
  /**
   * First Name (read-only)
   */
  var first_name: String? = null,
  /**
   * Last Name (read-only)
   */
  var last_name: String? = null,
  /**
   * Full name for display (available only if both first_name and last_name are set) (read-only)
   */
  var display_name: String? = null,
  /**
   * URL for the avatar image (may be generic) (read-only)
   */
  var avatar_url: UriString? = null,
  /**
   * Link to get this item (read-only)
   */
  var url: UriString? = null
) : Serializable

data class ValidationError (
  /**
   * Error details (read-only)
   */
  var message: String,
  /**
   * Error detail array (read-only)
   */
  var errors: Array<ValidationErrorDetail>? = null,
  /**
   * Documentation link (read-only)
   */
  var documentation_url: UriString
) : Serializable

data class ValidationErrorDetail (
  /**
   * Field with error (read-only)
   */
  var field: String? = null,
  /**
   * Error code (read-only)
   */
  var code: String? = null,
  /**
   * Error info message (read-only)
   */
  var message: String? = null,
  /**
   * Documentation link (read-only)
   */
  var documentation_url: UriString
) : Serializable

/**
 * The name of the starting day of the week. Valid values are: "monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday".
 */
enum class WeekStartDay : Serializable {
  monday,
  tuesday,
  wednesday,
  thursday,
  friday,
  saturday,
  sunday
}

data class WelcomeEmailTest (
  /**
   * The content that would be sent in the body of a custom welcome email
   */
  var content: String? = null,
  /**
   * The subject that would be sent for the custom welcome email
   */
  var subject: String? = null,
  /**
   * The header that would be sent in the body of a custom welcome email
   */
  var header: String? = null
) : Serializable

data class WhitelabelConfiguration (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * Unique Id (read-only)
   */
  var id: Long? = null,
  /**
   * Customer logo image. Expected base64 encoded data (write-only)
   */
  var logo_file: String? = null,
  /**
   * Logo image url (read-only) (read-only)
   */
  var logo_url: String? = null,
  /**
   * Custom favicon image. Expected base64 encoded data (write-only)
   */
  var favicon_file: String? = null,
  /**
   * Favicon image url (read-only) (read-only)
   */
  var favicon_url: String? = null,
  /**
   * Default page title
   */
  var default_title: String? = null,
  /**
   * Boolean to toggle showing help menus
   */
  var show_help_menu: Boolean? = null,
  /**
   * Boolean to toggle showing docs
   */
  var show_docs: Boolean? = null,
  /**
   * Boolean to toggle showing email subscription options.
   */
  var show_email_sub_options: Boolean? = null,
  /**
   * Boolean to toggle mentions of Looker in emails
   */
  var allow_looker_mentions: Boolean? = null,
  /**
   * Boolean to toggle links to Looker in emails
   */
  var allow_looker_links: Boolean? = null,
  /**
   * Allow subject line and email heading customization in customized emails”
   */
  var custom_welcome_email_advanced: Boolean? = null,
  /**
   * Remove the word Looker from appearing in the account setup page
   */
  var setup_mentions: Boolean? = null,
  /**
   * Remove Looker logo from Alerts
   */
  var alerts_logo: Boolean? = null,
  /**
   * Remove Looker links from Alerts
   */
  var alerts_links: Boolean? = null,
  /**
   * Remove Looker mentions in home folder page when you don’t have any items saved
   */
  var folders_mentions: Boolean? = null
) : Serializable

data class Workspace (
  /**
   * Operations the current user is able to perform on this object (read-only)
   */
  var can: Map<String,Boolean>? = null,
  /**
   * The unique id of this user workspace. Predefined workspace ids include "production" and "dev" (read-only)
   */
  var id: String? = null,
  /**
   * The local state of each project in the workspace (read-only)
   */
  var projects: Array<Project>? = null
) : Serializable

/**
 * Dynamically generated writeable type for ApiSession removes properties:
 * can, sudo_user_id
 */
data class WriteApiSession (
  /**
   * The id of active workspace for this session
   */
  var workspace_id: String? = null
) : Serializable

/**
 * Dynamically generated writeable type for BackupConfiguration removes properties:
 * can, url
 */
data class WriteBackupConfiguration (
  /**
   * Type of backup: looker-s3 or custom-s3
   */
  var type: String? = null,
  /**
   * Name of bucket for custom-s3 backups
   */
  var custom_s3_bucket: String? = null,
  /**
   * Name of region where the bucket is located
   */
  var custom_s3_bucket_region: String? = null,
  /**
   * (Write-Only) AWS S3 key used for custom-s3 backups
   */
  var custom_s3_key: String? = null,
  /**
   * (Write-Only) AWS S3 secret used for custom-s3 backups
   */
  var custom_s3_secret: String? = null
) : Serializable

/**
 * Dynamically generated writeable type for ColorCollection removes properties:
 * id
 */
data class WriteColorCollection (
  /**
   * Label of color collection
   */
  var label: String? = null,
  /**
   * Array of categorical palette definitions
   */
  var categoricalPalettes: Array<DiscretePalette>? = null,
  /**
   * Array of discrete palette definitions
   */
  var sequentialPalettes: Array<ContinuousPalette>? = null,
  /**
   * Array of diverging palette definitions
   */
  var divergingPalettes: Array<ContinuousPalette>? = null
) : Serializable

/**
 * Dynamically generated writeable type for ContentFavorite removes properties:
 * id, look_id, dashboard_id, look
 */
data class WriteContentFavorite (
  /**
   * User Id which owns this ContentFavorite
   */
  var user_id: Long? = null,
  /**
   * Content Metadata Id associated with this ContentFavorite
   */
  var content_metadata_id: Long? = null,
  var dashboard: WriteDashboardBase? = null
) : Serializable

/**
 * Dynamically generated writeable type for ContentMeta removes properties:
 * can, id, name, parent_id, dashboard_id, look_id, folder_id, content_type, inheriting_id, slug, space_id
 */
data class WriteContentMeta (
  /**
   * Whether content inherits its access levels from parent
   */
  var inherits: Boolean? = null
) : Serializable

/**
 * Dynamically generated writeable type for CreateDashboardFilter removes properties:
 * id, field
 */
data class WriteCreateDashboardFilter (
  /**
   * Id of Dashboard
   */
  var dashboard_id: String,
  /**
   * Name of filter
   */
  var name: String,
  /**
   * Title of filter
   */
  var title: String,
  /**
   * Type of filter: one of date, number, string, or field
   */
  var type: String,
  /**
   * Default value of filter
   */
  var default_value: String? = null,
  /**
   * Model of filter (required if type = field)
   */
  var model: String? = null,
  /**
   * Explore of filter (required if type = field)
   */
  var explore: String? = null,
  /**
   * Dimension of filter (required if type = field)
   */
  var dimension: String? = null,
  /**
   * Display order of this filter relative to other filters
   */
  var row: Long? = null,
  /**
   * Array of listeners for faceted filters
   */
  var listens_to_filters: Array<String>? = null,
  /**
   * Whether the filter allows multiple filter values
   */
  var allow_multiple_values: Boolean? = null,
  /**
   * Whether the filter requires a value to run the dashboard
   */
  var required: Boolean? = null,
  /**
   * The visual configuration for this filter. Used to set up how the UI for this filter should appear.
   */
  var ui_config: Map<String,Any>? = null
) : Serializable

/**
 * Dynamically generated writeable type for CreateQueryTask removes properties:
 * can
 */
data class WriteCreateQueryTask (
  /**
   * Id of query to run
   */
  var query_id: Long,
  /**
   * Desired async query result format. Valid values are: "inline_json", "json", "json_detail", "json_fe", "csv", "html", "md", "txt", "xlsx", "gsxml".
   */
  var result_format: ResultFormat,
  /**
   * Source of query task
   */
  var source: String? = null,
  /**
   * Create the task but defer execution
   */
  var deferred: Boolean? = null,
  /**
   * Id of look associated with query.
   */
  var look_id: Long? = null,
  /**
   * Id of dashboard associated with query.
   */
  var dashboard_id: String? = null
) : Serializable

/**
 * Dynamically generated writeable type for CredentialsEmail removes properties:
 * can, created_at, is_disabled, logged_in_at, password_reset_url, type, url, user_url
 */
data class WriteCredentialsEmail (
  /**
   * EMail address used for user login
   */
  var email: String? = null,
  /**
   * Force the user to change their password upon their next login
   */
  var forced_password_reset_at_next_login: Boolean? = null
) : Serializable

/**
 * Dynamically generated writeable type for CustomWelcomeEmail removes properties:
 * can
 */
data class WriteCustomWelcomeEmail (
  /**
   * If true, custom email content will replace the default body of welcome emails
   */
  var enabled: Boolean? = null,
  /**
   * The HTML to use as custom content for welcome emails. Script elements and other potentially dangerous markup will be removed.
   */
  var content: String? = null,
  /**
   * The text to appear in the email subject line.
   */
  var subject: String? = null,
  /**
   * The text to appear in the header line of the email body.
   */
  var header: String? = null
) : Serializable

/**
 * Dynamically generated writeable type for Dashboard removes properties:
 * can, content_favorite_id, content_metadata_id, id, model, readonly, refresh_interval_to_i, user_id, created_at, dashboard_elements, dashboard_filters, dashboard_layouts, deleted_at, deleter_id, edit_uri, favorite_count, last_accessed_at, last_viewed_at, view_count
 */
data class WriteDashboard (
  /**
   * Description
   */
  var description: String? = null,
  /**
   * Is Hidden
   */
  var hidden: Boolean? = null,
  /**
   * Timezone in which the Dashboard will run by default.
   */
  var query_timezone: String? = null,
  /**
   * Refresh Interval, as a time duration phrase like "2 hours 30 minutes". A number with no time units will be interpreted as whole seconds.
   */
  var refresh_interval: String? = null,
  var folder: WriteFolderBase? = null,
  /**
   * Dashboard Title
   */
  var title: String? = null,
  var space: WriteSpaceBase? = null,
  /**
   * Background color
   */
  var background_color: String? = null,
  /**
   * Enables crossfiltering in dashboards - only available in dashboards-next (beta)
   */
  var crossfilter_enabled: Boolean? = null,
  /**
   * Whether or not a dashboard is 'soft' deleted.
   */
  var deleted: Boolean? = null,
  /**
   * configuration option that governs how dashboard loading will happen.
   */
  var load_configuration: String? = null,
  /**
   * Links this dashboard to a particular LookML dashboard such that calling a **sync** operation on that LookML dashboard will update this dashboard to match.
   */
  var lookml_link_id: String? = null,
  /**
   * Show filters bar.  **Security Note:** This property only affects the *cosmetic* appearance of the dashboard, not a user's ability to access data. Hiding the filters bar does **NOT** prevent users from changing filters by other means. For information on how to set up secure data access control policies, see [Control User Access to Data](https://looker.com/docs/r/api/control-access)
   */
  var show_filters_bar: Boolean? = null,
  /**
   * Show title
   */
  var show_title: Boolean? = null,
  /**
   * Content Metadata Slug
   */
  var slug: String? = null,
  /**
   * Id of Space
   */
  var space_id: String? = null,
  /**
   * Id of folder
   */
  var folder_id: String? = null,
  /**
   * Color of text on text tiles
   */
  var text_tile_text_color: String? = null,
  /**
   * Tile background color
   */
  var tile_background_color: String? = null,
  /**
   * Tile text color
   */
  var tile_text_color: String? = null,
  /**
   * Title color
   */
  var title_color: String? = null,
  var appearance: DashboardAppearance? = null,
  /**
   * The preferred route for viewing this dashboard (ie: dashboards or dashboards-next)
   */
  var preferred_viewer: String? = null
) : Serializable

/**
 * Dynamically generated writeable type for DashboardBase removes properties:
 * can, content_favorite_id, content_metadata_id, description, hidden, id, model, query_timezone, readonly, refresh_interval, refresh_interval_to_i, title, user_id
 */
data class WriteDashboardBase (
  var folder: WriteFolderBase? = null,
  var space: WriteSpaceBase? = null
) : Serializable

/**
 * Dynamically generated writeable type for DashboardElement removes properties:
 * can, body_text_as_html, edit_uri, id, lookml_link_id, note_text_as_html, refresh_interval_to_i, alert_count, title_text_as_html, subtitle_text_as_html
 */
data class WriteDashboardElement (
  /**
   * Text tile body text
   */
  var body_text: String? = null,
  /**
   * Id of Dashboard
   */
  var dashboard_id: String? = null,
  var look: WriteLookWithQuery? = null,
  /**
   * Id Of Look
   */
  var look_id: String? = null,
  /**
   * ID of merge result
   */
  var merge_result_id: String? = null,
  /**
   * Note Display
   */
  var note_display: String? = null,
  /**
   * Note State
   */
  var note_state: String? = null,
  /**
   * Note Text
   */
  var note_text: String? = null,
  var query: WriteQuery? = null,
  /**
   * Id Of Query
   */
  var query_id: Long? = null,
  /**
   * Refresh Interval
   */
  var refresh_interval: String? = null,
  var result_maker: WriteResultMakerWithIdVisConfigAndDynamicFields? = null,
  /**
   * ID of the ResultMakerLookup entry.
   */
  var result_maker_id: Long? = null,
  /**
   * Text tile subtitle text
   */
  var subtitle_text: String? = null,
  /**
   * Title of dashboard element
   */
  var title: String? = null,
  /**
   * Whether title is hidden
   */
  var title_hidden: Boolean? = null,
  /**
   * Text tile title
   */
  var title_text: String? = null,
  /**
   * Type
   */
  var type: String? = null
) : Serializable

/**
 * Dynamically generated writeable type for DashboardFilter removes properties:
 * can, id, dashboard_id, field
 */
data class WriteDashboardFilter (
  /**
   * Name of filter
   */
  var name: String? = null,
  /**
   * Title of filter
   */
  var title: String? = null,
  /**
   * Type of filter: one of date, number, string, or field
   */
  var type: String? = null,
  /**
   * Default value of filter
   */
  var default_value: String? = null,
  /**
   * Model of filter (required if type = field)
   */
  var model: String? = null,
  /**
   * Explore of filter (required if type = field)
   */
  var explore: String? = null,
  /**
   * Dimension of filter (required if type = field)
   */
  var dimension: String? = null,
  /**
   * Display order of this filter relative to other filters
   */
  var row: Long? = null,
  /**
   * Array of listeners for faceted filters
   */
  var listens_to_filters: Array<String>? = null,
  /**
   * Whether the filter allows multiple filter values
   */
  var allow_multiple_values: Boolean? = null,
  /**
   * Whether the filter requires a value to run the dashboard
   */
  var required: Boolean? = null,
  /**
   * The visual configuration for this filter. Used to set up how the UI for this filter should appear.
   */
  var ui_config: Map<String,Any>? = null
) : Serializable

/**
 * Dynamically generated writeable type for DashboardLayout removes properties:
 * can, id, deleted, dashboard_title, dashboard_layout_components
 */
data class WriteDashboardLayout (
  /**
   * Id of Dashboard
   */
  var dashboard_id: String? = null,
  /**
   * Type
   */
  var type: String? = null,
  /**
   * Is Active
   */
  var active: Boolean? = null,
  /**
   * Column Width
   */
  var column_width: Long? = null,
  /**
   * Width
   */
  var width: Long? = null
) : Serializable

/**
 * Dynamically generated writeable type for DashboardLayoutComponent removes properties:
 * can, id, deleted, element_title, element_title_hidden, vis_type
 */
data class WriteDashboardLayoutComponent (
  /**
   * Id of Dashboard Layout
   */
  var dashboard_layout_id: String? = null,
  /**
   * Id Of Dashboard Element
   */
  var dashboard_element_id: String? = null,
  /**
   * Row
   */
  var row: Long? = null,
  /**
   * Column
   */
  var column: Long? = null,
  /**
   * Width
   */
  var width: Long? = null,
  /**
   * Height
   */
  var height: Long? = null
) : Serializable

/**
 * Dynamically generated writeable type for Datagroup removes properties:
 * can, created_at, id, model_name, name, trigger_check_at, trigger_error, trigger_value
 */
data class WriteDatagroup (
  /**
   * UNIX timestamp before which cache entries are considered stale. Cannot be in the future.
   */
  var stale_before: Long? = null,
  /**
   * UNIX timestamp at which this entry became triggered. Cannot be in the future.
   */
  var triggered_at: Long? = null
) : Serializable

/**
 * Dynamically generated writeable type for DBConnection removes properties:
 * can, dialect, snippets, uses_oauth, created_at, user_id, example, last_regen_at, last_reap_at, managed
 */
data class WriteDBConnection (
  /**
   * Name of the connection. Also used as the unique identifier
   */
  var name: String? = null,
  /**
   * Host name/address of server
   */
  var host: String? = null,
  /**
   * Port number on server
   */
  var port: String? = null,
  /**
   * Username for server authentication
   */
  var username: String? = null,
  /**
   * (Write-Only) Password for server authentication
   */
  var password: String? = null,
  /**
   * (Write-Only) Base64 encoded Certificate body for server authentication (when appropriate for dialect).
   */
  var certificate: String? = null,
  /**
   * (Write-Only) Certificate keyfile type - .json or .p12
   */
  var file_type: String? = null,
  /**
   * Database name
   */
  var database: String? = null,
  /**
   * Time zone of database
   */
  var db_timezone: String? = null,
  /**
   * Timezone to use in queries
   */
  var query_timezone: String? = null,
  /**
   * Scheme name
   */
  var schema: String? = null,
  /**
   * Maximum number of concurrent connection to use
   */
  var max_connections: Long? = null,
  /**
   * Maximum size of query in GBs (BigQuery only, can be a user_attribute name)
   */
  var max_billing_gigabytes: String? = null,
  /**
   * Use SSL/TLS when connecting to server
   */
  var ssl: Boolean? = null,
  /**
   * Verify the SSL
   */
  var verify_ssl: Boolean? = null,
  /**
   * Name of temporary database (if used)
   */
  var tmp_db_name: String? = null,
  /**
   * Additional params to add to JDBC connection string
   */
  var jdbc_additional_params: String? = null,
  /**
   * Connection Pool Timeout, in seconds
   */
  var pool_timeout: Long? = null,
  /**
   * (Read/Write) SQL Dialect name
   */
  var dialect_name: String? = null,
  /**
   * (Limited access feature) Are per user db credentials enabled. Enabling will remove previously set username and password
   */
  var user_db_credentials: Boolean? = null,
  /**
   * Fields whose values map to user attribute names
   */
  var user_attribute_fields: Array<String>? = null,
  /**
   * Cron string specifying when maintenance such as PDT trigger checks and drops should be performed
   */
  var maintenance_cron: String? = null,
  /**
   * Precache tables in the SQL Runner
   */
  var sql_runner_precache_tables: Boolean? = null,
  /**
   * SQL statements (semicolon separated) to issue after connecting to the database. Requires `custom_after_connect_statements` license feature
   */
  var after_connect_statements: String? = null,
  var pdt_context_override: WriteDBConnectionOverride? = null
) : Serializable

/**
 * Dynamically generated writeable type for DBConnectionOverride removes properties:
 * has_password
 */
data class WriteDBConnectionOverride (
  /**
   * Context in which to override (`pdt` is the only allowed value)
   */
  var context: String? = null,
  /**
   * Host name/address of server
   */
  var host: String? = null,
  /**
   * Port number on server
   */
  var port: String? = null,
  /**
   * Username for server authentication
   */
  var username: String? = null,
  /**
   * (Write-Only) Password for server authentication
   */
  var password: String? = null,
  /**
   * (Write-Only) Base64 encoded Certificate body for server authentication (when appropriate for dialect).
   */
  var certificate: String? = null,
  /**
   * (Write-Only) Certificate keyfile type - .json or .p12
   */
  var file_type: String? = null,
  /**
   * Database name
   */
  var database: String? = null,
  /**
   * Scheme name
   */
  var schema: String? = null,
  /**
   * Additional params to add to JDBC connection string
   */
  var jdbc_additional_params: String? = null,
  /**
   * SQL statements (semicolon separated) to issue after connecting to the database. Requires `custom_after_connect_statements` license feature
   */
  var after_connect_statements: String? = null
) : Serializable

/**
 * Dynamically generated writeable type for FolderBase removes properties:
 * id, content_metadata_id, created_at, creator_id, child_count, external_id, is_embed, is_embed_shared_root, is_embed_users_root, is_personal, is_personal_descendant, is_shared_root, is_users_root, can
 */
data class WriteFolderBase (
  /**
   * Unique Name
   */
  var name: String,
  /**
   * Id of Parent. If the parent id is null, this is a root-level entry
   */
  var parent_id: String? = null
) : Serializable

/**
 * Dynamically generated writeable type for GitBranch removes properties:
 * can, remote, remote_name, error, message, owner_name, readonly, personal, is_local, is_remote, is_production, ahead_count, behind_count, commit_at, remote_ref
 */
data class WriteGitBranch (
  /**
   * The short name on the local. Updating `name` results in `git checkout <new_name>`
   */
  var name: String? = null,
  /**
   * The resolved ref of this branch. Updating `ref` results in `git reset --hard <new_ref>``.
   */
  var ref: String? = null
) : Serializable

/**
 * Dynamically generated writeable type for Group removes properties:
 * can, contains_current_user, external_group_id, externally_managed, id, include_by_default, user_count
 */
data class WriteGroup (
  /**
   * Group can be used in content access controls
   */
  var can_add_to_content_metadata: Boolean? = null,
  /**
   * Name of group
   */
  var name: String? = null
) : Serializable

/**
 * Dynamically generated writeable type for Homepage removes properties:
 * can, content_metadata_id, created_at, homepage_sections, id, updated_at, user_id, primary_homepage
 */
data class WriteHomepage (
  /**
   * Date of homepage deletion
   */
  var deleted_at: Date? = null,
  /**
   * Description of the homepage
   */
  var description: String? = null,
  /**
   * ids of the homepage sections in the order they should be displayed
   */
  var section_order: Array<Long>? = null,
  /**
   * Title of the homepage
   */
  var title: String? = null
) : Serializable

/**
 * Dynamically generated writeable type for HomepageItem removes properties:
 * can, content_created_by, content_favorite_id, content_metadata_id, content_updated_at, custom_image_url, description, favorite_count, id, image_url, location, section_fetch_time, title, url, view_count
 */
data class WriteHomepageItem (
  /**
   * Custom description entered by the user, if present
   */
  var custom_description: String? = null,
  /**
   * (Write-Only) base64 encoded image data
   */
  var custom_image_data_base64: String? = null,
  /**
   * Custom title entered by the user, if present
   */
  var custom_title: String? = null,
  /**
   * Custom url entered by the user, if present
   */
  var custom_url: String? = null,
  /**
   * Dashboard to base this item on
   */
  var dashboard_id: Long? = null,
  /**
   * Associated Homepage Section
   */
  var homepage_section_id: String? = null,
  /**
   * Look to base this item on
   */
  var look_id: Long? = null,
  /**
   * LookML Dashboard to base this item on
   */
  var lookml_dashboard_id: String? = null,
  /**
   * An arbitrary integer representing the sort order within the section
   */
  var order: Long? = null,
  /**
   * Whether the custom description should be used instead of the content description, if the item is associated with content
   */
  var use_custom_description: Boolean? = null,
  /**
   * Whether the custom image should be used instead of the content image, if the item is associated with content
   */
  var use_custom_image: Boolean? = null,
  /**
   * Whether the custom title should be used instead of the content title, if the item is associated with content
   */
  var use_custom_title: Boolean? = null,
  /**
   * Whether the custom url should be used instead of the content url, if the item is associated with content
   */
  var use_custom_url: Boolean? = null
) : Serializable

/**
 * Dynamically generated writeable type for HomepageSection removes properties:
 * can, created_at, detail_url, homepage_items, id, is_header, updated_at
 */
data class WriteHomepageSection (
  /**
   * Time at which this section was deleted.
   */
  var deleted_at: Date? = null,
  /**
   * Id reference to parent homepage
   */
  var homepage_id: Long? = null,
  /**
   * ids of the homepage items in the order they should be displayed
   */
  var item_order: Array<Long>? = null,
  /**
   * Name of row
   */
  var title: String? = null,
  /**
   * Description of the content found in this section.
   */
  var description: String? = null
) : Serializable

/**
 * Dynamically generated writeable type for Integration removes properties:
 * can, id, integration_hub_id, label, description, supported_formats, supported_action_types, supported_formattings, supported_visualization_formattings, supported_download_settings, icon_url, uses_oauth, required_fields, delegate_oauth
 */
data class WriteIntegration (
  /**
   * Whether the integration is available to users.
   */
  var enabled: Boolean? = null,
  /**
   * Array of params for the integration.
   */
  var params: Array<IntegrationParam>? = null,
  /**
   * Whether the integration is available to users.
   */
  var installed_delegate_oauth_targets: Array<Long>? = null
) : Serializable

/**
 * Dynamically generated writeable type for IntegrationHub removes properties:
 * can, id, label, official, fetch_error_message, has_authorization_token, legal_agreement_signed, legal_agreement_required, legal_agreement_text
 */
data class WriteIntegrationHub (
  /**
   * URL of the hub.
   */
  var url: String? = null,
  /**
   * (Write-Only) An authorization key that will be sent to the integration hub on every request.
   */
  var authorization_token: String? = null
) : Serializable

/**
 * Dynamically generated writeable type for InternalHelpResources removes properties:
 * can
 */
data class WriteInternalHelpResources (
  /**
   * If true and internal help resources content is not blank then the link for internal help resources will be shown in the help menu and the content displayed within Looker
   */
  var enabled: Boolean? = null
) : Serializable

/**
 * Dynamically generated writeable type for InternalHelpResourcesContent removes properties:
 * can
 */
data class WriteInternalHelpResourcesContent (
  /**
   * Text to display in the help menu item which will display the internal help resources
   */
  var organization_name: String? = null,
  /**
   * Content to be displayed in the internal help resources page/modal
   */
  var markdown_content: String? = null
) : Serializable

/**
 * Dynamically generated writeable type for LDAPConfig removes properties:
 * can, default_new_user_groups, default_new_user_roles, groups, has_auth_password, modified_at, modified_by, user_attributes, url
 */
data class WriteLDAPConfig (
  /**
   * Allow alternate email-based login via '/login/email' for admins and for specified users with the 'login_special_email' permission. This option is useful as a fallback during ldap setup, if ldap config problems occur later, or if you need to support some users who are not in your ldap directory. Looker email/password logins are always disabled for regular users when ldap is enabled.
   */
  var alternate_email_login_allowed: Boolean? = null,
  /**
   * (Write-Only)  Password for the LDAP account used to access the LDAP server
   */
  var auth_password: String? = null,
  /**
   * Users will not be allowed to login at all unless a role for them is found in LDAP if set to true
   */
  var auth_requires_role: Boolean? = null,
  /**
   * Distinguished name of LDAP account used to access the LDAP server
   */
  var auth_username: String? = null,
  /**
   * LDAP server hostname
   */
  var connection_host: String? = null,
  /**
   * LDAP host port
   */
  var connection_port: String? = null,
  /**
   * Use Transport Layer Security
   */
  var connection_tls: Boolean? = null,
  /**
   * Do not verify peer when using TLS
   */
  var connection_tls_no_verify: Boolean? = null,
  /**
   * (Write-Only)  Array of ids of groups that will be applied to new users the first time they login via LDAP
   */
  var default_new_user_group_ids: Array<Long>? = null,
  /**
   * (Write-Only)  Array of ids of roles that will be applied to new users the first time they login via LDAP
   */
  var default_new_user_role_ids: Array<Long>? = null,
  /**
   * Enable/Disable LDAP authentication for the server
   */
  var enabled: Boolean? = null,
  /**
   * Don't attempt to do LDAP search result paging (RFC 2696) even if the LDAP server claims to support it.
   */
  var force_no_page: Boolean? = null,
  /**
   * Base dn for finding groups in LDAP searches
   */
  var groups_base_dn: String? = null,
  /**
   * Identifier for a strategy for how Looker will search for groups in the LDAP server
   */
  var groups_finder_type: String? = null,
  /**
   * LDAP Group attribute that signifies the members of the groups. Most commonly 'member'
   */
  var groups_member_attribute: String? = null,
  /**
   * Optional comma-separated list of supported LDAP objectclass for groups when doing groups searches
   */
  var groups_objectclasses: String? = null,
  /**
   * LDAP Group attribute that signifies the user in a group. Most commonly 'dn'
   */
  var groups_user_attribute: String? = null,
  /**
   * (Read/Write) Array of mappings between LDAP Groups and arrays of Looker Role ids
   */
  var groups_with_role_ids: Array<LDAPGroupWrite>? = null,
  /**
   * Merge first-time ldap login to existing user account by email addresses. When a user logs in for the first time via ldap this option will connect this user into their existing account by finding the account with a matching email address. Otherwise a new user account will be created for the user.
   */
  var merge_new_users_by_email: Boolean? = null,
  /**
   * Set user roles in Looker based on groups from LDAP
   */
  var set_roles_from_groups: Boolean? = null,
  /**
   * (Write-Only)  Test LDAP user password. For ldap tests only.
   */
  var test_ldap_password: String? = null,
  /**
   * (Write-Only)  Test LDAP user login id. For ldap tests only.
   */
  var test_ldap_user: String? = null,
  /**
   * Name of user record attributes used to indicate email address field
   */
  var user_attribute_map_email: String? = null,
  /**
   * Name of user record attributes used to indicate first name
   */
  var user_attribute_map_first_name: String? = null,
  /**
   * Name of user record attributes used to indicate last name
   */
  var user_attribute_map_last_name: String? = null,
  /**
   * Name of user record attributes used to indicate unique record id
   */
  var user_attribute_map_ldap_id: String? = null,
  /**
   * (Read/Write) Array of mappings between LDAP User Attributes and arrays of Looker User Attribute ids
   */
  var user_attributes_with_ids: Array<LDAPUserAttributeWrite>? = null,
  /**
   * Distinguished name of LDAP node used as the base for user searches
   */
  var user_bind_base_dn: String? = null,
  /**
   * (Optional) Custom RFC-2254 filter clause for use in finding user during login. Combined via 'and' with the other generated filter clauses.
   */
  var user_custom_filter: String? = null,
  /**
   * Name(s) of user record attributes used for matching user login id (comma separated list)
   */
  var user_id_attribute_names: String? = null,
  /**
   * (Optional) Name of user record objectclass used for finding user during login id
   */
  var user_objectclass: String? = null,
  /**
   * Allow LDAP auth'd users to be members of non-reflected Looker groups. If 'false', user will be removed from non-reflected groups on login.
   */
  var allow_normal_group_membership: Boolean? = null,
  /**
   * LDAP auth'd users will be able to inherit roles from non-reflected Looker groups.
   */
  var allow_roles_from_normal_groups: Boolean? = null,
  /**
   * Allows roles to be directly assigned to LDAP auth'd users.
   */
  var allow_direct_roles: Boolean? = null
) : Serializable

/**
 * Dynamically generated writeable type for LegacyFeature removes properties:
 * can, id, name, description, enabled, disallowed_as_of_version, disable_on_upgrade_to_version, end_of_life_version, documentation_url, approximate_disable_date, approximate_end_of_life_date, has_disabled_on_upgrade
 */
data class WriteLegacyFeature (
  /**
   * Whether this feature has been enabled by a user
   */
  var enabled_locally: Boolean? = null
) : Serializable

/**
 * Dynamically generated writeable type for LookmlModel removes properties:
 * can, explores, has_content, label
 */
data class WriteLookmlModel (
  /**
   * Array of names of connections this model is allowed to use
   */
  var allowed_db_connection_names: Array<String>? = null,
  /**
   * Name of the model. Also used as the unique identifier
   */
  var name: String? = null,
  /**
   * Name of project containing the model
   */
  var project_name: String? = null,
  /**
   * Is this model allowed to use all current and future connections
   */
  var unlimited_db_connections: Boolean? = null
) : Serializable

/**
 * Dynamically generated writeable type for LookWithQuery removes properties:
 * can, content_metadata_id, id, content_favorite_id, created_at, deleted_at, deleter_id, embed_url, excel_file_url, favorite_count, google_spreadsheet_formula, image_embed_url, last_accessed_at, last_updater_id, last_viewed_at, model, public_slug, public_url, short_url, updated_at, view_count, user, url
 */
data class WriteLookWithQuery (
  /**
   * Look Title
   */
  var title: String? = null,
  /**
   * Whether or not a look is 'soft' deleted.
   */
  var deleted: Boolean? = null,
  /**
   * Description
   */
  var description: String? = null,
  /**
   * auto-run query when Look viewed
   */
  var is_run_on_load: Boolean? = null,
  /**
   * Is Public
   */
  var public: Boolean? = null,
  /**
   * Query Id
   */
  var query_id: Long? = null,
  var folder: WriteFolderBase? = null,
  /**
   * Folder Id
   */
  var folder_id: String? = null,
  /**
   * User Id
   */
  var user_id: Long? = null,
  /**
   * Space Id
   */
  var space_id: String? = null,
  var space: WriteSpaceBase? = null,
  var query: WriteQuery? = null
) : Serializable

/**
 * Dynamically generated writeable type for MergeQuery removes properties:
 * can, id, result_maker_id
 */
data class WriteMergeQuery (
  /**
   * Column Limit
   */
  var column_limit: String? = null,
  /**
   * Dynamic Fields
   */
  var dynamic_fields: String? = null,
  /**
   * Pivots
   */
  var pivots: Array<String>? = null,
  /**
   * Sorts
   */
  var sorts: Array<String>? = null,
  /**
   * Source Queries defining the results to be merged.
   */
  var source_queries: Array<MergeQuerySourceQuery>? = null,
  /**
   * Total
   */
  var total: Boolean? = null,
  /**
   * Visualization Config
   */
  var vis_config: Map<String,Any>? = null
) : Serializable

/**
 * Dynamically generated writeable type for ModelSet removes properties:
 * can, all_access, built_in, id, url
 */
data class WriteModelSet (
  var models: Array<String>? = null,
  /**
   * Name of ModelSet
   */
  var name: String? = null
) : Serializable

/**
 * Dynamically generated writeable type for OIDCConfig removes properties:
 * can, default_new_user_groups, default_new_user_roles, groups, modified_at, modified_by, test_slug, user_attributes, url
 */
data class WriteOIDCConfig (
  /**
   * Allow alternate email-based login via '/login/email' for admins and for specified users with the 'login_special_email' permission. This option is useful as a fallback during ldap setup, if ldap config problems occur later, or if you need to support some users who are not in your ldap directory. Looker email/password logins are always disabled for regular users when ldap is enabled.
   */
  var alternate_email_login_allowed: Boolean? = null,
  /**
   * OpenID Provider Audience
   */
  var audience: String? = null,
  /**
   * Users will not be allowed to login at all unless a role for them is found in OIDC if set to true
   */
  var auth_requires_role: Boolean? = null,
  /**
   * OpenID Provider Authorization Url
   */
  var authorization_endpoint: UriString? = null,
  /**
   * (Write-Only) Array of ids of groups that will be applied to new users the first time they login via OIDC
   */
  var default_new_user_group_ids: Array<Long>? = null,
  /**
   * (Write-Only) Array of ids of roles that will be applied to new users the first time they login via OIDC
   */
  var default_new_user_role_ids: Array<Long>? = null,
  /**
   * Enable/Disable OIDC authentication for the server
   */
  var enabled: Boolean? = null,
  /**
   * Name of user record attributes used to indicate groups. Used when 'groups_finder_type' is set to 'grouped_attribute_values'
   */
  var groups_attribute: String? = null,
  /**
   * (Read/Write) Array of mappings between OIDC Groups and arrays of Looker Role ids
   */
  var groups_with_role_ids: Array<OIDCGroupWrite>? = null,
  /**
   * Relying Party Identifier (provided by OpenID Provider)
   */
  var identifier: String? = null,
  /**
   * OpenID Provider Issuer
   */
  var issuer: String? = null,
  /**
   * Merge first-time oidc login to existing user account by email addresses. When a user logs in for the first time via oidc this option will connect this user into their existing account by finding the account with a matching email address by testing the given types of credentials for existing users. Otherwise a new user account will be created for the user. This list (if provided) must be a comma separated list of string like 'email,ldap,google'
   */
  var new_user_migration_types: String? = null,
  /**
   * Array of scopes to request.
   */
  var scopes: Array<String>? = null,
  /**
   * (Write-Only) Relying Party Secret (provided by OpenID Provider)
   */
  var secret: String? = null,
  /**
   * Set user roles in Looker based on groups from OIDC
   */
  var set_roles_from_groups: Boolean? = null,
  /**
   * OpenID Provider Token Url
   */
  var token_endpoint: String? = null,
  /**
   * Name of user record attributes used to indicate email address field
   */
  var user_attribute_map_email: String? = null,
  /**
   * Name of user record attributes used to indicate first name
   */
  var user_attribute_map_first_name: String? = null,
  /**
   * Name of user record attributes used to indicate last name
   */
  var user_attribute_map_last_name: String? = null,
  /**
   * (Read/Write) Array of mappings between OIDC User Attributes and arrays of Looker User Attribute ids
   */
  var user_attributes_with_ids: Array<OIDCUserAttributeWrite>? = null,
  /**
   * OpenID Provider User Information Url
   */
  var userinfo_endpoint: UriString? = null,
  /**
   * Allow OIDC auth'd users to be members of non-reflected Looker groups. If 'false', user will be removed from non-reflected groups on login.
   */
  var allow_normal_group_membership: Boolean? = null,
  /**
   * OIDC auth'd users will inherit roles from non-reflected Looker groups.
   */
  var allow_roles_from_normal_groups: Boolean? = null,
  /**
   * Allows roles to be directly assigned to OIDC auth'd users.
   */
  var allow_direct_roles: Boolean? = null
) : Serializable

/**
 * Dynamically generated writeable type for PasswordConfig removes properties:
 * can
 */
data class WritePasswordConfig (
  /**
   * Minimum number of characters required for a new password.  Must be between 7 and 100
   */
  var min_length: Long? = null,
  /**
   * Require at least one numeric character
   */
  var require_numeric: Boolean? = null,
  /**
   * Require at least one uppercase and one lowercase letter
   */
  var require_upperlower: Boolean? = null,
  /**
   * Require at least one special character
   */
  var require_special: Boolean? = null
) : Serializable

/**
 * Dynamically generated writeable type for PermissionSet removes properties:
 * can, all_access, built_in, id, url
 */
data class WritePermissionSet (
  /**
   * Name of PermissionSet
   */
  var name: String? = null,
  var permissions: Array<String>? = null
) : Serializable

/**
 * Dynamically generated writeable type for Project removes properties:
 * can, id, uses_git, is_example
 */
data class WriteProject (
  /**
   * Project display name
   */
  var name: String? = null,
  /**
   * Git remote repository url
   */
  var git_remote_url: String? = null,
  /**
   * Git username for HTTPS authentication. (For production only, if using user attributes.)
   */
  var git_username: String? = null,
  /**
   * (Write-Only) Git password for HTTPS authentication. (For production only, if using user attributes.)
   */
  var git_password: String? = null,
  /**
   * User attribute name for username in per-user HTTPS authentication.
   */
  var git_username_user_attribute: String? = null,
  /**
   * User attribute name for password in per-user HTTPS authentication.
   */
  var git_password_user_attribute: String? = null,
  /**
   * Name of the git service provider
   */
  var git_service_name: String? = null,
  /**
   * Port that HTTP(S) application server is running on (for PRs, file browsing, etc.)
   */
  var git_application_server_http_port: Long? = null,
  /**
   * Scheme that is running on application server (for PRs, file browsing, etc.) Valid values are: "http", "https".
   */
  var git_application_server_http_scheme: GitApplicationServerHttpScheme? = null,
  /**
   * (Write-Only) Optional secret token with which to authenticate requests to the webhook deploy endpoint. If not set, endpoint is unauthenticated.
   */
  var deploy_secret: String? = null,
  /**
   * (Write-Only) When true, unsets the deploy secret to allow unauthenticated access to the webhook deploy endpoint.
   */
  var unset_deploy_secret: Boolean? = null,
  /**
   * The git pull request policy for this project. Valid values are: "off", "links", "recommended", "required".
   */
  var pull_request_mode: PullRequestMode? = null,
  /**
   * Validation policy: If true, the project must pass validation checks before project changes can be committed to the git repository
   */
  var validation_required: Boolean? = null,
  /**
   * If true, folders are enabled for this project
   */
  var folders_enabled: Boolean? = null,
  /**
   * If true, advanced git release management is enabled for this project
   */
  var git_release_mgmt_enabled: Boolean? = null,
  /**
   * Validation policy: If true, the project can be committed with warnings when `validation_required` is true. (`allow_warnings` does nothing if `validation_required` is false).
   */
  var allow_warnings: Boolean? = null
) : Serializable

/**
 * Dynamically generated writeable type for Query removes properties:
 * can, id, slug, share_url, expanded_share_url, url, has_table_calculations
 */
data class WriteQuery (
  /**
   * Model
   */
  var model: String,
  /**
   * Explore Name
   */
  var view: String,
  /**
   * Fields
   */
  var fields: Array<String>? = null,
  /**
   * Pivots
   */
  var pivots: Array<String>? = null,
  /**
   * Fill Fields
   */
  var fill_fields: Array<String>? = null,
  /**
   * Filters
   */
  var filters: Map<String,Any>? = null,
  /**
   * Filter Expression
   */
  var filter_expression: String? = null,
  /**
   * Sorting for the query results. Use the format `["view.field", ...]` to sort on fields in ascending order. Use the format `["view.field desc", ...]` to sort on fields in descending order. Use `["__UNSORTED__"]` (2 underscores before and after) to disable sorting entirely. Empty sorts `[]` will trigger a default sort.
   */
  var sorts: Array<String>? = null,
  /**
   * Limit
   */
  var limit: String? = null,
  /**
   * Column Limit
   */
  var column_limit: String? = null,
  /**
   * Total
   */
  var total: Boolean? = null,
  /**
   * Raw Total
   */
  var row_total: String? = null,
  /**
   * Fields on which to run subtotals
   */
  var subtotals: Array<String>? = null,
  /**
   * Visualization configuration properties. These properties are typically opaque and differ based on the type of visualization used. There is no specified set of allowed keys. The values can be any type supported by JSON. A "type" key with a string value is often present, and is used by Looker to determine which visualization to present. Visualizations ignore unknown vis_config properties.
   */
  var vis_config: Map<String,Any>? = null,
  /**
   * The filter_config represents the state of the filter UI on the explore page for a given query. When running a query via the Looker UI, this parameter takes precedence over "filters". When creating a query or modifying an existing query, "filter_config" should be set to null. Setting it to any other value could cause unexpected filtering behavior. The format should be considered opaque.
   */
  var filter_config: Map<String,Any>? = null,
  /**
   * Visible UI Sections
   */
  var visible_ui_sections: String? = null,
  /**
   * Dynamic Fields
   */
  var dynamic_fields: String? = null,
  /**
   * Client Id: used to generate shortened explore URLs. If set by client, must be a unique 22 character alphanumeric string. Otherwise one will be generated.
   */
  var client_id: String? = null,
  /**
   * Query Timezone
   */
  var query_timezone: String? = null,
  /**
   * (DEPRECATED) Runtime (Deprecated)
   */
  var runtime: Double? = null
) : Serializable

/**
 * Dynamically generated writeable type for RepositoryCredential removes properties:
 * can, id, root_project_id, remote_url, is_configured
 */
data class WriteRepositoryCredential (
  /**
   * Git username for HTTPS authentication.
   */
  var git_username: String? = null,
  /**
   * (Write-Only) Git password for HTTPS authentication.
   */
  var git_password: String? = null,
  /**
   * Public deploy key for SSH authentication.
   */
  var ssh_public_key: String? = null
) : Serializable

/**
 * Dynamically generated writeable type for ResultMakerWithIdVisConfigAndDynamicFields removes properties:
 * id, dynamic_fields, filterables, sorts, merge_result_id, total, query_id, sql_query_id, vis_config
 */
data class WriteResultMakerWithIdVisConfigAndDynamicFields (
  var query: WriteQuery? = null
) : Serializable

/**
 * Dynamically generated writeable type for Role removes properties:
 * can, id, url, users_url
 */
data class WriteRole (
  /**
   * Name of Role
   */
  var name: String? = null,
  var permission_set: WritePermissionSet? = null,
  /**
   * (Write-Only) Id of permission set
   */
  var permission_set_id: Long? = null,
  var model_set: WriteModelSet? = null,
  /**
   * (Write-Only) Id of model set
   */
  var model_set_id: Long? = null
) : Serializable

/**
 * Dynamically generated writeable type for SamlConfig removes properties:
 * can, test_slug, modified_at, modified_by, default_new_user_roles, default_new_user_groups, groups, user_attributes, url
 */
data class WriteSamlConfig (
  /**
   * Enable/Disable Saml authentication for the server
   */
  var enabled: Boolean? = null,
  /**
   * Identity Provider Certificate (provided by IdP)
   */
  var idp_cert: String? = null,
  /**
   * Identity Provider Url (provided by IdP)
   */
  var idp_url: String? = null,
  /**
   * Identity Provider Issuer (provided by IdP)
   */
  var idp_issuer: String? = null,
  /**
   * Identity Provider Audience (set in IdP config). Optional in Looker. Set this only if you want Looker to validate the audience value returned by the IdP.
   */
  var idp_audience: String? = null,
  /**
   * Count of seconds of clock drift to allow when validating timestamps of assertions.
   */
  var allowed_clock_drift: Long? = null,
  /**
   * Name of user record attributes used to indicate email address field
   */
  var user_attribute_map_email: String? = null,
  /**
   * Name of user record attributes used to indicate first name
   */
  var user_attribute_map_first_name: String? = null,
  /**
   * Name of user record attributes used to indicate last name
   */
  var user_attribute_map_last_name: String? = null,
  /**
   * Merge first-time saml login to existing user account by email addresses. When a user logs in for the first time via saml this option will connect this user into their existing account by finding the account with a matching email address by testing the given types of credentials for existing users. Otherwise a new user account will be created for the user. This list (if provided) must be a comma separated list of string like 'email,ldap,google'
   */
  var new_user_migration_types: String? = null,
  /**
   * Allow alternate email-based login via '/login/email' for admins and for specified users with the 'login_special_email' permission. This option is useful as a fallback during ldap setup, if ldap config problems occur later, or if you need to support some users who are not in your ldap directory. Looker email/password logins are always disabled for regular users when ldap is enabled.
   */
  var alternate_email_login_allowed: Boolean? = null,
  /**
   * (Write-Only) Array of ids of roles that will be applied to new users the first time they login via Saml
   */
  var default_new_user_role_ids: Array<Long>? = null,
  /**
   * (Write-Only) Array of ids of groups that will be applied to new users the first time they login via Saml
   */
  var default_new_user_group_ids: Array<Long>? = null,
  /**
   * Set user roles in Looker based on groups from Saml
   */
  var set_roles_from_groups: Boolean? = null,
  /**
   * Name of user record attributes used to indicate groups. Used when 'groups_finder_type' is set to 'grouped_attribute_values'
   */
  var groups_attribute: String? = null,
  /**
   * (Read/Write) Array of mappings between Saml Groups and arrays of Looker Role ids
   */
  var groups_with_role_ids: Array<SamlGroupWrite>? = null,
  /**
   * Users will not be allowed to login at all unless a role for them is found in Saml if set to true
   */
  var auth_requires_role: Boolean? = null,
  /**
   * (Read/Write) Array of mappings between Saml User Attributes and arrays of Looker User Attribute ids
   */
  var user_attributes_with_ids: Array<SamlUserAttributeWrite>? = null,
  /**
   * Identifier for a strategy for how Looker will find groups in the SAML response. One of ['grouped_attribute_values', 'individual_attributes']
   */
  var groups_finder_type: String? = null,
  /**
   * Value for group attribute used to indicate membership. Used when 'groups_finder_type' is set to 'individual_attributes'
   */
  var groups_member_value: String? = null,
  /**
   * Bypass the login page when user authentication is required. Redirect to IdP immediately instead.
   */
  var bypass_login_page: Boolean? = null,
  /**
   * Allow SAML auth'd users to be members of non-reflected Looker groups. If 'false', user will be removed from non-reflected groups on login.
   */
  var allow_normal_group_membership: Boolean? = null,
  /**
   * SAML auth'd users will inherit roles from non-reflected Looker groups.
   */
  var allow_roles_from_normal_groups: Boolean? = null,
  /**
   * Allows roles to be directly assigned to SAML auth'd users.
   */
  var allow_direct_roles: Boolean? = null
) : Serializable

/**
 * Dynamically generated writeable type for ScheduledPlan removes properties:
 * id, created_at, updated_at, title, user, next_run_at, last_run_at, can
 */
data class WriteScheduledPlan (
  /**
   * Name of this scheduled plan
   */
  var name: String? = null,
  /**
   * User Id which owns this scheduled plan
   */
  var user_id: Long? = null,
  /**
   * Whether schedule is run as recipient (only applicable for email recipients)
   */
  var run_as_recipient: Boolean? = null,
  /**
   * Whether the ScheduledPlan is enabled
   */
  var enabled: Boolean? = null,
  /**
   * Id of a look
   */
  var look_id: Long? = null,
  /**
   * Id of a dashboard
   */
  var dashboard_id: Long? = null,
  /**
   * Id of a LookML dashboard
   */
  var lookml_dashboard_id: String? = null,
  /**
   * Query string to run look or dashboard with
   */
  var filters_string: String? = null,
  /**
   * (DEPRECATED) Alias for filters_string field
   */
  var dashboard_filters: String? = null,
  /**
   * Delivery should occur if running the dashboard or look returns results
   */
  var require_results: Boolean? = null,
  /**
   * Delivery should occur if the dashboard look does not return results
   */
  var require_no_results: Boolean? = null,
  /**
   * Delivery should occur if data have changed since the last run
   */
  var require_change: Boolean? = null,
  /**
   * Will run an unlimited query and send all results.
   */
  var send_all_results: Boolean? = null,
  /**
   * Vixie-Style crontab specification when to run
   */
  var crontab: String? = null,
  /**
   * Name of a datagroup; if specified will run when datagroup triggered (can't be used with cron string)
   */
  var datagroup: String? = null,
  /**
   * Timezone for interpreting the specified crontab (default is Looker instance timezone)
   */
  var timezone: String? = null,
  /**
   * Query id
   */
  var query_id: String? = null,
  /**
   * Scheduled plan destinations
   */
  var scheduled_plan_destination: Array<ScheduledPlanDestination>? = null,
  /**
   * Whether the plan in question should only be run once (usually for testing)
   */
  var run_once: Boolean? = null,
  /**
   * Whether links back to Looker should be included in this ScheduledPlan
   */
  var include_links: Boolean? = null,
  /**
   * The size of paper the PDF should be formatted to fit. Valid values are: "letter", "legal", "tabloid", "a0", "a1", "a2", "a3", "a4", "a5".
   */
  var pdf_paper_size: String? = null,
  /**
   * Whether the PDF should be formatted for landscape orientation
   */
  var pdf_landscape: Boolean? = null,
  /**
   * Whether this schedule is in an embed context or not
   */
  var embed: Boolean? = null,
  /**
   * Color scheme of the dashboard if applicable
   */
  var color_theme: String? = null,
  /**
   * Whether or not to expand table vis to full length
   */
  var long_tables: Boolean? = null,
  /**
   * The pixel width at which we render the inline table visualizations
   */
  var inline_table_width: Long? = null
) : Serializable

/**
 * Dynamically generated writeable type for SessionConfig removes properties:
 * can
 */
data class WriteSessionConfig (
  /**
   * Allow users to have persistent sessions when they login
   */
  var allow_persistent_sessions: Boolean? = null,
  /**
   * Number of minutes for user sessions.  Must be between 5 and 43200
   */
  var session_minutes: Long? = null,
  /**
   * Allow users to have an unbounded number of concurrent sessions (otherwise, users will be limited to only one session at a time).
   */
  var unlimited_sessions_per_user: Boolean? = null,
  /**
   * Enforce session logout for sessions that are inactive for 15 minutes.
   */
  var use_inactivity_based_logout: Boolean? = null,
  /**
   * Track location of session when user logs in.
   */
  var track_session_location: Boolean? = null
) : Serializable

/**
 * Dynamically generated writeable type for SpaceBase removes properties:
 * id, content_metadata_id, created_at, creator_id, child_count, external_id, is_embed, is_embed_shared_root, is_embed_users_root, is_personal, is_personal_descendant, is_shared_root, is_users_root, can
 */
data class WriteSpaceBase (
  /**
   * Unique Name
   */
  var name: String,
  /**
   * Id of Parent. If the parent id is null, this is a root-level entry
   */
  var parent_id: String? = null
) : Serializable

/**
 * Dynamically generated writeable type for Theme removes properties:
 * can, id
 */
data class WriteTheme (
  /**
   * Timestamp for when this theme becomes active. Null=always
   */
  var begin_at: Date? = null,
  /**
   * Timestamp for when this theme expires. Null=never
   */
  var end_at: Date? = null,
  /**
   * Name of theme. Can only be alphanumeric and underscores.
   */
  var name: String? = null,
  var settings: ThemeSettings? = null
) : Serializable

/**
 * Dynamically generated writeable type for User removes properties:
 * can, avatar_url, avatar_url_without_sizing, credentials_api3, credentials_embed, credentials_google, credentials_ldap, credentials_looker_openid, credentials_oidc, credentials_saml, credentials_totp, display_name, email, embed_group_space_id, group_ids, id, looker_versions, personal_space_id, personal_folder_id, presumed_looker_employee, role_ids, sessions, verified_looker_employee, roles_externally_managed, allow_direct_roles, allow_normal_group_membership, allow_roles_from_normal_groups, url
 */
data class WriteUser (
  var credentials_email: WriteCredentialsEmail? = null,
  /**
   * First name
   */
  var first_name: String? = null,
  /**
   * ID string for user's home space
   */
  var home_space_id: String? = null,
  /**
   * ID string for user's home folder
   */
  var home_folder_id: String? = null,
  /**
   * Account has been disabled
   */
  var is_disabled: Boolean? = null,
  /**
   * Last name
   */
  var last_name: String? = null,
  /**
   * User's preferred locale. User locale takes precedence over Looker's system-wide default locale. Locale determines language of display strings and date and numeric formatting in API responses. Locale string must be a 2 letter language code or a combination of language code and region code: 'en' or 'en-US', for example.
   */
  var locale: String? = null,
  /**
   * User's dev workspace has been checked for presence of applicable production projects
   */
  var models_dir_validated: Boolean? = null,
  /**
   * Per user dictionary of undocumented state information owned by the Looker UI.
   */
  var ui_state: Map<String,Any>? = null
) : Serializable

/**
 * Dynamically generated writeable type for UserAttribute removes properties:
 * can, id, is_system, is_permanent
 */
data class WriteUserAttribute (
  /**
   * Name of user attribute
   */
  var name: String? = null,
  /**
   * Human-friendly label for user attribute
   */
  var label: String? = null,
  /**
   * Type of user attribute ("string", "number", "datetime", "yesno", "zipcode")
   */
  var type: String? = null,
  /**
   * Default value for when no value is set on the user
   */
  var default_value: String? = null,
  /**
   * If true, users will not be able to view values of this attribute
   */
  var value_is_hidden: Boolean? = null,
  /**
   * Non-admin users can see the values of their attributes and use them in filters
   */
  var user_can_view: Boolean? = null,
  /**
   * Users can change the value of this attribute for themselves
   */
  var user_can_edit: Boolean? = null,
  /**
   * Destinations to which a hidden attribute may be sent. Once set, cannot be edited.
   */
  var hidden_value_domain_whitelist: String? = null
) : Serializable

/**
 * Dynamically generated writeable type for UserAttributeWithValue removes properties:
 * can, name, label, rank, user_id, user_can_edit, value_is_hidden, user_attribute_id, source, hidden_value_domain_whitelist
 */
data class WriteUserAttributeWithValue (
  /**
   * Value of attribute for user
   */
  var value: String? = null
) : Serializable

/**
 * Dynamically generated writeable type for WhitelabelConfiguration removes properties:
 * can, id, logo_url, favicon_url
 */
data class WriteWhitelabelConfiguration (
  /**
   * Customer logo image. Expected base64 encoded data (write-only)
   */
  var logo_file: String? = null,
  /**
   * Custom favicon image. Expected base64 encoded data (write-only)
   */
  var favicon_file: String? = null,
  /**
   * Default page title
   */
  var default_title: String? = null,
  /**
   * Boolean to toggle showing help menus
   */
  var show_help_menu: Boolean? = null,
  /**
   * Boolean to toggle showing docs
   */
  var show_docs: Boolean? = null,
  /**
   * Boolean to toggle showing email subscription options.
   */
  var show_email_sub_options: Boolean? = null,
  /**
   * Boolean to toggle mentions of Looker in emails
   */
  var allow_looker_mentions: Boolean? = null,
  /**
   * Boolean to toggle links to Looker in emails
   */
  var allow_looker_links: Boolean? = null,
  /**
   * Allow subject line and email heading customization in customized emails”
   */
  var custom_welcome_email_advanced: Boolean? = null,
  /**
   * Remove the word Looker from appearing in the account setup page
   */
  var setup_mentions: Boolean? = null,
  /**
   * Remove Looker logo from Alerts
   */
  var alerts_logo: Boolean? = null,
  /**
   * Remove Looker links from Alerts
   */
  var alerts_links: Boolean? = null,
  /**
   * Remove Looker mentions in home folder page when you don’t have any items saved
   */
  var folders_mentions: Boolean? = null
) : Serializable